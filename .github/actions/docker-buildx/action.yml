name: Build Docker Image
description: Build and push Docker image to the registry
inputs:
  build_args:
    description: Build arguments to pass to the Docker build
    required: false
  context:
    description: Path to the build context
    required: false
    default: ./
  file:
    description: Path to the Dockerfile
    required: true
  gh_registry:
    description: Registry to push the image to
    required: false
    default: ghcr.io
  gh_username:
    description: Github username
    required: true
  gh_token:
    description: Github token
    required: true
  image_name:
    description: Name of the image to build
    required: true
  platform:
    description: Platform to build the image for
    required: false
    default: linux/amd64
outputs:
  version:
    description: Version of the image that was built
    value: ${{ steps.set.outputs.version }}

runs:
  using: composite
  steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the GH Container registry
      uses: docker/login-action@v3
      with:
        password: ${{ inputs.gh_token }}
        registry: ${{ inputs.gh_registry }}
        username: ${{ inputs.gh_username }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.gh_registry }}/${{ github.repository }}/${{ inputs.image_name }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        platforms: ${{ inputs.platform }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.build_args }}

    - name: Set version output
      shell: bash
      id: set
      run: echo "version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> "$GITHUB_OUTPUT"