name: Build Docker Image
description: Build and push Docker image to the registry
inputs:
  acr_registry:
    description: Azure Container Registry to push the image to
    required: true
  acr_username:
    description: Azure Container Registry username
    required: true
  acr_password:
    description: Azure Container Registry password
    required: true
  gh_registry:
    description: Registry to push the image to
    required: true
  gh_username:
    description: Github username
    required: true
  gh_token:
    description: Github token
    required: true
  context:
    description: Path to the build context
    required: true
  file:
    description: Path to the Dockerfile
    required: true
  image_name:
    description: Name of the image to build
    required: true
  version_tag:
    description: Version tag to use for the image
    required: true

runs:
  using: composite
  steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the GH Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.gh_registry }}
        username: ${{ inputs.gh_username }}
        password: ${{ inputs.gh_token }}

    - name: Log in to the Azure Container registry
      uses: docker/login-action@v2
      env:
        REGISTRY: ${{ inputs.acr_registry }}
      with:
        registry: ${{ inputs.acr_registry }}
        username: ${{ inputs.acr_username }}
        password: ${{ inputs.acr_password }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ inputs.gh_registry }}/${{ inputs.image_name }}
          ${{ inputs.acr_registry }}/${{ inputs.image_name }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          type=raw,value=${{ inputs.version_tag }}
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Set version output
      shell: bash
      id: set
      run: echo "version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> "$GITHUB_OUTPUT"