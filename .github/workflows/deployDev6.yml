name: Deploy Dev6

on:
  workflow_dispatch:

env:
  DEPLOY_ENV: dev6
  NODE_VERSION: 18
concurrency:
  group: dev6-deploy
  cancel-in-progress: false

jobs:
  build_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and Push backend
        uses: ./.github/actions/build-and-push
        with:
          acr_registry: ${{ secrets.ACR_REPO_URL }}
          acr_username: ${{ secrets.ACR_ADMIN_USERNAME }}
          acr_password: ${{ secrets.ACR_ADMIN_PASWORD }}
  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-frontend
        name: Build front-end application
        with:
          deploy-env: ${{env.DEPLOY_ENV}}
          smarty-streets-key: ${{ secrets.SMARTY_STREETS_KEY }}
          client-tarball: ./client.tgz
          okta-enabled: true
          okta-url: https://hhs-prime.oktapreview.com
          okta-client-id: 0oa5uvg0531PLkxNP1d7
          azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
  prerelease_backend:
    runs-on: ubuntu-latest
    needs: [build_frontend, build_docker]
    defaults:
      run:
        working-directory: ./ops
    env: # all Azure interaction is through Terraform
      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TERRAFORM_ARM_TENANT_ID }}
      OKTA_API_TOKEN: ${{ secrets.OKTA_API_TOKEN_NONPROD }}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.3.3
      - name: Build ReportStream function app
        uses: ./.github/actions/build-reportstream-functions
        with:
          deploy-env: ${{env.DEPLOY_ENV}}
      - name: Terraform Init
        run: make init-${{ env.DEPLOY_ENV }}
      - name: Terraform deploy (infrastructure and staging slot)
        run: make deploy-${{ env.DEPLOY_ENV }}
      - name: Wait for correct commit to be deployed in staging slot
        timeout-minutes: 5
        run: make wait-for-${{ env.DEPLOY_ENV }}-slot-commit
      - name: Wait for staging deploy to be ready
        timeout-minutes: 1
        run: make wait-for-${{ env.DEPLOY_ENV }}-slot-readiness
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: dev6
      url: https://${{env.DEPLOY_ENV}}.simplereport.gov
    needs: [prerelease_backend]
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Retrieve frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-tarball
      - name: Promote and deploy
        uses: ./.github/actions/deploy-application
        with:
          client-tarball: client.tgz
          deploy-env: ${{ env.DEPLOY_ENV }}
