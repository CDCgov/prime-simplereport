name: Deploy Stg

on:
  push:
    branches:
      - main

env:
  DEPLOY_ENV: stg
  NODE_VERSION: 23

concurrency:
  group: stg-deploy
  cancel-in-progress: false

jobs:
  build_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build and Push backend
        uses: ./.github/actions/build-and-push
        with:
          acr_registry: ${{ secrets.ACR_REPO_URL }}
          acr_username: ${{ secrets.ACR_ADMIN_USERNAME }}
          acr_password: ${{ secrets.ACR_ADMIN_PASWORD }}

  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/build-frontend
        name: Build front-end application
        with:
          azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
          client_tarball: ./client.tgz
          deploy_env: ${{env.DEPLOY_ENV}}
          smarty_streets_key: ${{ secrets.SMARTY_STREETS_KEY }}
          okta_enabled: true
          okta_url: https://hhs-prime.okta.com
          okta_client_id: 0oa62qncijWSeQMuc4h6

  prerelease_backend:
    runs-on: ubuntu-latest
    needs: [build_frontend, build_docker]
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/tf-deploy
        name: Deploy with Terraform
        with:
          azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
          deploy_env: ${{ env.DEPLOY_ENV }}
          terraform_arm_client_id: ${{ secrets.TERRAFORM_ARM_CLIENT_ID }}
          terraform_arm_client_secret: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}
          terraform_arm_subscription_id: ${{ secrets.TERRAFORM_ARM_SUBSCRIPTION_ID }}
          terraform_arm_tenant_id: ${{ secrets.TERRAFORM_ARM_TENANT_ID }}
          okta_api_token: ${{ secrets.OKTA_API_TOKEN }}
      - uses: ./.github/actions/stg-wait-for-slot-commit
        name: Wait for correct commit to be deployed in staging slot
        timeout-minutes: 5
        with:
          deploy_env: ${{ env.DEPLOY_ENV }}
      - uses: ./.github/actions/stg-wait-for-slot-readiness
        name: Wait for staging deploy to be ready
        timeout-minutes: 1
        with:
          deploy_env: ${{ env.DEPLOY_ENV }}

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: stg
      url: https://stg.simplereport.gov
    needs: [prerelease_backend]
    steps:
      - uses: actions/checkout@v5
      - name: Promote and deploy
        uses: ./.github/actions/deploy-application
        with:
          azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
          client_tarball: client.tgz
          deploy_env: ${{ env.DEPLOY_ENV }}

  smoke_test_front_and_back_end:
    runs-on: ubuntu-latest
    needs: [ deploy ]
    if: ${{ always() }}
    environment:
      name: stg
      url: https://stg.simplereport.gov
    steps:
      - uses: actions/checkout@v5
      - name: Smoke test the env
        uses: ./.github/actions/post-deploy-smoke-test
        with:
          base_domain_name: stg.simplereport.gov

  failed_smoke_test_pagerduty_alert:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.smoke_test_front_and_back_end.result == 'failure' }}
    needs: [ smoke_test_front_and_back_end ]
    steps:
      - uses: actions/checkout@v5
      - name: Trigger PagerDuty alert
        uses: ./.github/actions/pagerduty-alert
        with:
          summary: ":warning: Post-deploy smoke test for ${{ env.DEPLOY_ENV }} couldn't verify that the frontend is talking to the backend. ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} :warning:"
          severity: error
          routing_key: ${{ secrets.pagerduty_stg_integration_key }}

  slack_alert:
    runs-on: ubuntu-latest
    if: failure()
    needs: [deploy]
    steps:
      - uses: actions/checkout@v5
      - name: Send alert to Slack
        uses: ./.github/actions/slack-message
        with:
          username: ${{ github.actor }}
          description: |
            :siren-gif: Deploy to ${{ env.DEPLOY_ENV }} failed. ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} :siren-gif:
          webhook_url: ${{ secrets.SR_ALERTS_SLACK_WEBHOOK_URL }}
          user_map: $${{ secrets.SR_ALERTS_GITHUB_SLACK_MAP }}
