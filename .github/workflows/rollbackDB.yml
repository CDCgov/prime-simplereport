name: Rollback DB

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The Liquibase tag to roll back to'
        required: true
      environment:
        description: 'The environment of the DB that should be rolled back'
        required: true

concurrency:
  group: db-rollback

env:
  DEPLOY_ENV: ${{ github.event.inputs.environment }}
  LIQUIBASE_ROLLBACK_TAG: ${{ github.event.inputs.tag }}
  DOCKER_COMPOSE_FILE: docker-compose.db-rollback.yml
  GIT_SHA: rollback
jobs:
  build-rollback-image:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to ACR
        run: docker login ${{ secrets.ACR_REPO_URL }} -u ${{ secrets.ACR_ADMIN_USERNAME }} -p ${{ secrets.ACR_ADMIN_PASWORD }}
      - name: Delete previous rollback image
        run: az acr repository delete --name simplereportacr --image api/simple-report-api-build:rollback -y
      - name: Build and push Docker images
        run: ./build_and_push.sh
  rollback-to-tag:
    runs-on: ubuntu-latest
    needs: build-rollback-image
    defaults:
      run:
        working-directory: ./ops
    env:
      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TERRAFORM_ARM_TENANT_ID }}
      OKTA_API_TOKEN: ${{ secrets.OKTA_API_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.4
      - name: Terraform init
        run: make init-${{ env.DEPLOY_ENV }}
      - name: Launch DB Rollback Container Instance
        run: terraform -chdir=$DEPLOY_ENV apply -var acr_image_tag=dummy -var liquibase_rollback_tag=$LIQUIBASE_ROLLBACK_TAG -target module.db_rollback[0] --auto-approve
      - name: Display logs
        if: always()
        run: az container logs --follow -g prime-simple-report-$DEPLOY_ENV --name simple-report-$DEPLOY_ENV-db-rollback
