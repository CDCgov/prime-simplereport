
name: Run end-to-end tests

on:
  workflow_call:
    inputs:
      cypress_okta_redirect_uri:
        required: true
        type: string
      cypress_okta_scope:
        required: true
        type: string
      cypress_okta_client_id:
        required: true
        type: string
      spec_path:
        required: true
        type: string
      test_env:
        required: true
        type: string
      deploy_env:
        required: true
        type: string
    secrets:
      cypress_okta_username:
        required: true
      cypress_okta_password:
        required: true
      cypress_okta_secret:
        required: true

jobs:
  
  cypress-remote-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Makefile deploy verification for backend in ${{ inputs.deploy_env }} environment
      shell: bash
      working-directory: ./ops
      env:
          CURL_TIMEOUT: 5
      run: |
        echo "::group::Run Makefile verification"
        make check-${{ inputs.deploy_env }}-commit check-${{ inputs.deploy_env }}-readiness
        echo "::endgroup::"
        
    - name: Update files permissions
      # Even though we don't use it, we need the .env file created here due to an issue similar to this one: https://github.com/mutagen-io/mutagen/issues/265
      run: |
        echo "::group::Create .env file"
        echo FAKE_ENV="true" >> .env
        echo "::endgroup::"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: pull apps - This will only run against stg after merge to main
      run: |
        echo "::group::Pull Cypress image"
        docker-compose -f docker-compose.yml -f docker-compose.cypress.yml pull cypress
        echo "::endgroup::"

    - name: Run Cypress
      env:
        # CI settings
        CI: 1
        # docker settings
        DOCKER_CLIENT_TIMEOUT: 180
        COMPOSE_HTTP_TIMEOUT: 180
        GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
        # cypress settings
        CYPRESS_OKTA_USERNAME: ${{ secrets.cypress_okta_username }}
        CYPRESS_OKTA_PASSWORD: ${{ secrets.cypress_okta_password }}
        CYPRESS_OKTA_SECRET: ${{ secrets.cypress_okta_secret }}
        CYPRESS_OKTA_REDIRECT_URI: ${{ inputs.cypress_okta_redirect_uri }}
        CYPRESS_OKTA_SCOPE: ${{ inputs.cypress_okta_scope }}
        CYPRESS_OKTA_CLIENT_ID: ${{ inputs.cypress_okta_client_id }}
        SPEC_PATH: ${{ inputs.spec_path }}
        TEST_ENV: ${{ inputs.test_env }}
      shell: bash
      run: |
        echo "::group::Run Cypress against Test"
        docker-compose -f docker-compose.yml -f docker-compose.cypress.yml up --exit-code-from cypress cypress
        exit $(echo $?)
        echo "::endgroup::"

    - name: Stop containers
      if: always()
      shell: bash
      run: |
        echo "::group::Stop docker containers"
        docker-compose -f docker-compose.yml -f docker-compose.cypress.yml down
        echo "::endgroup::"

    - name: Archive cypress failures
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: cypress-results
        path: |
          cypress/videos/*
          cypress/screenshots/*
