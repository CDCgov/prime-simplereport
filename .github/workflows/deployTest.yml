name: Deploy Test

on:
  push:
    branches:
      - main

concurrency:
  group: test-deploy
  cancel-in-progress: true
env:
  DEPLOY_ENV: test
  NODE_VERSION: 14

jobs:
  build-cypress:
    uses: ./.github/workflows/buildCypressImage.yml
  build-docker:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ACR
        run: docker login ${{ secrets.ACR_REPO_URL }} -u ${{ secrets.ACR_ADMIN_USERNAME }} -p ${{ secrets.ACR_ADMIN_PASWORD }}
      - name: Build and push Docker images
        run: ./build_and_push.sh
  prerelease-backend:
    runs-on: ubuntu-latest
    needs: build-docker
    defaults:
      run:
        working-directory: ./ops
    env: # all Azure interaction is through terraform
      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TERRAFORM_ARM_TENANT_ID }}
      OKTA_API_TOKEN: ${{ secrets.OKTA_API_TOKEN_NONPROD }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: 1.3.3
      - name: Build ReportStream function app
        uses: ./.github/actions/build-reportstream-functions
        with:
          deploy-env: ${{env.DEPLOY_ENV}}
      - name: Terraform Init
        run: make init-${{ env.DEPLOY_ENV }}
      - name: Terraform deploy (infrastructure and staging slot)
        run: make deploy-${{ env.DEPLOY_ENV }}
      - name: Wait for correct commit to be deployed in staging slot
        timeout-minutes: 5
        run: make wait-for-${{ env.DEPLOY_ENV }}-slot-commit
      - name: Wait for staging deploy to be ready
        timeout-minutes: 1
        run: make wait-for-${{ env.DEPLOY_ENV }}-slot-readiness
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{env.NODE_VERSION}}
      - name: Use cache for node_modules
        uses: actions/cache@v3.0.11
        with:
          path: |
            ./frontend/node_modules
          key: npm-${{env.NODE_VERSION}}-${{ hashFiles('frontend/yarn.lock', 'frontend/package.json') }}
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: ./.github/actions/build-frontend
        name: Build front-end application
        with:
          deploy-env: ${{env.DEPLOY_ENV}}
          smarty-streets-key: ${{ secrets.SMARTY_STREETS_KEY }}
          client-tarball: ./client.tgz
          okta-enabled: true
          okta-url: https://hhs-prime.oktapreview.com
          okta-client-id: 0oa1khettjHnj3EPT1d7
      - name: Save compiled frontend application
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: frontend-tarball
          path: client.tgz
          retention-days: 1
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: Test
      url: https://test.simplereport.gov
    needs: [build-frontend, prerelease-backend]
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Retrieve frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-tarball
      - name: Promote and deploy
        uses: ./.github/actions/deploy-application
        with:
          client-tarball: client.tgz
          deploy-env: ${{env.DEPLOY_ENV}}
  # run-cypress:
  #   needs: [build-cypress, deploy]
  #   uses: ./.github/workflows/e2eRemote.yml
  #   with:
  #     cypress_okta_redirect_uri: "https%3A%2F%2Ftest.simplereport.gov%2Fapp%2F"
  #     cypress_okta_scope: "simple_report_test"
  #     cypress_okta_client_id: "0oa1khettjHnj3EPT1d7"
  #     spec_path: "cypress/integration/00*,cypress/integration/01*,cypress/integration/02*,cypress/integration/03*,cypress/integration/04*,cypress/integration/05*,cypress/integration/06*"
  #     test_env: "https://test.simplereport.gov"
  #     deploy_env: test
  #   secrets:
  #     cypress_okta_username: ${{ secrets.CYPRESS_OKTA_USERNAME }}
  #     cypress_okta_password: ${{ secrets.CYPRESS_OKTA_PASSWORD }}
  #     cypress_okta_secret: ${{ secrets.CYPRESS_OKTA_SECRET }}
