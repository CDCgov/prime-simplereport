name: Test

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        description: secrets.SONAR_TOKEN
        required: true
      TWILIO_ACCOUNT_SID:
        description: secrets.TWILIO_TEST_ACCOUNT_SID
        required: true
      TWILIO_AUTH_TOKEN:
        description: secrets.TWILIO_TEST_AUTH_TOKEN
        required: true
    inputs:
      DOCKER_DATABASE_IMAGE_VERSION:
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-test
  cancel-in-progress: true

env:
  NODE_VERSION: 23
  JAVA_VERSION: 17
  JAVA_DISTRIBUTION: 'zulu'
  PROJECT_ROOT: /home/runner/work/prime-simplereport/prime-simplereport # Hardcoding this here because env.WORKSPACE_ROOT gets overridden by one of the steps downstream. We only need this for Sonar.

defaults:
  run:
    working-directory: backend

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Cache Java Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('*.gradle', 'gradle/dependency-locks/*') }}
      - name: Start DB
        env:
          DOCKER_DATABASE_IMAGE_VERSION: ${{ inputs.DOCKER_DATABASE_IMAGE_VERSION }}
        run: touch ../.env && docker compose -f ../docker-compose.yml up -d db
      - name: Run tests
        env:
          OKTA_TESTING_DISABLEHTTPS: true
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        run: ./gradlew jacocoTestReport -PtestDbPort=5432
      - name: Cache backend coverage results
        uses: actions/cache@v4
        with:
          path: backend/build/**
          key: ${{ runner.os }}-backend-coverage-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Archive failed test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: backend-test-report
          path: backend/build/reports/tests/test
          retention-days: 7
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache yarn
        uses: actions/cache@v4
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Node setup
        working-directory: ./frontend
        run: yarn install --prefer-offline
      - name: Run tests
        working-directory: ./frontend
        run: yarn test:ci
      - name: Cache frontend coverage results
        uses: actions/cache@v4
        with:
          path: |
            frontend/coverage/**
          key: ${{ runner.os }}-frontend-coverage-${{ github.run_id }}-${{ github.run_attempt }}
  rs-function-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: "RS Function App: yarn install"
        working-directory: ./ops/services/app_functions/report_stream_batched_publisher/functions
        run: yarn
      - name: "RS Function App: Test"
        working-directory: ./ops/services/app_functions/report_stream_batched_publisher/functions
        run: yarn coverage
      - name: Cache function coverage results
        uses: actions/cache@v4
        with:
          path: |
            ops/services/app_functions/report_stream_batched_publisher/functions/coverage/**
          key: ${{ runner.os }}-rs-function-coverage-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Archive function coverage results
        uses: actions/upload-artifact@v4
        with:
          name: function-coverage
          path: ops/services/app_functions/report_stream_batched_publisher/functions/coverage
  data-publisher-function-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: "Data publisher function app: yarn install"
        working-directory: ./ops/services/app_functions/test_data_publisher/functions
        run: yarn
      - name: "Data publisher function app: test w/ coverage"
        working-directory: ./ops/services/app_functions/test_data_publisher/functions
        run: yarn coverage
      - name: Cache function coverage results
        uses: actions/cache@v4
        with:
          path: |
            ops/services/app_functions/test_data_publisher/functions/coverage/**
          key: ${{ runner.os }}-data-publisher-function-coverage-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Archive function coverage results
        uses: actions/upload-artifact@v4
        with:
          name: function-coverage
          path: ops/services/app_functions/test_data_publisher/functions/coverage
  sonar:
    needs: [backend-tests, frontend-tests, rs-function-tests, data-publisher-function-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          fetch-depth: 0 # Disable shallow clones so Sonar can have all the data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
      - name: Restore backend cache
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: actions/cache@v4
        with:
          path: |
            backend/build/**
          key: ${{ runner.os }}-backend-coverage-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Restore frontend cache
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: actions/cache@v4
        with:
          path: |
            frontend/coverage/**
          key: ${{ runner.os }}-frontend-coverage-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Restore RS function coverage cache
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: actions/cache@v4
        with:
          path: |
            ops/services/app_functions/report_stream_batched_publisher/functions/coverage/**
          key: ${{ runner.os }}-rs-function-coverage-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Restore data publisher function coverage cache
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: actions/cache@v4
        with:
          path: |
            ops/services/app_functions/report_stream_batched_publisher/functions/coverage/**
          key: ${{ runner.os }}-data-publisher-function-coverage-${{ github.run_id }}-${{ github.run_attempt }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Sonar analysis
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: ./gradlew sonar -Dsonar.projectBaseDir=${{ env.PROJECT_ROOT }} --info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Cache Java dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('*.gradle', 'gradle/dependency-locks/*') }}
      - name: Run Java build
        run: ./gradlew assemble
  backend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Cache Java dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('*.gradle', 'gradle/dependency-locks/*') }}
      - name: Run style checks
        run: ./gradlew checkstyleMain checkstyleTest spotlessCheck --continue
  frontend-lint-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache yarn
        uses: actions/cache@v4
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Node setup
        working-directory: ./frontend
        run: yarn
      - name: Lint front-end
        working-directory: ./frontend
        run: yarn lint
      - name: Build release
        working-directory: ./frontend
        run: yarn build
