name: Deploy Dev
run-name: Deploy to ${{ inputs.deploy_env }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'The environment to deploy to'
        required: true
        type: choice
        options:
          - ""
          - dev
          - dev2
          - dev3
          - dev4
          - dev5
          - dev6
          - pentest
      replace_keys:
        description: 'Replace keys'
        required: true
        default: "false"
        type: choice
        options:
          - "false"
          - "true"
  workflow_call:
    inputs:
      deploy_env:
        description: 'The environment to deploy to'
        required: true
        type: string
      replace_keys:
        description: 'Replace keys'
        default: "false"
        type: string
env:
  NODE_VERSION: 20

concurrency:
  group: ${{ github.event.inputs.deploy_env }}-deploy
  cancel-in-progress: false

jobs:
  build_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and Push backend
        uses: ./.github/actions/build-and-push
        with:
          acr_registry: ${{ secrets.ACR_REPO_URL }}
          acr_username: ${{ secrets.ACR_ADMIN_USERNAME }}
          acr_password: ${{ secrets.ACR_ADMIN_PASWORD }}

  build_frontend:
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy_env }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-frontend
        name: Build front-end application
        with:
          azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
          client_tarball: ./client.tgz
          deploy_env: ${{ inputs.deploy_env }}
          smarty_streets_key: ${{ secrets.SMARTY_STREETS_KEY }}
          okta_enabled: true
          okta_url: https://hhs-prime.oktapreview.com
          okta_client_id: ${{ vars.OKTA_CLIENT_ID }}

  prerelease:
    runs-on: ubuntu-latest
    needs: [build_frontend, build_docker]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/key-replace
        name: Replace keys
        if: inputs.replace_keys == 'true'
        with:
          azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
          deploy_env: ${{ inputs.deploy_env }}
          terraform_arm_client_id: ${{ secrets.TERRAFORM_ARM_CLIENT_ID }}
          terraform_arm_client_secret: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}
          terraform_arm_subscription_id: ${{ secrets.TERRAFORM_ARM_SUBSCRIPTION_ID }}
          terraform_arm_tenant_id: ${{ secrets.TERRAFORM_ARM_TENANT_ID }}
          okta_api_token: ${{ secrets.OKTA_API_TOKEN_NONPROD }}
          terraform_action: apply
      - uses: ./.github/actions/tf-deploy
        name: Deploy with Terraform
        with:
          azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
          deploy_env: ${{ inputs.deploy_env }}
          terraform_arm_client_id: ${{ secrets.TERRAFORM_ARM_CLIENT_ID }}
          terraform_arm_client_secret: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}
          terraform_arm_subscription_id: ${{ secrets.TERRAFORM_ARM_SUBSCRIPTION_ID }}
          terraform_arm_tenant_id: ${{ secrets.TERRAFORM_ARM_TENANT_ID }}
          okta_api_token: ${{ secrets.OKTA_API_TOKEN_NONPROD }}
      - uses: ./.github/actions/stg-wait-for-slot-commit
        name: Wait for correct commit to be deployed in staging slot
        timeout-minutes: 5
        with:
          deploy_env: ${{ inputs.deploy_env }}
      - uses: ./.github/actions/stg-wait-for-slot-readiness
        name: Wait for staging deploy to be ready
        timeout-minutes: 1
        with:
          deploy_env: ${{ inputs.deploy_env }}

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.deploy_env }}
      url: https://${{ inputs.deploy_env }}.simplereport.gov
    needs: [prerelease]
    steps:
      - uses: actions/checkout@v4
      - name: Promote and deploy
        uses: ./.github/actions/deploy-application
        with:
          azure_creds: ${{ secrets.AZURE_CREDENTIALS }}
          client_tarball: client.tgz
          deploy_env: ${{ inputs.deploy_env }}
