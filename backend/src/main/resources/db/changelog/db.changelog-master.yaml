x-ref-data:
  column-defs:
    - column: &pk_column
        name: internal_id
        type: uuid
        remarks: The internal database identifier for this entity.
        constraints:
          primaryKey: true
          nullable: false
    - column: &created_at_column
        name: created_at
        type: DATETIME
        remarks: The creation timestamp for this entity.
        constraints:
          nullable: false
    - column: &updated_at_column
        name: updated_at
        type: DATETIME
        remarks: The timestamp for the most recent update of this entity.
        constraints:
          nullable: false
    - column: &created_by_column
        name: created_by
        type: uuid
        remarks: The user who created this entity.
        constraints:
          nullable: false
          foreignKeyName: fk__anyentity__created_by # normally we make these unique, but that's a lot of boilerpate
          references: api_user
    - column: &updated_by_column
        name: updated_by
        type: uuid
        remarks: The user who most recently updated this entity.
        constraints:
          nullable: false
          references: api_user
          foreignKeyName: fk__anyentity__updated_by
    - column: &soft_delete_column
        name: is_deleted
        type: boolean
        remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
        constraints:
          nullable: false
databaseChangeLog:
  - property:
      name: migrations_user_email
      value: db-migrations@simplereport.gov
  - changeSet:
      id: create-pgcrypto-extension
      author: josh@skylight.digital
      comment: Make sure we create the pgcrypto extension before beginning migrations.
      changes:
        - sql:
            sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
      rollback:
        - sql:
            sql: -- DROP EXTENSION IF EXISTS pgcrypto;
            comment: Dropping the extension requires superuser permissions, and we don't want to give that to the migration user, so we have to do nothing here.
  - changeSet:
      id: define-enum-types
      author: bwarfield@cdc.gov
      comment: Type definitions for our initial tables.
      changes:
        - sql:
            remarks: Create the enumerations needed for tracking test orders.
            # these may need to be tweaked if we ever might care about their sort order
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.TEST_ORDER_STATUS as ENUM('PENDING', 'COMPLETED', 'CANCELED');
              CREATE TYPE ${database.defaultSchemaName}.TEST_RESULT as ENUM('POSITIVE','NEGATIVE','UNDETERMINED');
      rollback:
        sql: |
          DROP TYPE ${database.defaultSchemaName}.TEST_ORDER_STATUS;
          DROP TYPE ${database.defaultSchemaName}.TEST_RESULT;
  - changeSet:
      id: initial-schema
      author: bwarfield@cdc.gov
      comment: The database schema required for the initial deployment of the Simple Report API.
      changes:
        - createTable:
            tableName: api_user
            remarks: Any user who authenticates to the API to take actions using it.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: login_email
                  type: text
                  remarks: The e-mail of the logged-in user, assuming that is our unique ID for users.
                  constraints:
                    unique: true
                    nullable: false
              - column:
                  name: last_seen
                  type: DATETIME
                  remarks: The last time this user connected to the API.
                  constraints:
                    nullable: false
              - column:
                  name: first_name
                  remarks: The user's given name, if any (to be derived from authentication claims).
                  type: text
              - column:
                  name: middle_name
                  remarks: The user's middle name, if any (to be derived from authentication claims).
                  type: text
              - column:
                  name: last_name
                  remarks: The user's family name or only name (to be derived from authentication claims).
                  type: text
                  constraints:
                    nullable: false
              - column:
                  name: suffix
                  remarks: The generational or positional designation appended to the user's name.
                  type: text
        - createTable:
            tableName: device_type
            remarks: Testing devices that may be present.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column:
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: name
                  type: text
                  remarks: The name of the device, as displayed in isolation
                  constraints:
                    nullable: false
                    unique: true
                    uniqueConstraintName: uk__device_type
              - column:
                  name: loinc_code
                  type: text
                  remarks: The LOINC code for this device, for reporting purposes (sadly, not unique)
                  constraints:
                    nullable: false
              - column:
                  name: manufacturer
                  remarks: The manufacturer of the device.
                  type: text
              - column:
                  name: model
                  type: text
                  remarks: The device model name.
        - createTable:
            tableName: provider
            remarks: A provider who can (we hope) write test orders.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column:
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: first_name
                  remarks: The provider's given name, if any.
                  type: text
              - column:
                  name: middle_name
                  remarks: The provider's middle name, if any.
                  type: text
              - column:
                  name: last_name
                  remarks: The provider's family name or only name.
                  type: text
                  constraints:
                    nullable: false
              - column:
                  name: suffix
                  remarks: generational or positional designations appended to the provider's name
                  type: text
              - column:
                  name: provider_id
                  remarks: The external ID (NPI) for this provider.
                  type: text
                  constraints:
                    nullable: false
              - column:
                  name: street
                  remarks: The street portion of the person's address.
                  type: "text[]"
              - column:
                  name: city
                  remarks: The city of the provider's address.
                  type: text
              - column:
                  name: county
                  remarks: The county (NOT THE COUNTRY) of the provider's address, if applicable.
                  type: text
              - column:
                  name: state
                  remarks: The state or province of the provider's address.
                  type: text
              - column:
                  name: postal_code
                  remarks: The zip/postal code of the provider's address.
                  type: text
              - column:
                  name: telephone
                  remarks: The provider's contact phone number.
                  type: text
        - createTable:
            tableName: organization
            remarks: A site where testing occurs, and also the main user grouping entity.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column:
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: facility_name
                  type: text
                  remarks: The human-readable name for this facility.
                  constraints:
                    nullable: false
                    unique: true
                    uniqueConstraintName: uk__facility__name
              - column:
                  name: organization_external_id
                  type: text
                  remarks: The external ID of the organization, for authorization purposes.
                  constraints:
                    nullable: false
                    unique: true
                    uniqueConstraintName: uk__facility__organization_id
              - column:
                  name: clia_number
                  type: text # irony
                  remarks: The CLIA number for the facility that is ordering (and presumably also conducting) the tests.
                  constraints:
                    nullable: false
              - column:
                  name: default_device_type
                  remarks: The default device type (if any) for tests at this facility.
                  type: uuid
                  constraints:
                    foreignKeyName: fk__organization__default_device_type
                    references: device_type
              - column:
                  name: ordering_provider_id
                  type: uuid
                  remarks: at what point does this blow up on me?
                  constraints:
                    nullable: false
                    foreignKeyName: fk__organization__ordering_provider
                    references: provider
        - createTable:
            tableName: facility_device_type
            remarks: Many-to-many table for device configuration at a facility.
            columns:
              - column:
                  name: organization_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility_device_type__organization
                    references: organization
              - column:
                  name: device_type_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility_device_type__device_type
                    references: device_type
        - createTable:
            tableName: person
            remarks: The personal information we store about users and patients
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column:
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: organization_id
                  remarks: Foreign key to the facility/organization responsible for entering this person's information.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__person__organization
                    references: organization
              - column:
                  name: first_name
                  remarks: The person's given name, if any.
                  type: text
              - column:
                  name: middle_name
                  remarks: The person's middle name, if any.
                  type: text
              - column:
                  name: last_name
                  remarks: The person's family name or only name.
                  type: text
                  constraints:
                    nullable: false
              - column:
                  name: suffix
                  remarks: The generational or positional designations appended to the person's name.
                  type: text
              - column:
                  name: race
                  remarks: grouping of humans based on shared physical or social qualities
                  type: "text[]"
              - column:
                  name: gender
                  remarks: biological sex
                  type: text
              - column:
                  name: ethnicity
                  remarks: ethnic group
                  type: text
              - column:
                  name: lookup_id
                  remarks: user entered. hopefully unique. patient identifier used for patient search
                  type: text
              - column:
                  name: birth_date
                  remarks: The person's date of birth.
                  type: DATE
                  constraints:
                    nullable: true
              - column:
                  name: street
                  remarks: The street portion of the person's address.
                  type: "text[]"
              - column:
                  name: city
                  remarks: The city of the person's address.
                  type: text
              - column:
                  name: county
                  remarks: The county (NOT THE COUNTRY) of the person's address, if applicable.
                  type: text
              - column:
                  name: state
                  remarks: The state or province of the person's address.
                  type: text
              - column:
                  name: postal_code
                  remarks: The zip/postal code of the person's address.
                  type: text
              - column:
                  name: telephone
                  remarks: The person's contact phone number.
                  type: text
              - column:
                  name: email
                  remarks: The person's contact email.
                  type: text
              - column:
                  name: employed_in_healthcare
                  remarks: Is the person employed in healthcare?
                  type: boolean
              - column:
                  name: role
                  remarks: The person's role at the facility where they are tested (e.g. "staff", "visitor", "resident").
                  type: text
              - column:
                  name: resident_congregate_setting
                  remarks: Does the person live in a congregate setting?
                  type: boolean
        - createTable:
            tableName: patient_answers
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column:
                  name: ask_on_entry
                  type: jsonb
                  remarks: The questions asked at order entry or at test time.
        - createTable:
            tableName: test_event
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column:
                  name: patient_id
                  remarks: The person who is being given the test.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event__patient__person
                    references: person
              - column:
                  name: organization_id
                  remarks: Foreign key to the facility/organization responsible for entering this person's information.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event__organization
                    references: organization
              - column:
                  name: device_type_id
                  remarks: The device used to record the test result.
                  type: uuid
                  constraints:
                    foreignKeyName: fk__test_event__device_type
                    references: device_type
              - column:
                  name: patient_data
                  type: jsonb
                  remarks: The patient's demographics and address at the time the test was administered.
              - column:
                  name: provider_data
                  type: jsonb
                  remarks: The name and contact of the provider who ordered the test.
              - column:
                  name: result
                  remarks: The result of the test, once it has been given.
                  type: ${database.defaultSchemaName}.TEST_RESULT
        - createTable:
            tableName: test_order
            remarks: Test orders, whether pending, completed or canceled.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column:
                  name: patient_id
                  remarks: The person who is being given the test.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_order__patient__person
                    references: person
              - column:
                  name: organization_id
                  remarks: Foreign key to the facility/organization responsible for entering this person's information.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_order__organization
                    references: organization
              - column:
                  name: patient_answers_id
                  remarks: The questions asked at order entry or at test time.
                  type: uuid
                  constraints:
                    foreignKeyName: fk__test_order__patient_answers
                    references: patient_answers
              - column:
                  name: device_type_id
                  remarks: The device used to record the test result
                  type: uuid
                  constraints:
                    foreignKeyName: fk__test_order__device_type
                    references: device_type
              - column:
                  name: date_tested
                  remarks: the date the test result was submitted
                  type: DATE
                  constraints:
                    nullable: true
              - column:
                  name: order_status
                  remarks: The status of the order. "Pending" orders are the test queue; "COMPLETED" orders have results.
                  type: ${database.defaultSchemaName}.TEST_ORDER_STATUS
                  constraints:
                    nullable: false
              - column:
                  name: result
                  remarks: The result of the test, once it has been given.
                  type: ${database.defaultSchemaName}.TEST_RESULT
              - column:
                  name: test_event_id
                  type: uuid
                  remarks: Data saved at the time the test is marked completed.
                  constraints:
                    nullable: true
                    unique: true
                    foreignKeyName: fk__test_order__test_event
                    references: test_event
                    uniqueKeyName: uk__test_order__test_event
  - changeSet:
      id: enforce-queue-uniqueness
      author: bwarfield@cdc.gov
      comment: Enforce uniqueness guarantees for patients in the queue.
      changes:
        - sql:
            remarks: Create a unique index on organization and patient, but only for PENDING orders.
            sql: |
              CREATE UNIQUE INDEX uk__test_order__organization_person_pending
              ON ${database.defaultSchemaName}.test_order (organization_id, patient_id)
              WHERE order_status = 'PENDING'
      rollback:
        sql: |
          DROP INDEX ${database.defaultSchemaName}.uk__test_order__organization_person_pending;
  - changeSet:
      id: single-race-select
      author: tbest@cdc.gov
      comment: Allow a single race selection because of HL7 only allows a single race
      changes:
        - sql:
            sql: |
              ALTER TABLE ${database.defaultSchemaName}.person
              ALTER COLUMN race TYPE text
              USING race[1];
      rollback:
        - sql:
            sql: |
              ALTER TABLE ${database.defaultSchemaName}.person
              ALTER COLUMN race TYPE text[]
              USING ARRAY[race];
  - changeSet:
      id: add-facility-table
      author: bwarfield@cdc.gov
      comment: Introduce the facility table, which takes over much of the data in the organization table
      changes:
        - createTable:
            tableName: facility
            remarks: A site where testing occurs (may be called "site" in user-facing language).
            columns:
              - column: 
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column: 
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column: 
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column: 
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: organization_id
                  remarks: Foreign key to the organization that this facility belongs to.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility__organization
                    references: organization
              - column:
                  name: facility_name
                  type: text
                  remarks: The human-readable name for this facility.
                  constraints:
                    nullable: false
              - column:
                  name: clia_number
                  type: text # irony
                  remarks: The CLIA number for the facility that is ordering (and presumably also conducting) the tests.
              - column:
                  name: default_device_type_id
                  remarks: The default device type (if any) for tests at this facility.
                  type: uuid
                  constraints:
                    foreignKeyName: fk__facility__default_device_type
                    references: device_type
              - column:
                  name: ordering_provider_id
                  type: uuid
                  remarks: The healthcare provider who orders tests at this facility.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility__ordering_provider
                    references: provider
              - column:
                  name: street
                  remarks: The street portion of the facility address.
                  type: "text[]"
              - column:
                  name: city
                  remarks: The city of the facility address.
                  type: text
              - column:
                  name: county
                  remarks: The county (NOT THE COUNTRY) of the facility address, if applicable.
                  type: text
              - column:
                  name: state
                  remarks: The state or province of the facility address.
                  type: text
              - column:
                  name: postal_code
                  remarks: The zip/postal code of the facility address.
                  type: text
              - column:
                  name: telephone
                  remarks: The facility's contact phone number.
                  type: text
        - addUniqueConstraint:
            tableName: facility
            constraintName: uk__facility__organization_facility_name
            columnNames: organization_id, facility_name
  - changeSet:
      id: populate-facility-table
      author: bwarfield@cdc.gov
      comment: Populate facilities table based on existing organizations.
      preConditions:
        - onSqlOutput: FAIL
        - onFail: MARK_RAN
        - sqlCheck:
            sql: SELECT case when count(1) > 0 then 1 else 0 end FROM ${database.defaultSchemaName}.organization;
            expectedResult: 1
      changes:
        - sql:
            comment: Populate the facilities table from the organization table
            sql: |
              INSERT INTO ${database.defaultSchemaName}.facility (
                internal_id,
                organization_id,
                created_at, created_by, updated_at, updated_by, is_deleted,
                facility_name, clia_number,
                ordering_provider_id,
                default_device_type_id
              )
              SELECT
                gen_random_uuid(),
                internal_id,
                created_at, created_by, updated_at, updated_by, is_deleted,
                facility_name, clia_number,
                ordering_provider_id,
                default_device_type
              FROM ${database.defaultSchemaName}.organization;
      rollback:
        - sql:
            sql: |
              TRUNCATE TABLE ${database.defaultSchemaName}.facility;
  - changeSet:
      id: add-facility-relationships
      author: bwarfield@cdc.gov
      comment: Add relationships and otherwise modify other tables in the schema to reflect the existence of facilities.
      # we may want a check constraint on patient.facility (and arguably
      # test_order.facility and test_event.facility as well) to make sure that
      # the facility belongs to the correct organization
      validCheckSum:
        - 8:51b3552459ab927ea72a8c091bf69211
        - 8:d2e0d1d37413eac3fe88ca3a88d3e0de
      changes:
        - renameColumn:
            tableName: organization
            oldColumnName: facility_name
            newColumnName: organization_name
            remarks: The human-readable name for this organization.
        - addUniqueConstraint:
            tableName: organization
            constraintName: uk__organization__organization_name
            columnNames: organization_name
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: facility_id
                  type: uuid
                  valueComputed: (select internal_id from ${database.defaultSchemaName}.facility f where f.organization_id = organization_id)
                  remarks: The facility where this person is expected to be tested (null if they will be tested at multiple sites)
                  constraints:
                    nullable: true
                    foreignKeyName: fk__person__facility
                    referencedTableName: facility
        - addColumn:
            tableName: test_event
            columns:
              - column:
                  name: facility_id
                  type: uuid
                  remarks: The facility where this test took place.
                  valueComputed: (select internal_id from ${database.defaultSchemaName}.facility f where f.organization_id = organization_id)
                  constraints:
                    foreignKeyName: fk__test_event__facility
                    referencedTableName: facility
        - addNotNullConstraint:
            tableName: test_event
            columnName: facility_id
        - addColumn:
            tableName: test_order
            columns:
              - column:
                  name: facility_id
                  type: uuid
                  remarks: The facility where this test was ordered.
                  valueComputed: (select internal_id from ${database.defaultSchemaName}.facility f where f.organization_id = organization_id)
                  constraints:
                    foreignKeyName: fk__test_order__facility
                    referencedTableName: facility
        - addNotNullConstraint:
            tableName: test_order
            columnName: facility_id
        - addColumn:
            tableName: facility_device_type
            columns:
              - column:
                  name: facility_id
                  type: uuid
                  valueComputed: (select internal_id from ${database.defaultSchemaName}.facility f where f.organization_id = organization_id)
                  constraints:
                    foreignKeyName: fk__facility_device_type__facility
                    referencedTableName: facility
        - addNotNullConstraint:
            tableName: facility_device_type
            columnName: facility_id
        - dropColumn:
            tableName: facility_device_type
            columnName: organization_id
        - dropColumn:
            tableName: organization
            columns:
              - column:
                  name: clia_number
              - column:
                  name: default_device_type
              - column:
                  name: ordering_provider_id
      rollback:
        - addColumn:
            tableName: organization
            columns:
              - column:
                  name: clia_number
                  type: text
                  remarks: The CLIA number for the facility that is ordering (and presumably also conducting) the tests.
              - column:
                  name: default_device_type
                  remarks: The default device type (if any) for tests at this facility.
                  type: uuid
                  constraints:
                    foreignKeyName: fk__organization__default_device_type
                    referencedTableName: device_type
              - column:
                  name: ordering_provider_id
                  type: uuid
                  constraints:
                    foreignKeyName: fk__organization__ordering_provider
                    referencedTableName: provider
        - dropNotNullConstraint:
            tableName: facility_device_type
            columnName: facility_id
        - renameColumn:
            tableName: facility_device_type
            oldColumnName: facility_id
            newColumnName: organization_id
            remarks: The human-readable name for this organization.
        - dropNotNullConstraint:
            tableName: test_order
            columnName: facility_id
        - dropColumn:
            tableName: test_order
            columns:
              - column:
                  name: facility_id
        - dropNotNullConstraint:
            tableName: test_event
            columnName: facility_id
        - dropColumn:
            tableName: test_event
            columns:
              - column:
                  name: facility_id
        - dropColumn:
            tableName: person
            columns:
              - column:
                  name: facility_id
        - dropUniqueConstraint:
            tableName: organization
            constraintName: uk__organization__organization_name
            columnNames: organization_name
        - renameColumn:
            tableName: organization
            oldColumnName: organization_name
            newColumnName: facility_name
            remarks: The human-readable name for this organization.
        - addUniqueConstraint:
            tableName: organization
            constraintName: uk__facility__name
            columnNames: facility_name
  - changeSet:
      id: date-tested-backdate
      author: tbest@cdc.gov
      comment: add timestamp for date corrections
      changes:
        - addColumn:
            tableName: test_order
            columns:
              - column:
                  name: date_tested_backdate
                  type: DATETIME
                  remarks: timestamp to store a user correction to when the test was ordered
  - changeSet:
      id: add-facility-email
      author: nclyde@skylight.digital
      comment: add email field to facility
      changes:
        - addColumn:
            tableName: facility
            columns:
              - column:
                  name: email
                  type: text
                  remarks: The facility's contact email address.
  - changeSet:
      id: add-data-hub-upload
      author: tnielsen2@cdc.gov
      comment: Add data_hub_upload table used to the automated results uploader.
      changes:
        - sql:
            remarks: Create the enumerations needed for DataHubUpload.
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.DATA_HUB_UPLOAD_STATUS as ENUM('IN_PROGRESS', 'SUCCESS', 'FAIL');
        - createTable:
            tableName: data_hub_upload
            remarks: Track uploads and results of test_events to the data-hub.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: job_status
                  type: ${database.defaultSchemaName}.DATA_HUB_UPLOAD_STATUS
                  remarks: State of this upload. Enumerated value.
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: records_processed
                  type: int
                  remarks: Number of rows sent to the server.
              - column:
                  name: error_message
                  type: text
                  remarks: Set if an exception happens.
              - column:
                  name: response_data
                  type: jsonb
                  remarks: Response json from data-hub.
              - column:
                  name: earliest_recorded_timestamp
                  type: DATETIME
                  remarks: Lowerbound timestamp used to collect test_events. Entities with created_by > this value are sent.
              - column:
                  name: latest_recorded_timestamp
                  type: DATETIME
                  remarks: Upperbounds timestamp used to collect test_event. Entities with created_by <= this value are sent.
        - createIndex:
            indexName: uk__data_hub_upload__job_status__latest_recorded_timestamp
            tableName: data_hub_upload
            clustered: true
            columns:
              - column:
                  name: job_status
              - column:
                  name: latest_recorded_timestamp
                  descending: true
      rollback:
        dropTable:
          tableName: data_hub_upload
        sql: |
          DROP TYPE ${database.defaultSchemaName}.DATA_HUB_UPLOAD_STATUS;
  - changeSet:
      id: change-test-results-to-MST
      author: neil.s.sharma@omb.eop.gov
      comment: Change all existing backdated tests to be midnight MST instead of midnight UTC.
      changes:
        - sql:
            comment: Update backdated test_orders from UTC to MST.
            sql: |
              UPDATE ${database.defaultSchemaName}.test_order
              SET date_tested_backdate = date_tested_backdate + interval '7' HOUR
              WHERE date_tested_backdate is not null;
      rollback:
        - sql:
          sql: |
              UPDATE ${database.defaultSchemaName}.test_order
              SET date_tested_backdate = date_tested_backdate - interval '7' HOUR
              WHERE date_tested_backdate is not null;

  - changeSet:
      id: drop-not-null-last-seen-user
      author: jeremy.a.zitomer@omb.eop.gov
      comment: Allow user's last seen timestamp to be null to allow for other people to create users
      # Allows us to create a user without having to assign it a last-seen value (ie if user does not create themselves)
      changes:
        - dropNotNullConstraint:
            tableName: api_user
            columnName: last_seen
      rollback:
        - sql: UPDATE ${database.defaultSchemaName}.api_user SET last_seen=NOW() WHERE last_seen IS NULL;
        - addNotNullConstraint:
            tableName: api_user
            columnName: last_seen
  - changeSet:
      id: add-swab-type-to-device-type
      author: tbest@cdc.gov
      comment: add a property to store the swab type per device
      changes:
        - addColumn:
            tableName: device_type
            columns:
              - column:
                  name: swab_type
                  type: text
                  remarks: The swab type used for this device
                  value: "445297001" # swab of internal nose
        - addNotNullConstraint:
            tableName: device_type
            columnName: swab_type
  - changeSet:
      id: event-corrections-feature
      author: tnielsen2@cdc.gov
      comment: Add columns to existing tables to handle the concept of corrections to test_events.
      changes:
        - sql:
            remarks: Create the enumerations for corrections_status in test_event table.
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.TEST_CORRECTION_STATUS as ENUM('ORIGINAL', 'CORRECTED', 'REMOVED');
        - addColumn:
            tableName: test_order
            columns:
              - column:
                  name: correction_status
                  type: ${database.defaultSchemaName}.test_correction_status
                  remarks: Enumeration of type of correction. This column is used for non-delete corrections.
                  defaultValue: "ORIGINAL"
                  value: "ORIGINAL"
                  constraints:
                    nullable: false
              - column:
                  name: reason_for_correction
                  type: text
                  remarks: User supplied comment when a correction happens.
        - addColumn:
            tableName: test_event
            columns:
              - column:
                  name: survey_data
                  type: jsonb
                  remarks: The patient's demographics and address at the time the test was administered.
              - column:
                  name: date_tested_backdate
                  type: DATETIME
                  remarks: Timestamp to store a user correction to when the test was ordered. Copied from TestOrder. Null if not backdated.
              - column:
                  name: test_order_id
                  type: uuid
                  remarks: Reference to original test_order internal_id.
                  constraints:
                    foreignKeyName: fk__test_event__test_order
                    referencedTableName: test_order
              - column:
                  name: correction_status
                  type: ${database.defaultSchemaName}.test_correction_status
                  remarks: Enumeration of type of correction.
                  defaultValue: "ORIGINAL"
                  value: "ORIGINAL"
                  constraints:
                    nullable: false
              - column:
                  name: prior_corrected_test_event_id
                  type: uuid
                  remarks: If this is a correction, this is the id the prior test_event being corrected.
                  constraints:
                    foreignKeyName: fk__test_event__prior_corrected_test_event
                    referencedTableName: test_event
              - column:
                  name: reason_for_correction
                  type: text
                  remarks: User supplied comment when a correction happens.
        - sql:
            remarks: Copy the existing test_order_id from test_order.
            sql: |
              UPDATE ${database.defaultSchemaName}.test_event TestEvent
              SET test_order_id = TestOrder.internal_id,
                  survey_data = PatientAnswers.ask_on_entry,
                  date_tested_backdate = TestOrder.date_tested_backdate
              FROM ${database.defaultSchemaName}.test_order TestOrder
                   INNER JOIN ${database.defaultSchemaName}.patient_answers PatientAnswers
                   ON TestOrder.patient_answers_id = PatientAnswers.internal_id
              WHERE TestOrder.test_event_id = TestEvent.internal_id;
        - addNotNullConstraint:
            tableName: test_event
            columnName: test_order_id
      rollback:
        - dropColumn:
            tableName: test_order
            columns:
              - column:
                  name: correction_status
              - column:
                  name: reason_for_correction
        - dropColumn:
            tableName: test_event
            columns:
              - column:
                  name: survey_data
              - column:
                  name: date_tested_backdate
              - column:
                  name: test_order_id
              - column:
                  name: correction_status
              - column:
                  name: prior_corrected_test_event_id
              - column:
                  name: reason_for_correction
        - sql:
          sql: |
            DROP TYPE ${database.defaultSchemaName}.TEST_CORRECTION_STATUS;
  - changeSet:
      id: add-patient-link-table
      author: nclyde@skylight.digital
      comment: The patient link table stores time-sensitive UUIDs granting patients access to answer time of test questions
      changes:
        - createTable:
            tableName: patient_link
            remarks: Time-sensitive UUIDs granting patients access to answer time of test questions
            columns:
              - column: 
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column: 
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column: 
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column: 
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: test_order_id
                  remarks: The test order this link was generated for
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__patient_link__test_order
                    references: test_order
  - changeSet:
      id: add-refreshed-at-to-patient-link-table
      author: nclyde@skylight.digital
      comment: The patient link table stores time-sensitive UUIDs granting patients access to answer time of test questions
      changes:
        - addColumn:
            tableName: patient_link
            columns:
              - column:
                  name: refreshed_at
                  type: DATETIME
                  remarks: The timestamp for the most recent refresh of this entity.
  - changeSet:
      id: add-is-deleted-to-api-user
      author: jeremy.a.zitomer@omb.eop.gov
      comment: Add soft deletion flag to API users table
      changes:
        - addColumn:
            tableName: api_user
            # while we would love to use the proper (non-nullable) reference column below, there are
            # already records in this table and we cannot add default values to the existing reference
            # column without recreating it entirely
            columns:
              - column:
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  defaultValueBoolean: false
                  constraints:
                    nullable: false
  - changeSet:
      id: add-specimen-tables
      author: bwarfield@cdc.gov
      description: Introduce the tables necessary for tracking specimen types.
      changes:
        - createTable:
            tableName: specimen_type
            remarks: A type of specimen collection from a patient.
            columns:
              - column: 
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column: 
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column: 
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column: 
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: name
                  type: text
                  remarks: The name of this specimen type.
                  constraints:
                    nullable: false
                    unique: true
                    uniqueConstraintName: uk__specimen_type__name
              - column:
                  name: type_code
                  remarks: The SNOMED type code for this specimen type.
                  type: text
                  constraints:
                    nullable: false
                    unique: true
                    uniqueConstraintName: uk__specimen_type__type_code
              - column:
                  name: collection_location_name
                  remarks: The collection location of this specimen type.
                  type: text
              - column:
                  name: collection_location_code
                  remarks: The SNOMED code for the collection location of this specimen type.
                  type: text
        - createTable:
            tableName: device_specimen_type
            remarks: A usable combination of device type and specimen type.
            columns:
              - column: 
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column: 
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column: 
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column: 
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: device_type_id
                  remarks: The device type for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_specimen_type__device_type
                    references: device_type
              - column:
                  name: specimen_type_id
                  remarks: The specimen type for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_specimen_type__specimen_type
                    references: specimen_type
        - addUniqueConstraint:
            tableName: device_specimen_type
            constraintName: uk__device_specimen_type
            columnNames: device_type_id, specimen_type_id
        - createTable:
            tableName: facility_device_specimen_type
            remarks: Many-to-many table for device/specimen configuration at a facility.
            columns:
              - column:
                  name: facility_id
                  remarks: A facility at which this device/specimen combination is used.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility_device_specimen_type__facility
                    references: facility
              - column:
                  name: device_specimen_type_id
                  remarks: A device/specimen combination that is allowed to be used at the facility.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility_device_specimen_type__device_specimen_type
                    references: device_specimen_type
        - addUniqueConstraint:
            tableName: facility_device_specimen_type
            constraintName: uk__facility_device_specimen_type
            columnNames: facility_id, device_specimen_type_id
        - addColumn:
            tableName: facility
            columns:
              - column:
                  name: default_device_specimen_type_id
                  type: uuid
                  constraints:
                    foreignKeyName: fk__facility__default_device_specimen_type
                    referencedTableName: device_specimen_type
        - addColumn:
            tableName: test_order
            columns:
              - column:
                  name: device_specimen_type_id
                  remarks: The device/specimen combination used to record the test result.
                  type: uuid
                  constraints:
                    foreignKeyName: fk__test_order__device_specimen_type
                    referencedTableName: device_specimen_type
                    # will be made non-null in a subsequent migration
        - addColumn:
            tableName: test_event
            columns:
              - column:
                  name: device_specimen_type_id
                  remarks: The device/specimen combination used to record the test result.
                  type: uuid
                  constraints:
                    foreignKeyName: fk__test_event__device_specimen_type
                    referencedTableName: device_specimen_type
                    # will be made non-null in a subsequent migration
  - changeSet:
      id: create-migrations-user
      author: bwarfield@cdc.gov
      comment: Create a system-level user to attribute migration insert/updates to.
      changes:
        - sql:
            remarks: Create migrations user to indicate records created by migration rather than by a human.
            sql: |
              SET search_path TO ${database.defaultSchemaName};
              INSERT INTO ${database.defaultSchemaName}.api_user
              (internal_id, created_at, updated_at, is_deleted, last_seen, login_email, last_name)
              VALUES (
                gen_random_uuid(), now(), now(), false, null,
                '${migrations_user_email}', 'Database Migration Process'
              )
      rollback:
        - sql:
            sql: |
              DELETE FROM ${database.defaultSchemaName}.api_user WHERE last_name='Database Migration Process'
  - changeSet:
      id: populate-specimen-tables
      author: bwarfield@cdc.gov
      comment: Populate specimen tables and relations based on existing data.
      validCheckSum: # yes there are two of them because liquibase checksums are not platform-independent LOLsob.
        - "8:824e942da27e8b5c9d965bf00d067d91" # Linux
        - "8:ab7979e21fd696979931d82120bcbfab" # MacOS
      preConditions:
        # run this migration only if there is at least one row in device_type. If there is not, mark it as already run.
        - onSqlOutput: FAIL
        - onFail: MARK_RAN
        - sqlCheck:
            sql: SELECT case when count(1) > 0 then 1 else 0 end FROM ${database.defaultSchemaName}.device_type;
            expectedResult: 1
      changes:
        - sql:
            remarks: Create in-use specimen types based on current device-type data.
            sql: |
              WITH swab_types_historical as (
                select distinct swab_type as type_code from ${database.defaultSchemaName}.device_type
              ),
              migration_user as (
                SELECT internal_id as migrations_user_id
                FROM ${database.defaultSchemaName}.api_user
                WHERE login_email = '${migrations_user_email}'
              )
              INSERT INTO ${database.defaultSchemaName}.specimen_type (name, type_code,
                internal_id, created_by, created_at, updated_by, updated_at, is_deleted)
              SELECT
                'Auto-generated specimen type ' || type_code,
                type_code,
                gen_random_uuid(),
                migrations_user_id,
                now(),
                migrations_user_id,
                now(),
                false
              FROM swab_types_historical cross join migration_user
        - sql:
            remarks: Add device_specimen_type entries based on current device-type data.
            sql: |
              WITH device_swab_historical as (
                SELECT dt.internal_id device_type_id, swt.internal_id specimen_type_id
                FROM ${database.defaultSchemaName}.device_type dt
                 JOIN ${database.defaultSchemaName}.specimen_type swt ON dt.swab_type = swt.type_code
              ),
              migration_user as (
                SELECT internal_id as migrations_user_id
                FROM ${database.defaultSchemaName}.api_user
                WHERE login_email = '${migrations_user_email}'
              )
              INSERT INTO ${database.defaultSchemaName}.device_specimen_type
              ( internal_id,
                created_at, created_by, updated_at, updated_by, is_deleted,
                device_type_id, specimen_type_id
              )
              SELECT
                gen_random_uuid(),
                now(), migrations_user_id, now(), migrations_user_id, false,
                device_type_id, specimen_type_id
              FROM device_swab_historical cross join migration_user;
        - sql:
            remarks: Populate facility_device_specimen_type table and (default) device_specimen_type_id columns in facility, test_type and test_order.
            sql: |
              INSERT INTO ${database.defaultSchemaName}.facility_device_specimen_type
              (facility_id, device_specimen_type_id)
              SELECT DISTINCT facility_id, ds.internal_id
              FROM ${database.defaultSchemaName}.facility_device_type
                JOIN ${database.defaultSchemaName}.device_specimen_type ds using(device_type_id);

              UPDATE ${database.defaultSchemaName}.facility f
              SET default_device_specimen_type_id = ds.internal_id
              FROM ${database.defaultSchemaName}.device_specimen_type ds
              WHERE ds.device_type_id = f.default_device_type_id;

              UPDATE ${database.defaultSchemaName}.test_order t
              SET device_specimen_type_id = ds.internal_id
              FROM ${database.defaultSchemaName}.device_specimen_type ds
              WHERE ds.device_type_id = t.device_type_id;

              UPDATE ${database.defaultSchemaName}.test_event t
              SET device_specimen_type_id = ds.internal_id
              FROM ${database.defaultSchemaName}.device_specimen_type ds
              WHERE ds.device_type_id = t.device_type_id;
      rollback:
        - sql:
            sql: |
              TRUNCATE TABLE ${database.defaultSchemaName}.specimen_type CASCADE;
              TRUNCATE TABLE ${database.defaultSchemaName}.device_specimen_type CASCADE;
              TRUNCATE TABLE ${database.defaultSchemaName}.facility_device_specimen_type CASCADE;
  - changeSet:
      id: test-order-fixup
      author: bwarfield@cdc.gov
      comment: Populate test_order.device_type_id and device_specimen_type_id with a default when it was previously left empty.
      preConditions:
        # run this migration only if there is at least one row in test_order with no device_type_id.
        - onSqlOutput: FAIL
        - onFail: MARK_RAN
        - sqlCheck:
            sql: SELECT case when count(1) > 0 then 1 else 0 end FROM ${database.defaultSchemaName}.test_order WHERE device_type_id is null;
            expectedResult: 1
      changes:
        - sql:
            remarks: Populate the device_type_id and device_specimen_type_id for test orders with the default_device_type_id from their facility.
            sql: |
              UPDATE ${database.defaultSchemaName}.test_order t
              SET device_type_id = f.default_device_type_id,
                device_specimen_type_id = f.default_device_specimen_type_id
              FROM ${database.defaultSchemaName}.facility f
              WHERE f.internal_id = t.facility_id
              AND t.device_type_id is null
      rollback:
        - sql:
            sql: -- do nothing;
            comment: This is a one-way UPDATE and can't be rolled back
  - changeSet:
      id: complete-specimen-column-additions
      author: bwarfield@cdc.gov
      comment: Update constraints for newly-added columns referencing device_specimen_type.
      changes:
        - addNotNullConstraint:
            tableName: test_event
            columnName: device_specimen_type_id
        - addNotNullConstraint:
            tableName: test_order
            columnName: device_specimen_type_id
  - changeSet:
      id: add-time-of-consent-table
      author: nclyde@skylight.digital
      comment: Add a table which stores the time at which patients accept the terms of consent for patient links
      changes:
        - createTable:
            tableName: time_of_consent
            remarks: This table stores the time at which patients accept the terms of consent for patient links
            columns:
              - column: 
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column: 
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column: 
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: patient_link_id
                  remarks: The patient link that was consented to
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__patient_link__time_of_consent
                    references: patient_link
  - changeSet:
      id: add-audit-event-table
      author: bwarfield@cdc.gov
      comment: Add table for API request auditing.
      changes:
        - createTable:
            tableName: api_audit_event
            remarks: An API access event that we record for HIPAA auditing.
            columns:
              - column:
                  name: id
                  type: uuid
                  remarks: The internal database identifier for this audit event.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: event_timestamp
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: request_id
                  remarks: The correlation ID from the application logs.
                  type: text
              - column:
                  name: http_request_details
                  remarks: Key details of the HTTP request.
                  type: jsonb
                  constraints:
                    nullable: false
              - column:
                  name: graphql_query_details
                  remarks: Lightly structured information about the graphql request.
                  type: jsonb
              - column:
                  name: graphql_error_paths
                  remarks: The list of paths in the graphql response that had errors (usually empty).
                  type: "text[]"
              - column:
                  name: api_user_id
                  type: uuid
                  remarks: The user who performed this action.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_audit_event__api_user
                    references: api_user
              - column:
                  name: is_admin_user
                  type: boolean
                  remarks: Was the user a site administrator at the time the request was made.
                  constraints:
                    nullable: false
              - column:
                  name: user_permissions
                  remarks: The permissions attached to the user when the request was made.
                  type: "text[]"
              - column:
                  name: organization_id
                  type: uuid
                  remarks: The organization within which this request was performed (if applicable).
                  constraints:
                    nullable: true
                    foreignKeyName: fk__api_audit_event__organization
                    references: organization
              - column:
                  name: patient_link_id
                  type: uuid
                  remarks: The "magic" patient link that the patient used to perform this action (if applicable).
                  constraints:
                    nullable: true
                    foreignKeyName: fk__api_audit_event__patient_link
                    references: patient_link
  - changeSet:
      id: rename-patient_link-refreshed_at
      author: adam@skylight.digital
      comment: Rename patient_link.refreshed_at to expires_at
      changes:
        - renameColumn:
            tableName: patient_link
            oldColumnName: refreshed_at
            newColumnName: expires_at
        - sql:
            remarks: Add 24hs to the timestamps, because that was the default expiry
            sql: |
              UPDATE ${database.defaultSchemaName}.patient_link pl SET expires_at = pl.created_at WHERE expires_at is null; 
              UPDATE ${database.defaultSchemaName}.patient_link pl SET expires_at = pl.expires_at + interval '1 day';
      rollback:
        - renameColumn:
            tableName: patient_link
            oldColumnName: expires_at
            newColumnName: refreshed_at
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.patient_link pl SET refreshed_at = pl.refreshed_at - interval '1 day';
  - changeSet:
      id: add-patient_link_failed_attempt
      author: nclyde@skylight.digital
      comment: Adds a non-audited join table to patient_link that tracks the number of failed attempts to authenticate
      changes:
        - createTable:
            tableName: patient_link_failed_attempt
            remarks: A non-audited join table to patient_link that tracks the number of failed attempts to authenticate
            columns:
              - column:
                  name: patient_link_internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity, and a foreign key to patient_link
                  constraints:
                    primaryKey: true
                    nullable: false
                    foreignKeyName: fk__failed_attempts__patient_link
                    references: patient_link
              - column:
                  name: failed_attempts
                  type: tinyint
                  valueNumeric: 0
                  defaultValueNumeric: 0
                  constraints:
                    nullable: false
  - changeSet:
      id: add-test-result-preferences
      author: adam@skylight.digital
      comment: Add column to Person for test result delivery preferences
      changes:
        - sql:
            remarks: Create an enum for test result delivery
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.TEST_RESULT_DELIVERY as ENUM('SMS', 'NONE');
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: test_result_delivery
                  type: ${database.defaultSchemaName}.TEST_RESULT_DELIVERY
                  remarks: Tracks the individual's preference for receiving test results
      rollback:
        - dropColumn:
            tableName: person
            columns:
              - column:
                  name: test_result_delivery
        - sql:
            remarks: Drop enum for test result delivery
            sql: |
              DROP TYPE ${database.defaultSchemaName}.TEST_RESULT_DELIVERY;
  - changeSet:
      id: audit-http-response-codes
      author: bwarfield@cdc.gov
      comment: Add HTTP response code column to api_audit_event.
      changes:
        - addColumn:
            tableName: api_audit_event
            columns:
              - column:
                  name: response_code
                  type: int
                  remarks: The HTTP response code for this request (generally only interesting for REST requests).
                  valueNumeric: 200 # backdate
                  defaultValueNumeric: 200
                  constraints:
                    nullable: false
  - changeSet:
      id: add-tribal-affiliation
      author: adam@skylight.digital
      comment: Add Tribal Affiliation to Person
      changes:
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: tribal_affiliation
                  type: jsonb
                  remarks: JSON list of strings (but actually numeric value mappings to PRIME Data Hub's Tribal Affiliation valueset)
  - changeSet:
      id: add-patient-preferences
      author: adam@skylight.digital
      comment: Add table for non-demographic preferences relating to a Person
      changes:
        - createTable:
            tableName: patient_preferences
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier of the Person to whom these preferences belong
                  constraints:
                    foreignKeyName: fk__patient_preferences__person
                    references: person
                    primaryKey: true
                    nullable: false
              - column:
                  name: preferred_language
                  type: text
                  remarks: Tracks the individual's preferred language
              - column:
                  name: test_result_delivery
                  type: ${database.defaultSchemaName}.TEST_RESULT_DELIVERY
                  remarks: Tracks the individual's preference for receiving test results
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
  - changeSet:
      id: populate-patient-preferences
      author: adam@skylight.digital
      comment: Migrate person.test_result_delivery to into patient_preferences
      changes:
        - sql:
          sql: |
            WITH migration_user as (
              SELECT internal_id as migrations_user_id
              FROM ${database.defaultSchemaName}.api_user
              WHERE login_email = '${migrations_user_email}')
            INSERT INTO ${database.defaultSchemaName}.patient_preferences (
                internal_id, preferred_language, test_result_delivery,
                created_at, created_by, updated_at, updated_by)
            SELECT
              person.internal_id internal_id,
              NULL preferred_language,
              test_result_delivery,
              now() created_at,
              migrations_user_id created_by,
              now() updated_at,
              migrations_user_id updated_by
            FROM ${database.defaultSchemaName}.person CROSS JOIN migration_user
            WHERE test_result_delivery IS NOT NULL;
      rollback:
        - sql:
          sql: |
            TRUNCATE TABLE ${database.defaultSchemaName}.patient_preferences;
  - changeSet:
      id: add-org-verified
      author: jeremy.a.zitomer@omb.eop.gov
      comment: Add a required boolean column to the organization table named identity_verified, existing records set to true.
      changes:
        - addColumn:
            tableName: organization
            columns:
              - column:
                  name: identity_verified
                  type: boolean
                  remarks: Whether this organization's identity has been verified.
                  valueBoolean: true
                  defaultValueBoolean: true
                  constraints:
                    nullable: false
  - changeSet:
      id: add-test-length
      author: emma@skylight.digital
      comment: Add test length column to the device type table. Test length will be based on the model used.
      changes:
        - addColumn:
            tableName: device_type
            columns:
              - column:
                  name: test_length
                  type: int
                  remarks: The length (in minutes) that the test will take.
                  defaultValueNumeric: 15
                  valueComputed: (CASE WHEN name like '%CareStart%' THEN 10 ELSE 15 END)
                  # This valueComputed backfills the column to have the correct values for all existing device_type rows. It does not apply to new rows.
                  constraints:
                    nullable: false
  - changeSet:
      id: remove-person-test_result_delivery
      author: adam@skylight.digital
      comment: Remove the orphaned person.test_result_delivery column
      changes:
        - dropColumn:
            tableName: person
            columns:
              - column:
                  name: test_result_delivery
      rollback:
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: test_result_delivery
                  type: ${database.defaultSchemaName}.TEST_RESULT_DELIVERY
                  remarks: Tracks the individual's preference for receiving test results
  - changeSet:
      id: add-no-phi-role
      validCheckSum:
        - "8:72023246fb745cc71d61b962ebc095f0"
      author: josh@skylight.digital
      comment: Add a role for a user with reduced DB permissions (e.g., for Metabase)
      changes:
        - tagDatabase:
          tag: add-no-phi-role
        - sql:
          sql: |
            CREATE ROLE ${noPhiUsername} WITH LOGIN NOSUPERUSER ENCRYPTED PASSWORD '${noPhiPassword}';
      rollback:
        - sql:
            sql: |
              -- do nothing;
            comment: We can't actually remove this role because the metabase DB will still be using it.
  - changeSet:
      id: add-no-phi-views
      author: josh@skylight.digital
      comment: Add views for some tables that omit columns containing PHI.
      changes:
        - createView:
            viewName: api_user_no_phi_view
            remarks: A subset of the api_user table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, updated_at, last_seen, is_deleted FROM ${database.defaultSchemaName}.api_user
        - createView:
            viewName: provider_no_phi_view
            remarks: A subset of the provider table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, created_by, updated_at, updated_by, is_deleted, provider_id FROM ${database.defaultSchemaName}.provider
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, created_by, updated_at, updated_by, is_deleted, organization_id, facility_id, race, gender, ethnicity, county, state, employed_in_healthcare, role, resident_congregate_setting, tribal_affiliation FROM ${database.defaultSchemaName}.person
        - createView:
            viewName: test_event_no_phi_view
            remarks: A subset of the test_event table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT device_specimen_type_id, created_at, created_by, updated_at, updated_by, patient_id, organization_id, result, facility_id, survey_data, date_tested_backdate, test_order_id, correction_status, prior_corrected_test_event_id, internal_id, reason_for_correction FROM ${database.defaultSchemaName}.test_event
  - changeSet:
      id: set-no-phi-user-permissions
      author: josh@skylight.digital
      comment: Restrict access for the simple_report_no_phi user to certain tables/columns in order to prevent PHI exposure.
      changes:
        - sql:
          sql: |
            REVOKE ALL PRIVILEGES ON SCHEMA ${database.defaultSchemaName} FROM PUBLIC;
            GRANT USAGE ON SCHEMA ${database.defaultSchemaName} TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.facility_device_type TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.device_type TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.organization TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.patient_answers TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.facility TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.patient_link TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.data_hub_upload TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.time_of_consent TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.specimen_type TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.device_specimen_type TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.facility_device_specimen_type TO ${noPhiUsername};
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.test_order TO ${noPhiUsername};
            GRANT SELECT ON ${database.defaultSchemaName}.api_user_no_phi_view TO ${noPhiUsername};
            GRANT SELECT ON ${database.defaultSchemaName}.provider_no_phi_view TO ${noPhiUsername};
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
            GRANT SELECT ON ${database.defaultSchemaName}.test_event_no_phi_view TO ${noPhiUsername};
      rollback:
        - sql:
          sql: |
            REVOKE ALL PRIVILEGES ON SCHEMA ${database.defaultSchemaName} FROM ${noPhiUsername};
            REVOKE ALL PRIVILEGES ON ALL TABLES IN SCHEMA ${database.defaultSchemaName} FROM ${noPhiUsername};
  - changeSet:
      id: add-patient-registration-link-table
      author: nicholas.a.scialli@omb.eop.gov
      comment: Add a table that stores facility- or organization-specific patient registration links.
      changes:
        - createTable:
            tableName: patient_registration_link
            remarks: This table stores unique registration links associated with a facility or organization.
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column:
                  name: patient_registration_link
                  remarks: The unique link
                  type: text
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: facility_id
                  type: uuid
                  remarks: The facility associated with the link
                  constraints:
                    nullable: true
                    unique: true
                    foreignKeyName: fk__link__facility
                    references: facility
              - column:
                  name: organization_id
                  type: uuid
                  remarks: The organization associated with the link
                  constraints:
                    nullable: true
                    unique: true
                    foreignKeyName: fk__link__organization
                    references: organization
              - column: &soft_delete_column
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
        - sql:
            remarks: Add constraint to allow for a facility or an organization.
            sql: ALTER TABLE  ${database.defaultSchemaName}.patient_registration_link ADD CONSTRAINT facility_or_organization CHECK (num_nonnulls(facility_id, organization_id) = 1)
      rollback:
        - dropTable:
            tableName: patient_registration_link
  - changeSet:
        id: add-spring-session-jdbc-support
        author: emma@skylight.digital
        comment: Add a table to back spring sessions.
        changes: 
          - createTable:
                tableName: spring_session
                remarks: Data store for user sessions, as created by SpringSession.
                columns:
                  - column:
                      name: primary_id
                      type: char(36)
                      remarks: The immutable internal key to identify this session.
                      constraints:
                        nullable: false
                        primaryKey: true
                        primaryKeyName: pk__spring_session
                  - column:
                      name: session_id
                      type: char(36)
                      remarks: A unique, externally visible string that identifies this session.
                      constraints:
                        nullable: false
                        unique: true
                        uniqueConstraintName: uk__spring_session
                  - column:
                      name: creation_time
                      type: DATETIME
                      remarks: The creation timestamp for the session id.
                      constraints: 
                        nullable: false
                  - column:
                      name: last_access_time
                      type: DATETIME
                      remarks: The last time the session id was used.
                      constraints:
                        nullable: false 
                  - column:
                      name: max_inactive_interval
                      type: int
                      remarks: The maximum inactive interval time before a session times out and is invalidated.
                      constraints: 
                        nullable: false
                  - column:
                      name: expiry_time
                      type: DATETIME
                      remarks: The time this session will expire (last_access_time + max_inactive_interval.)
                      constraints: 
                        nullable: false
                  - column:
                      name: principal_name
                      type: text
                      remarks: The name or UUID of the user for this session.
          - createIndex:
              tableName: spring_session
              indexName: ix__spring_session_expiry_time
              columns:
                - column:
                    name: expiry_time
          - createIndex:
              tableName: spring_session
              indexName: ix__spring_session_principal_name
              columns:
                - column:
                    name: principal_name
          - createTable:
                tableName: spring_session_attributes
                remarks: Attribute store for user sessions.
                columns:
                  - column:
                      name: session_primary_id
                      type: char(36)
                      remarks: The immutable internal key to identify this session.
                      constraints:
                        nullable: false
                        foreignKeyName: fk__spring_session_attributes__spring_session
                        references: spring_session
                        deleteCascade: true
                  - column:
                      name: attribute_name
                      type: text
                      remarks: The unique name of this attribute.
                      constraints: 
                        nullable: false
                  - column:
                      name: attribute_bytes
                      type: BYTEA
                      remarks: The stored value of the attribute.
                      constraints:
                        nullable: false
          - addPrimaryKey:
              tableName: spring_session_attributes
              columnNames: session_primary_id, attribute_name
  - changeSet:
        id: alter-spring-session-types
        author: emma@skylight.digital
        comment: Change the creation_time, last_access_time, and expiry_time columns to be of type bigint instead of DATETIME. Spring expects bigints for these columns.
        # https://github.com/spring-projects/spring-session/blob/main/spring-session-jdbc/src/main/resources/org/springframework/session/jdbc/schema-postgresql.sql#L4
        changes:
          - sql:
            sql: |
              ALTER TABLE ${database.defaultSchemaName}.spring_session ALTER COLUMN creation_time TYPE bigint USING EXTRACT(EPOCH FROM creation_time);
              ALTER TABLE ${database.defaultSchemaName}.spring_session ALTER COLUMN last_access_time TYPE bigint USING EXTRACT(EPOCH FROM last_access_time);
              ALTER TABLE ${database.defaultSchemaName}.spring_session ALTER COLUMN expiry_time TYPE bigint USING EXTRACT(EPOCH FROM expiry_time);
        rollback:
          - sql:
            sql: |
              ALTER TABLE ${database.defaultSchemaName}.spring_session ALTER COLUMN creation_time TYPE TIMESTAMP WITHOUT TIME ZONE USING to_timestamp(creation_time);
              ALTER TABLE ${database.defaultSchemaName}.spring_session ALTER COLUMN last_access_time TYPE TIMESTAMP WITHOUT TIME ZONE USING to_timestamp(last_access_time);
              ALTER TABLE ${database.defaultSchemaName}.spring_session ALTER COLUMN expiry_time TYPE TIMESTAMP WITHOUT TIME ZONE USING to_timestamp(expiry_time);
  - changeSet:
      id: set-null-telephone-to-empty-string
      author: nclyde@skylight.digital
      comment: Sets null values for telephone in the person table to empty string so that the next migration will run successfully
      changes:
          - sql:
            remarks: Sets null values for telephone in the person table to empty string
            sql: |
              WITH migration_user as (
                SELECT internal_id as migrations_user_id
                FROM ${database.defaultSchemaName}.api_user
                WHERE login_email = '${migrations_user_email}')
              UPDATE ${database.defaultSchemaName}.person SET telephone='', updated_at=now(), updated_by=(SELECT migrations_user_id from migration_user) WHERE telephone IS NULL;
            rollback:
              sql: |
                WITH migration_user as (
                  SELECT internal_id as migrations_user_id
                  FROM ${database.defaultSchemaName}.api_user
                  WHERE login_email = '${migrations_user_email}')
                UPDATE ${database.defaultSchemaName}.person SET telephone=null, updated_at=now(), updated_by=(SELECT migrations_user_id from migration_user) WHERE telephone='';
  - changeSet:
      id: add-phone-number-table
      author: nathan@skylight.digital
      comment: Add table to track user phone numbers
      validCheckSum:
        - 8:70c3b4930cb139d68729c7b9c9187463
        - 8:d833c548817f8b2f40cdc0018a86b965
      changes:
          - sql:
            remarks: Create the enumerations needed for tracking a phone number's type
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.PHONE_TYPES as ENUM('MOBILE', 'LANDLINE');
          - createTable:
              tableName: phone_number
              remarks: A join table to Person that stores phone numbers with phone type
              columns:
                 - column:
                     name: internal_id
                     type: uuid
                     remarks: The internal database identifier for this entity
                     constraints:
                       primaryKey: true
                       nullable: false
                 - column:
                     name: person_internal_id
                     type: uuid
                     remarks: A foreign key to a person
                     constraints:
                       nullable: false
                       foreignKeyName: fk__internal_id__person
                       references: person
                 - column:
                     name: type
                     type: ${database.defaultSchemaName}.PHONE_TYPES
                     remarks: Enumeration of phone type, or null
                     defaultValue: null
                     constraints:
                       nullable: true
                 - column:
                     name: number
                     type: text
                     remarks: A person's contact telephone number
                     constraints:
                       nullable: false
                 - column: *created_at_column
                 - column: *created_by_column
                 - column: *updated_at_column
                 - column: *updated_by_column
          - addColumn:
              tableName: person
              columns:
                - column:
                    name: primary_phone_internal_id
                    type: uuid
                    remarks: The identifier of the primary phone number for this patient
                    constraints:
                      nullable: true
                      foreignKeyName: fk__primary__phone__number
                      referencedTableName: phone_number
          - sql:
              remarks: Populate new `phone_number` table with existing `person.telephone` values
              sql: |
                INSERT INTO ${database.defaultSchemaName}.phone_number (
                  internal_id,
                  person_internal_id,
                  type,
                  number,
                  created_at,
                  created_by,
                  updated_at,
                  updated_by
                )
                SELECT
                  gen_random_uuid(),
                  internal_id,
                  null,
                  telephone,
                  NOW(),
                  created_by,
                  NOW(),
                  updated_by
                FROM ${database.defaultSchemaName}.person;
                UPDATE ${database.defaultSchemaName}.person p SET
                  primary_phone_internal_id = pn.internal_id
                FROM ${database.defaultSchemaName}.phone_number pn
                WHERE p.internal_id=pn.person_internal_id;
      rollback:
        - dropColumn:
            tableName: person
            columns:
              - column:
                  name: primary_phone_internal_id
        - dropTable:
            tableName: phone_number
        - sql:
            sql: |
              DROP TYPE ${database.defaultSchemaName}.PHONE_TYPES;
  - changeSet:
      id: actually-drop-organization-facility-name-constraint
      author: jeremy.a.zitomer@omb.eop.gov
      comment: Previously we tried to drop this constraint using "dropConstraint", which isn't a real liquibase operation so was silently ignored. How sad!
      changes:
        - dropUniqueConstraint:
            tableName: organization
            constraintName: uk__facility__name
      rollback:
        - addColumn:
            tableName: organization
            columns:
              - column:
                  name: facility_name
                  type: text
        - addUniqueConstraint:
            tableName: organization
            constraintName: uk__facility__name
            columnNames: facility_name
        - dropColumn:
            tableName: organization
            columns:
              - column:
                  name: facility_name
  - changeSet:
      id: add-census-dob-group-function
      author: josh@skylight.digital
      comment: Add a function that maps a DOB to a Census DOB age group
      changes:
        - createProcedure:
            dbms: postgresql
            schemaName: ${database.defaultSchemaName}
            procedureBody: |-
              CREATE OR REPLACE FUNCTION get_census_dob_group(date) RETURNS text AS
              $$
              DECLARE
                age_in_years int;
                age_group_minimum int;
              BEGIN
                age_in_years = EXTRACT('year' FROM AGE(NOW(), $1));

                IF age_in_years >= 85 THEN
                  RETURN '85 years and over';
                ELSE
                  age_group_minimum = age_in_years - mod(age_in_years, 5);
                  RETURN format('%s to %s years', age_group_minimum, age_group_minimum + 4);
                END IF;
              END;
              $$
              LANGUAGE plpgsql RETURNS NULL ON NULL INPUT;
      rollback:
        - sql:
            sql: |
              DROP FUNCTION get_census_dob_group
  - changeSet:
      id: add-census-dob-group-column-to-person-view
      author: josh@skylight.digital
      comment: Add a column for Census DOB age groups to person_no_phi_view
      changes:
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, created_by, updated_at, updated_by, is_deleted, organization_id, facility_id, race, gender, ethnicity, county, state, employed_in_healthcare, role, resident_congregate_setting, tribal_affiliation, get_census_dob_group(person.birth_date) AS census_dob_group FROM ${database.defaultSchemaName}.person
      rollback:
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, created_by, updated_at, updated_by, is_deleted, organization_id, facility_id, race, gender, ethnicity, county, state, employed_in_healthcare, role, resident_congregate_setting, tribal_affiliation FROM ${database.defaultSchemaName}.person
  - changeSet:
      id: add-email-back-to-api-user-view
      author: josh@skylight.digital
      comment: Add a column for email address to api_user_no_phi_view
      changes:
        - createView:
            viewName: api_user_no_phi_view
            remarks: A subset of the api_user table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, updated_at, last_seen, is_deleted, login_email FROM ${database.defaultSchemaName}.api_user
      rollback:
        - dropView:
            viewName: api_user_no_phi_view
        - createView:
            viewName: api_user_no_phi_view
            remarks: A subset of the api_user table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, updated_at, last_seen, is_deleted FROM ${database.defaultSchemaName}.api_user
  - changeSet:
      id: drop-person-phone
      author: adam@skylight.digital
      comment: Drop person.telephone, which is now off-row in the phone_number table. See also person.primary_phone_internal_id
      changes:
        - dropColumn:
            tableName: person
            columns:
              - column:
                  name: telephone
      rollback:
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: telephone
                  remarks: The provider's contact phone number.
                  type: text
  - changeSet:
      id: add-patient-reg-link-to-metabase
      author: adam@skylight.digital
      comment: Adds permission for the no-PHI user to select from the patient registration link table
      changes:
        sql: |
          GRANT SELECT ON TABLE ${database.defaultSchemaName}.patient_registration_link TO ${noPhiUsername};
      rollback:
        sql: |
          REVOKE SELECT ON TABLE ${database.defaultSchemaName}.patient_registration_link FROM ${noPhiUsername};
  - changeSet:
      id: add-patient-preferences-to-person-view
      author: nathan@skylight.digital
      comment: Add person patient preferences to person_no_phi_view
      validCheckSum: 8:957f60dca60b0971750078ad7303f89c
      changes:
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: |
              SELECT
                p.internal_id,
                p.created_at,
                p.created_by,
                p.updated_at,
                p.updated_by,
                p.is_deleted,
                p.organization_id,
                p.facility_id,
                p.race,
                p.gender,
                p.ethnicity,
                p.county,
                p.state,
                p.employed_in_healthcare,
                p.role,
                p.resident_congregate_setting,
                p.tribal_affiliation,
                get_census_dob_group(p.birth_date) AS census_dob_group,
                pp.preferred_language,
                pp.test_result_delivery
              FROM ${database.defaultSchemaName}.person p
              JOIN ${database.defaultSchemaName}.patient_preferences pp on pp.internal_id=p.internal_id
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
      rollback:
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: |
              SELECT
                internal_id,
                created_at,
                created_by,
                updated_at,
                updated_by,
                is_deleted,
                organization_id,
                facility_id,
                race,
                gender,
                ethnicity,
                county,
                state,
                employed_in_healthcare,
                role,
                resident_congregate_setting,
                tribal_affiliation,
                get_census_dob_group(person.birth_date) AS census_dob_group
              FROM ${database.defaultSchemaName}.person
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
  - changeSet:
      id: add-organization-type
      author: nicholas.a.scialli@omb.eop.gov
      comment: Add type of organization.
      validCheckSum: 8:a6b23862076020822dea6e1aac746d36
      changes:
        - addColumn:
            tableName: organization
            columns:
              - column:
                  name: organization_type
                  type: text
                  remarks: The type of organization
  - changeSet:
      id: add-tenant-data-access-table
      author: brett.m.maden@omb.eop.gov
      comment: Add table to track tenant data access by site admins
      changes:
        - createTable:
            tableName: tenant_data_access
            remarks: Access requests for site admins who access tenant data
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column: *soft_delete_column
              - column:
                  name: api_user_internal_id
                  type: uuid
                  remarks: A foreign key to a site admin api user who will access tenant data
                  constraints:
                    nullable: false
                    foreignKeyName: fk__internal_id__api_user
                    references: api_user
              - column:
                  name: organization_internal_id
                  type: uuid
                  remarks: A foreign key to an organization will be accessed
                  constraints:
                    nullable: false
                    foreignKeyName: fk__internal_id__organization
                    references: organization
              - column:
                  name: permissions_data
                  type: jsonb
                  remarks: For now, contains the authorities to be used to access tenant datat as strings
                  constraints:
                    nullable: false
              - column:
                  name: justification
                  type: text
                  remarks: The reason tenant data access was used
                  constraints:
                    nullable: false
              - column:
                  name: expires_at
                  type: DATETIME
                  remarks: Time that user's access to this organization's data will expire if not canceled before
                  constraints:
                    nullable: false
        - sql: |
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.tenant_data_access TO ${noPhiUsername};
      rollback:
        - sql: |
            REVOKE SELECT ON TABLE ${database.defaultSchemaName}.tenant_data_access FROM ${noPhiUsername};
        - dropTable:
            tableName: tenant_data_access
  - changeSet:
      id: add-text-message-sent-table
      author: nicholas.a.scialli@omb.eop.gov
      comment: Add table to track sent text messages
      changes:
        - createTable:
            tableName: text_message_sent
            remarks: A table to store the Patient Link and Twilio text message id
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: patient_link_internal_id
                  type: uuid
                  remarks: A foreign key to a patient link
                  constraints:
                    nullable: false
                    foreignKeyName: fk__internal_id__patient_link
                    references: patient_link
              - column:
                  name: twilio_message_id
                  type: text
                  remarks: The Twilio text message ID
                  constraints:
                    nullable: false
                    unique: true
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.text_message_sent TO ${noPhiUsername};
      rollback:
        - sql: |
            REVOKE SELECT ON ${database.defaultSchemaName}.text_message_sent FROM ${noPhiUsername};
        - dropTable:
            tableName: text_message_sent
  - changeSet:
      id: add-columns-to-provider-view
      author: josh@skylight.digital
      comment: Add additional columns to provider_no_phi_view.
      changes:
        - createView:
            viewName: provider_no_phi_view
            remarks: A subset of the provider table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, created_by, updated_at, updated_by, is_deleted, provider_id, first_name, last_name, telephone, street, city, county, state, postal_code FROM ${database.defaultSchemaName}.provider;
      rollback:
        - dropView:
            viewName: provider_no_phi_view
        - createView:
            viewName: provider_no_phi_view
            remarks: A subset of the provider table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, created_by, updated_at, updated_by, is_deleted, provider_id FROM ${database.defaultSchemaName}.provider
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.provider_no_phi_view TO ${noPhiUsername};
  - changeSet:
      id: generate-registration-links
      author: nicholas.a.scialli@omb.eop.gov
      comment: Generates self-registration links for orgs and facilities that do not have them yet.
      changes:
        - createProcedure:
            dbms: postgresql
            schemaName: ${database.defaultSchemaName}
            procedureBody: |-
              DO $$
                DECLARE
                  temprow record;
                BEGIN
                FOR temprow IN
                  WITH migration_user AS (SELECT internal_id AS migrations_user_id
                    FROM ${database.defaultSchemaName}.api_user
                    WHERE login_email = '${migrations_user_email}')
                  SELECT
                    o.internal_id AS organization_id, f.internal_id AS facility_id, m.migrations_user_id AS migrations_user_id
                  FROM
                    ${database.defaultSchemaName}.facility AS f 
                    FULL OUTER JOIN ${database.defaultSchemaName}.patient_registration_link AS p ON f.internal_id = p.facility_id 
                    FULL OUTER JOIN ${database.defaultSchemaName}.organization AS o ON o.internal_id = p.organization_id
                    CROSS JOIN migration_user AS m
                  WHERE
                    p.patient_registration_link IS NULL
                LOOP
                  BEGIN
                    INSERT INTO ${database.defaultSchemaName}.patient_registration_link 
                      (internal_id, created_at, created_by, updated_at, updated_by, organization_id, facility_id, 
                      patient_registration_link, is_deleted) 
                    VALUES (
                      gen_random_uuid(), now(), temprow.migrations_user_id, now(), temprow.migrations_user_id, temprow.organization_id,
                      temprow.facility_id, substr(translate(md5(random() :: text), '150ilos', ''), 0, 6), false
                    );
                  EXCEPTION WHEN unique_violation THEN
                    -- extremely unlikely
                  END;
                END LOOP;
                END;
              $$;
      rollback:
        - sql:
            sql: |
              WITH migration_user as (
                SELECT internal_id as migrations_user_id
                FROM ${database.defaultSchemaName}.api_user
                WHERE login_email = '${migrations_user_email}')
              DELETE FROM ${database.defaultSchemaName}.patient_registration_link 
              USING migration_user m
              WHERE created_by = m.migrations_user_id;
  - changeSet:
        id: audit-http-session
        author: emma@skylight.digital
        comment: Add HTTP session column to api_audit_event.
        changes:
          - addColumn:
              tableName: api_audit_event
              columns:
                - column:
                    name: session
                    type: jsonb
                    remarks: The HTTP session information for this request (only applies to REST requests).
  - changeSet:
      id: add-no-phi-audit-log
      author: tbest@cdc.gov
      comment: Add a view for the audit log that omits columns containing PHI.
      changes:
        - createView:
            viewName: api_audit_event_no_phi
            remarks: A subset of the api_user table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT id, event_timestamp, request_id, api_user_id, is_admin_user, user_permissions, organization_id, patient_link_id, response_code FROM ${database.defaultSchemaName}.api_audit_event
        - sql: |
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.api_audit_event_no_phi TO ${noPhiUsername};
      rollback:
        - dropView:
            viewName: api_audit_event_no_phi
  - changeSet:
      id: add-text-message-status-table
      author: nicholas.a.scialli@omb.eop.gov
      comment: Add table to track the delivery status of text messages
      changes:
        - createTable:
            tableName: text_message_status
            remarks: A table to store the various statuses of each text message
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: text_message_sent_internal_id
                  type: uuid
                  remarks: A foreign key to a text message sent
                  constraints:
                    nullable: false
                    foreignKeyName: fk__internal_id__text_message_sent
                    references: text_message_sent
              - column:
                  name: status
                  type: text
                  remarks: The status of the text message as reported by Twilio
                  constraints:
                    nullable: false
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.text_message_status TO ${noPhiUsername};
      rollback:
        sql: |
          DROP TABLE ${database.defaultSchemaName}.TEXT_MESSAGE_STATUS;
  - changeSet:
      id: add-lookup-id-to-no-phi-view
      author: tbest@cdc.gov
      comment: Add lookup_id to person_no_phi_view.
      changes:
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: |
              SELECT
                p.internal_id,
                p.created_at,
                p.created_by,
                p.updated_at,
                p.updated_by,
                p.is_deleted,
                p.organization_id,
                p.facility_id,
                p.race,
                p.gender,
                p.ethnicity,
                p.county,
                p.state,
                p.employed_in_healthcare,
                p.role,
                p.resident_congregate_setting,
                p.tribal_affiliation,
                p.lookup_id,
                get_census_dob_group(p.birth_date) AS census_dob_group,
                pp.preferred_language,
                pp.test_result_delivery
              FROM ${database.defaultSchemaName}.person p
              JOIN ${database.defaultSchemaName}.patient_preferences pp on pp.internal_id=p.internal_id
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
      rollback:
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: |
              SELECT
                p.internal_id,
                p.created_at,
                p.created_by,
                p.updated_at,
                p.updated_by,
                p.is_deleted,
                p.organization_id,
                p.facility_id,
                p.race,
                p.gender,
                p.ethnicity,
                p.county,
                p.state,
                p.employed_in_healthcare,
                p.role,
                p.resident_congregate_setting,
                p.tribal_affiliation,
                get_census_dob_group(p.birth_date) AS census_dob_group,
                pp.preferred_language,
                pp.test_result_delivery
              FROM ${database.defaultSchemaName}.person p
              JOIN patient_preferences pp on pp.internal_id=p.internal_id
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
  - changeSet:
      id: denormalize-patient_preferences-1
      author: adam@skylight.digital
      comment: This is part 1 of denormalizing the patient_preference table on-row into person
      changes:
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: preferred_language
                  type: text
              - column:
                  name: test_result_delivery_preference
                  type: ${database.defaultSchemaName}.TEST_RESULT_DELIVERY
                  remarks: Tracks the individual's preference for receiving test results
  - changeSet:
      id: denormalize-patient_preferences-2
      author: adam@skylight.digital
      comment: This copies the data from patient_preferences into the new columns
      changes:
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.person
              SET
                  preferred_language = patient_preferences.preferred_language,
                  test_result_delivery_preference = patient_preferences.test_result_delivery
              FROM ${database.defaultSchemaName}.patient_preferences
              WHERE patient_preferences.internal_id = person.internal_id;
      rollback:
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.patient_preferences
              SET
                  preferred_language = person.preferred_language,
                  test_result_delivery = person.test_result_delivery_preference
              FROM ${database.defaultSchemaName}.person
              WHERE patient_preferences.internal_id = person.internal_id;
  - changeSet:
      id: update-person_no_phi_view
      author: adam@skylight.digital
      changes:
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: |
              SELECT
                p.internal_id,
                p.created_at,
                p.created_by,
                p.updated_at,
                p.updated_by,
                p.is_deleted,
                p.organization_id,
                p.facility_id,
                p.race,
                p.gender,
                p.ethnicity,
                p.county,
                p.state,
                p.employed_in_healthcare,
                p.role,
                p.resident_congregate_setting,
                p.tribal_affiliation,
                p.lookup_id,
                get_census_dob_group(p.birth_date) AS census_dob_group,
                p.preferred_language,
                p.test_result_delivery_preference
              FROM ${database.defaultSchemaName}.person p
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
      rollback:
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: |
              SELECT
                p.internal_id,
                p.created_at,
                p.created_by,
                p.updated_at,
                p.updated_by,
                p.is_deleted,
                p.organization_id,
                p.facility_id,
                p.race,
                p.gender,
                p.ethnicity,
                p.county,
                p.state,
                p.employed_in_healthcare,
                p.role,
                p.resident_congregate_setting,
                p.tribal_affiliation,
                p.lookup_id,
                get_census_dob_group(p.birth_date) AS census_dob_group,
                pp.preferred_language,
                pp.test_result_delivery
              FROM ${database.defaultSchemaName}.person p
              JOIN patient_preferences pp on pp.internal_id=p.internal_id
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
  - changeSet:
      id: denormalize-patient_preferences-3
      author: adam@skylight.digital
      changes:
        - dropTable:
            tableName: patient_preferences
      rollback:
        - createTable:
            tableName: patient_preferences
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier of the Person to whom these preferences belong
                  constraints:
                    foreignKeyName: fk__patient_preferences__person
                    references: person
                    primaryKey: true
                    nullable: false
              - column:
                  name: preferred_language
                  type: text
                  remarks: Tracks the individual's preferred language
              - column:
                  name: test_result_delivery
                  type: ${database.defaultSchemaName}.TEST_RESULT_DELIVERY
                  remarks: Tracks the individual's preference for receiving test results
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.patient_preferences
              SET
                  preferred_language = person.preferred_language,
                  test_result_delivery = person.test_result_delivery_preference
              FROM ${database.defaultSchemaName}.person
              WHERE patient_preferences.internal_id = person.internal_id;
  - changeSet:
      id: add-index-person-org-facility-deleted
      author: adam@skylight.digital
      changes:
        - createIndex:
            tableName: person
            indexName: ix__person__organization_id-facility_id-is_deleted
            columns:
              - column:
                  name: organization_id
              - column:
                  name: facility_id
              - column:
                  name: is_deleted
  - changeSet:
      id: add-index-test_event-facility_id
      author: adam@skylight.digital
      changes:
        - createIndex:
            tableName: test_event
            indexName: ix__test_event__facility_id
            columns:
              - column:
                  name: facility_id
  - changeSet:
      id: add-index-phone-number-person-internal-id
      author: brett.m.maden@omb.eop.gov
      changes:
        - createIndex:
            tableName: phone_number
            indexName: ix__phone_number__person_internal_id
            columns:
              - column:
                  name: person_internal_id
  - changeSet:
      id: add-index-test_event-patient_id
      author: zedd@skylight.digital
      changes:
        - createIndex:
            tableName: test_event
            indexName: ix__test_event__patient_id
            columns:
              - column:
                  name: patient_id
  - changeSet:
      id: add-patient_has_prior_tests
      author: zedd@skylight.digital
      comment: This is to add patient_has_prior_tests test field to test event
      changes:
        - tagDatabase:
            tag:  add-patient_has_prior_tests
        - addColumn:
            tableName: test_event
            columns:
              - column:
                  name: patient_has_prior_tests
                  type: boolean
                  remarks: patient_has_prior_tests will track whether a patient has prior test events
                  constraints:
                    nullable: true
  - changeSet:
      id: add-indexes-top_level_dashboard_metrics
      author: brett.m.maden@omb.eop.gov
      changes:
        - tagDatabase:
            tag: add-indexes-top_level_dashboard_metrics
        - createIndex:
            tableName: test_event
            indexName: ix__test_event__prior_corrected_test_event_id
            columns:
              - column:
                  name: prior_corrected_test_event_id
        - createIndex:
            tableName: test_event
            indexName: ix__test_event__fac_id-coal_test_date-test-corr_status
            columns:
              - column:
                  name: facility_id
              - column:
                  name: COALESCE(date_tested_backdate, created_at)
              - column:
                  name: correction_status
      rollback:
        - dropIndex:
            indexName: ix__test_event__fac_id-coal_test_date-test-corr_status
        - dropIndex:
            indexName: ix__test_event__prior_corrected_test_event_id
  - changeSet:
      id: add-organization-queue-table
      author: brett.m.maden@omb.eop.gov
      comment: Add table for newly requested, unverified organizations
      changes:
        - tagDatabase:
            tag: add-organization-queue-table
        - createTable:
            tableName: organization_queue
            remarks: Organizations that have requested to start using SimpleReport
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column: *soft_delete_column
              - column:
                  name: organization_name
                  type: text
                  remarks: Organization name (cleaned)
                  constraints:
                    nullable: false
              - column:
                  name: organization_external_id
                  type: text
                  remarks: Organization external id (cleaned)
                  constraints:
                    nullable: false
              - column:
                  name: request_data
                  type: jsonb
                  remarks: The original request data (including name, email, phone, etc)
                  constraints:
                    nullable: false
              - column:
                  name: verified_organization_id
                  type: uuid
                  remarks: A foreign key to an organization created when this queue item was identity verified
                  constraints:
                    nullable: true
                    foreignKeyName: fk__internal_id__organization
                    references: organization
        - createView:
            viewName: organization_queue_no_phi_view
            remarks: A subset of the organization_queue table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, updated_at, organization_name, organization_external_id, verified_organization_id FROM ${database.defaultSchemaName}.organization_queue
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.organization_queue_no_phi_view TO ${noPhiUsername};
      rollback:
        - dropView:
            viewName: organization_queue_no_phi_view
        - dropTable:
            tableName: organization_queue
  - changeSet:
      id: drop-not-null-constraint-swab_type
      author: zedd@skylight.digital
      comment: Drop the not null constraint for swab_type in device_type
      changes:
        - tagDatabase:
            tag: drop-not-null-constraint-swab_type
        - dropNotNullConstraint:
            columnName: swab_type
            tableName: device_type
  - changeSet:
      id: add-reportstream-response-table
      author: adam@skylight.digital
      comment: Adds a non-audited table to track publish responses (warnings & errors) from ReportStream
      changes:
        - createTable:
            tableName: report_stream_response
            remarks: A non-audited table to track exceptional publish responses from ReportStream
            columns:
              - column: *pk_column
              - column:
                  name: test_event_internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity, and a foreign key to test_event
                  constraints:
                    primaryKey: false
                    nullable: false
                    foreignKeyName: fk__report_stream_response__test_event
                    references: test_event
              - column:
                  name: details
                  type: text
                  remarks: Explanatory details about the failure
              - column:
                  name: is_error
                  type: boolean
                  remarks: Is this exception an error? If not, it's a warning
              - column:
                  name: resolution_note
                  type: text
                  remarks: When this warning or error has been manually resolved, leave a note
              - column: *created_at_column
        - sql: |
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.report_stream_response TO ${noPhiUsername};
      rollback:
        - sql: |
            REVOKE SELECT ON TABLE ${database.defaultSchemaName}.report_stream_response FROM ${noPhiUsername};
        - dropTable:
            tableName: report_stream_response
  - changeSet:
      id: add-index-patient_link-test_order
      author: adam@skylight.digital
      comment: Adds an index on the test_order_internal_id field of patient_link
      changes:
        - tagDatabase:
            tag: add-index-patient_link-test_order
        - createIndex:
            tableName: patient_link
            indexName: ix__patient_link__test_order_id
            columns:
              - column:
                  name: test_order_id
  - changeSet:
      id: add-indexes-organization-queue
      author: brett.m.maden@omb.eop.gov
      comment: Adds unique indexes on the organization_queue fields organization_external_id and verified_organization_id
      changes:
        - tagDatabase:
            tag: add-indexes-organization-queue
        - createIndex:
            tableName: organization_queue
            indexName: uk__organization_queue__organization_external_id
            columns:
              - column:
                  name: organization_external_id
            unique: true
        - createIndex:
            tableName: organization_queue
            indexName: uk__organization_queue__verified_organization_id
            columns:
              - column:
                  name: verified_organization_id
            unique: true
      rollback:
        - dropIndex:
            indexName: uk__organization_queue__organization_external_id
        - dropIndex:
            indexName: uk__organization_queue__verified_organization_id
  - changeSet:
      id: add-country-to-person
      author: nclyde@skylight.digital
      comment: add country to person for international addresses
      changes:
        - tagDatabase:
            tag: add-country-to-person
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: country
                  type: text
                  remarks: The country of a person's address (ISO Alpha-3 code)
                  defaultValue: "USA"
                  value: "USA"
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: |
              SELECT
                p.internal_id,
                p.created_at,
                p.created_by,
                p.updated_at,
                p.updated_by,
                p.is_deleted,
                p.organization_id,
                p.facility_id,
                p.race,
                p.gender,
                p.ethnicity,
                p.county,
                p.state,
                p.country,
                p.employed_in_healthcare,
                p.role,
                p.resident_congregate_setting,
                p.tribal_affiliation,
                p.lookup_id,
                get_census_dob_group(p.birth_date) AS census_dob_group,
                p.preferred_language,
                p.test_result_delivery_preference
              FROM ${database.defaultSchemaName}.person p
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
      rollback:
        - dropView:
            viewName: person_no_phi_view
        - createView:
            viewName: person_no_phi_view
            remarks: A subset of the person table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: |
              SELECT
                p.internal_id,
                p.created_at,
                p.created_by,
                p.updated_at,
                p.updated_by,
                p.is_deleted,
                p.organization_id,
                p.facility_id,
                p.race,
                p.gender,
                p.ethnicity,
                p.county,
                p.state,
                p.employed_in_healthcare,
                p.role,
                p.resident_congregate_setting,
                p.tribal_affiliation,
                p.lookup_id,
                get_census_dob_group(p.birth_date) AS census_dob_group,
                p.preferred_language,
                p.test_result_delivery_preference
              FROM ${database.defaultSchemaName}.person p
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
        - dropColumn:
            tableName: person
            columns:
              - column:
                  name: country
                  type: text
                  remarks: The country of a person's address
  - changeSet:
      id: add-email-all-to-test-result-delivery
      author: zedd@skylight.digital
      comment: Add EMAIL and ALL to test result delivery preferences
      runInTransaction: false
      changes:
        - tagDatabase:
              tag: add-email-all-to-test-result-delivery
        - sql:
            remarks: Adds EMAIL and ALL to TEST_RESULT_DELIVERY enum
            sql: |
              ALTER TYPE ${database.defaultSchemaName}.TEST_RESULT_DELIVERY ADD VALUE 'EMAIL';
              ALTER TYPE ${database.defaultSchemaName}.TEST_RESULT_DELIVERY ADD VALUE 'ALL';
      rollback:
        - sql:
            remarks: Removes the enum and recreates it with the old options only
            sql: |
              ALTER TYPE ${database.defaultSchemaName}.TEST_RESULT_DELIVERY RENAME TO TEST_RESULT_DELIVERY_OLD;
              CREATE TYPE ${database.defaultSchemaName}.TEST_RESULT_DELIVERY as ENUM('SMS', 'NONE');
              DROP VIEW IF EXISTS ${database.defaultSchemaName}.person_no_phi_view;
              ALTER TABLE ${database.defaultSchemaName}.person ALTER COLUMN test_result_delivery_preference TYPE ${database.defaultSchemaName}.TEST_RESULT_DELIVERY USING test_result_delivery_preference::text::${database.defaultSchemaName}.TEST_RESULT_DELIVERY;
              DROP TYPE ${database.defaultSchemaName}.TEST_RESULT_DELIVERY_OLD;
              create view ${database.defaultSchemaName}.person_no_phi_view AS
                SELECT
                  p.internal_id,
                  p.created_at,
                  p.created_by,
                  p.updated_at,
                  p.updated_by,
                  p.is_deleted,
                  p.organization_id,
                  p.facility_id,
                  p.race,
                  p.gender,
                  p.ethnicity,
                  p.county,
                  p.state,
                  p.country,
                  p.employed_in_healthcare,
                  p.role,
                  p.resident_congregate_setting,
                  p.tribal_affiliation,
                  p.lookup_id,
                  get_census_dob_group(p.birth_date) AS census_dob_group,
                  p.preferred_language,
                  p.test_result_delivery_preference
                FROM ${database.defaultSchemaName}.person p;
              GRANT SELECT ON ${database.defaultSchemaName}.person_no_phi_view TO ${noPhiUsername};
  - changeSet:
      id: add-emails-to-patient
      author: nathan@skylight.digital
      comment: add emails column to person table to allow multiple patient emails
      validCheckSum:
        - 8:b46ba26e6035ee8c27fbf634e4dfaa3e
        - 8:5dc7634e2ce3740dd0d94b231e0cb235
      changes:
        - tagDatabase:
            tag: add-emails-to-patient
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: emails
                  type: text[]
                  remarks: All patient email addresses
        - sql:
            remarks: Populate new `emails` column with value from patient `email`
            sql: |
              UPDATE ${database.defaultSchemaName}.person SET emails = ARRAY[email] WHERE email IS NOT NULL;
      rollback:
        - dropColumn:
            tableName: person
            columnName: emails
  - changeSet:
      id: populate-patient-emails
      author: zedd@skylight.digital
      comment: populate emails column from email
      changes:
        - tagDatabase:
            tag: populate-patient-emails
        - sql:
            remarks: Populate new `emails` column with value from patient `email`
            sql: |
              UPDATE ${database.defaultSchemaName}.person SET emails = ARRAY[email] WHERE email IS NOT NULL;
      rollback:
        - sql:
            sql: |
              -- do nothing;
  - changeSet:
      id: add-specimen_type_id-to-test_event
      author: zedd@skylight.digital
      comment: add specimen_type_id to test event
      validCheckSum: 8:8a4646ea60b59027e637fc0c91b3ecdb
      changes:
        - tagDatabase:
            tag: add-specimen_type_id-to-test_event
        - addColumn:
            tableName: test_event
            columns:
              - column:
                  name: specimen_type_id
                  remarks: The specimen type for this test event.
                  type: uuid
                  constraints:
                    nullable: true
                    foreignKeyName: fk__test_event__specimen_type
                    references: specimen_type(internal_id)
  - changeSet:
      id: add-specimen_type_id-to-test_order
      author: zedd@skylight.digital
      comment: add specimen_type_id to test order
      validCheckSum:   8:9cf8c0055fd13dd7c6d387500abea5c7
      changes:
        - tagDatabase:
            tag: add-specimen_type_id-to-test_order
        - addColumn:
            tableName: test_order
            columns:
              - column:
                  name: specimen_type_id
                  remarks: The specimen type for this test order.
                  type: uuid
                  constraints:
                    nullable: true
                    foreignKeyName: fk__test_order__specimen_type
                    references: specimen_type(internal_id)
  - changeSet:
      id: add-default_specimen_type_id-to-facility
      author: zedd@skylight.digital
      comment: add specimen_type_id to facility
      changes:
        - tagDatabase:
            tag: add-default_specimen_type_id-to-facility
        - addColumn:
            tableName: facility
            columns:
              - column:
                  name: default_specimen_type_id
                  remarks: The default specimen type (if any) for tests at this facility.
                  type: uuid
                  constraints:
                    nullable: true
                    foreignKeyName: fk__facility__default_specimen_type
                    references: specimen_type(internal_id)
  - changeSet:
      id: add-supported-disease-table
      author: emma@skylight.digital
      comment: Adds a non-audited table to track which diseases SimpleReport supports
      changes:
        - tagDatabase:
            tag: add-supported-disease-table
        - createTable:
            tableName: supported_disease
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: text
                  remarks: Tracks the human-readable name for the disease
                  constraints:
                    nullable: false
              - column:
                  name: loinc
                  type: text
                  remarks: Tracks the LOINC code for this disease
                  constraints:
                    nullable: false
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.supported_disease TO ${noPhiUsername};
      rollback:
          sql: |
            DROP TABLE ${database.defaultSchemaName}.supported_disease CASCADE;
  - changeSet:
      id: populate-supported-disease-table
      author: emma@skylight.digital
      comment: Populate the diseases that SimpleReport currently supports.
      changes:
        - tagDatabase:
            tag: populate-supported-disease-table
        - sql:
            comment: Add COVID-19, Flu A, and Flu B to the supported disease table
            sql: |
              INSERT INTO ${database.defaultSchemaName}.supported_disease (
                   internal_id,
                   name,
                   loinc)
              VALUES
                   (gen_random_uuid(), 'COVID-19', '96741-4'),
                   (gen_random_uuid(), 'Flu A', 'LP14239-5'),
                   (gen_random_uuid(), 'Flu B', 'LP14240-3');
      rollback:
        sql: |
          TRUNCATE TABLE ${database.defaultSchemaName}.supported_disease CASCADE;
  - changeSet:
      id: create-device-disease-join-table
      author: emma@skylight.digital
      comment: Add a new table that tracks which disease a given testing device will support.
      changes:
        - tagDatabase:
            tag: create-device-disease-join-table
        - createTable:
            tableName: device_supported_disease
            remarks: A usable combination of device type and supported diseases for that device.
            columns:
              - column:
                  name: device_type_id
                  remarks: The device type for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__device_type
                    references: device_type
              - column:
                  name: supported_disease_id
                  remarks: The supported disease for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__supported_disease_type
                    references: supported_disease
              - addUniqueConstraint:
                  tableName: device_supported_disease
                  constraintName: uk__device_supported_disease
                  columnNames: device_type_id, supported_disease_id
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.device_supported_disease TO ${noPhiUsername};
      rollback:
        sql: |
          DROP TABLE ${database.defaultSchemaName}.device_supported_disease;
  - changeSet:
      id: create-result-table
      author: emma@skylight.digital
      comment: Add a table that joins a test event, disease, and a specific result.
      changes:
        - tagDatabase:
            tag: create-result-table
        - createTable:
            tableName: result
            remarks: A usable combination of test event, disease, and results (as LONIC).
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column: *soft_delete_column
              - column:
                  name: test_event_id
                  remarks: The test event for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__result__test_event_id
                    references: test_event
              - column:
                  name: test_order_id
                  remarks: The test order for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__result__test_order_id
                    references: test_order
              - column:
                  name: disease_id
                  remarks: The disease for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__result__disease_id
                    references: supported_disease
              - column:
                  name: result
                  remarks: The result for this combination.
                  type: text
                  constraints:
                    nullable: false
              - addUniqueConstraint:
                  tableName: result
                  constraintName: uk__result
                  columnNames: test_event_id, test_order_id, disease_id
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.result TO ${noPhiUsername};
      rollback:
        sql: |
          DROP TABLE ${database.defaultSchemaName}.result;
  - changeSet:
      id: make-test-event-nullable-on-results-table
      author: emma@skylight.digital
      comment: Make test event column on results table nullable.
      changes:
        - tagDatabase:
            tag: make-test-event-nullable-on-results-table
        - dropNotNullConstraint:
            tableName: result
            columnName: test_event_id
  - changeSet:
      id: add-test-result-column-to-result-table
      author: emma@skylight.digital
      comment: Add another test result column to result table to store results as enum. This preserves the original result even if the associated LOINC changes
      changes:
        - tagDatabase:
          tag: add-test-result-column-to-result-table
        - addColumn:
            tableName: result
            columns:
              - column:
                  name: test_result
                  type: ${database.defaultSchemaName}.TEST_RESULT
                  constraints:
                    nullable: false
              - addUniqueConstraint:
                  tableName: result
                  constraintName: uk__test_result
                  columnNames: test_event_id, test_order_id, disease_id
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.result TO ${noPhiUsername};
      rollback:
        sql: |
          ALTER TABLE ${database.defaultSchemaName}.result DROP COLUMN test_result;
  - changeSet:
      id: add-foreign-key-indices-to-result-table
      author: nclyde@skylight.digital
      comment: Add indices to result table to speed up queries
      changes:
        - tagDatabase:
            tag: add-foreign-key-indices-to-result-table
        - createIndex:
            tableName: result
            indexName: idx__result__disease_id
            columns:
              - column:
                  name: disease_id
        - createIndex:
            tableName: result
            indexName: idx__result__test_event_id
            columns:
              - column:
                  name: test_event_id
        - createIndex:
            tableName: result
            indexName: idx__result__test_order_id
            columns:
              - column:
                  name: test_order_id
  - changeSet:
      id: create-upload-table
      author: dsass@skylight.digital
      comment: Add a table that holds data about bulk test result uploads.
      changes:
        - tagDatabase:
            tag: create-upload-table
        - sql:
            remarks: Create the enumerations for upload statuses
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.UPLOAD_STATUS as ENUM('SUCCESS', 'FAILURE', 'PENDING');
        - createTable:
            tableName: upload
            remarks: A collection of meta data for bulk uploads.
            columns:
              - column:
                  name: report_id
                  type: uuid
                  remarks: The Report Stream report Id.
                  constraints:
                    nullable: false
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column:
                  name: records_count
                  remarks: The number of records uploaded.
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: status
                  remarks: The status of the upload.
                  type: ${database.defaultSchemaName}.UPLOAD_STATUS
                  constraints:
                    nullable: false
              - column:
                  name: org_id
                  remarks: The organization id that uploaded the data.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__upload__organization
                    references: organization(internal_id)
              - column:
                  name: facility_id
                  remarks: The facility id that uploaded the data.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__upload__facility
                    references: facility(internal_id)
              - column:
                  name: errors
                  remarks: Any errors encountered when uploading.
                  type: text
              - column:
                  name: warnings
                  remarks: Any warnings encountered when uploading.
                  type: text
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.upload TO ${noPhiUsername};
      rollback:
        sql: |
          DROP TABLE ${database.defaultSchemaName}.upload;
          DROP TYPE ${database.defaultSchemaName}.UPLOAD_STATUS;
  - changeSet:
      id: drop-audit-log-table
      author: josh@skylight.digital
      comment: Drop the audit log table and associated view.
      changes:
        - tagDatabase:
            tag: drop-audit-log-table
        - sql:
            sql: DROP VIEW IF EXISTS ${database.defaultSchemaName}.api_audit_event_no_phi;
        - dropTable:
            tableName: api_audit_event
      rollback:
        - createTable:
            tableName: api_audit_event
            remarks: An API access event that we record for HIPAA auditing.
            columns:
              - column:
                  name: id
                  type: uuid
                  remarks: The internal database identifier for this audit event.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: event_timestamp
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: request_id
                  remarks: The correlation ID from the application logs.
                  type: text
              - column:
                  name: http_request_details
                  remarks: Key details of the HTTP request.
                  type: jsonb
                  constraints:
                    nullable: false
              - column:
                  name: graphql_query_details
                  remarks: Lightly structured information about the graphql request.
                  type: jsonb
              - column:
                  name: graphql_error_paths
                  remarks: The list of paths in the graphql response that had errors (usually empty).
                  type: "text[]"
              - column:
                  name: api_user_id
                  type: uuid
                  remarks: The user who performed this action.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_audit_event__api_user
                    references: api_user
              - column:
                  name: is_admin_user
                  type: boolean
                  remarks: Was the user a site administrator at the time the request was made.
                  constraints:
                    nullable: false
              - column:
                  name: user_permissions
                  remarks: The permissions attached to the user when the request was made.
                  type: "text[]"
              - column:
                  name: organization_id
                  type: uuid
                  remarks: The organization within which this request was performed (if applicable).
                  constraints:
                    nullable: true
                    foreignKeyName: fk__api_audit_event__organization
                    references: organization
              - column:
                  name: patient_link_id
                  type: uuid
                  remarks: The "magic" patient link that the patient used to perform this action (if applicable).
                  constraints:
                    nullable: true
                    foreignKeyName: fk__api_audit_event__patient_link
                    references: patient_link
        - addColumn:
            tableName: api_audit_event
            columns:
              - column:
                  name: response_code
                  type: int
                  remarks: The HTTP response code for this request (generally only interesting for REST requests).
                  valueNumeric: 200 # backdate
                  defaultValueNumeric: 200
                  constraints:
                    nullable: false
        - addColumn:
            tableName: api_audit_event
            columns:
              - column:
                  name: session
                  type: jsonb
                  remarks: The HTTP session information for this request (only applies to REST requests).
        - createView:
            viewName: api_audit_event_no_phi
            remarks: A subset of the api_user table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT id, event_timestamp, request_id, api_user_id, is_admin_user, user_permissions, organization_id, patient_link_id, response_code FROM ${database.defaultSchemaName}.api_audit_event
        - sql: |
            GRANT SELECT ON TABLE ${database.defaultSchemaName}.api_audit_event_no_phi TO ${noPhiUsername};
  - changeSet:
      id: modify-upload-table
      author: dsass@skylight.digital
      comment: remove facility id column and change data type of error and warning columns to json
      changes:
        - tagDatabase:
            tag: alter-upload-table
        - dropColumn:
            tableName: upload
            columnName: facility_id
        - modifyDataType:
            tableName: upload
            columnName: errors
            newDataType: jsonb
        - modifyDataType:
            tableName: upload
            columnName: warnings
            newDataType: jsonb
      rollback:
        - addColumn:
            tableName: upload
            columns:
              - column:
                  name: facility_id
                  remarks: The facility id that uploaded the data.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__upload__facility
                    references: facility(internal_id)
        - sql:
            sql: |
              ALTER TABLE ${database.defaultSchemaName}.upload ALTER COLUMN errors TYPE text;
              ALTER TABLE ${database.defaultSchemaName}.upload ALTER COLUMN warnings TYPE text;
  - changeSet:
        id: update-no-phi-user-view-of-org-queue-table
        author: bob@skylight.digital
        comment: Add the organization_queue's is_deleted column to the view permissions of the no-phi-user so we can see it in metabase
        changes:
          - tagDatabase:
              tag: update-no-phi-user-view-of-org-queue-table
          - createView:
              viewName: org_queue_no_phi_is_deleted
              remarks: A subset of the organization_queue table with columns containing PHI removed.
              replaceIfExists: true
              fullDefinition: false
              selectQuery: SELECT internal_id, created_at, updated_at, organization_name, organization_external_id, verified_organization_id, is_deleted FROM ${database.defaultSchemaName}.organization_queue
          - sql:
              sql: GRANT SELECT ON ${database.defaultSchemaName}.org_queue_no_phi_is_deleted TO ${noPhiUsername};
        rollback:
          - dropView:
              viewName: org_queue_no_phi_is_deleted
  - changeSet:
      id: backfill-results-table
      author: emma@skylight.digital
      comment: backfill the new results table with existing results from TestOrders
      changes:
        - tagDatabase:
            tag: backfill-results-table
        - sql:
            sql: |
              INSERT INTO ${database.defaultSchemaName}.result
              SELECT
                gen_random_uuid(),
                t.created_at,
                t.created_by,
                t.updated_at,
                t.updated_by,
                FALSE,
                t.test_event_id,
                t.internal_id,
                (SELECT d.internal_id from ${database.defaultSchemaName}.supported_disease d WHERE d.name='COVID-19'),
                CASE WHEN t.result='POSITIVE' THEN '260373001' WHEN t.result='NEGATIVE' THEN '260415000' WHEN t.result='UNDETERMINED' THEN '455371000124106' END,
                t.result
              FROM ${database.defaultSchemaName}.test_order t
              LEFT JOIN ${database.defaultSchemaName}.result ON t.internal_id=${database.defaultSchemaName}.result.test_order_id 
              WHERE ${database.defaultSchemaName}.result.test_order_id IS NULL AND t.result IS NOT NULL;
      rollback:
        sql: SELECT 'foo';
  - changeSet:
      id: backfill-results-table-with-removals-and-corrections
      author: emma@skylight.digital
      comment: backfill the new results table with TestEvents that have been removed or corrected
      changes:
        - tagDatabase:
            tag: backfill-results-table-with-removals-and-corrections
        - sql:
            sql: |
              INSERT INTO ${database.defaultSchemaName}.result
              SELECT
                gen_random_uuid(),
                t.created_at,
                t.created_by,
                t.updated_at,
                t.updated_by,
                FALSE,
                t.internal_id,
                t.test_order_id,
                (SELECT d.internal_id from ${database.defaultSchemaName}.supported_disease d WHERE d.name='COVID-19'),
                CASE WHEN t.result='POSITIVE' THEN '260373001' WHEN t.result='NEGATIVE' THEN '260415000' WHEN t.result='UNDETERMINED' THEN '455371000124106' END,
                t.result
              FROM ${database.defaultSchemaName}.test_event t
              LEFT JOIN ${database.defaultSchemaName}.result ON t.internal_id=${database.defaultSchemaName}.result.test_event_id 
              WHERE ${database.defaultSchemaName}.result.test_event_id IS NULL AND t.result IS NOT NULL;
      rollback:
        sql: SELECT 'foo';
  - changeSet:
      id: create-feature-flag-table
      author: johanna@skylight.digital
      comment: creates the feature flag table which will host flags that control visibility of features at the application level
      changes:
        - tagDatabase:
            tag: create-feature-flag-table
        - createTable:
            tableName: feature_flag
            remarks: feature flags to control visibility of features at the application level.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: text
                  remarks: The name of the flag. It should describe the feature it represents.
                  constraints:
                    nullable: false
              - column:
                  name: value
                  type: boolean
                  remarks: The value of the flag. It indicates if the feature is enable or disable for the app.
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.feature_flag TO ${noPhiUsername};
      rollback:
        dropTable:
          tableName: feature_flag
  - changeSet:
      id: insert-multiplex-flag
      author: johanna@skylight.digital
      comment: inserts multiplex flag in table
      validCheckSum: 8:bbd2169d631bd3ba169a396908b8ad27
      changes:
        - tagDatabase:
            tag: insert-multiplex-flag
        - sql:
            remarks: Insert multiplexEnabled flag with value equal true.
            sql: |
              WITH migration_user as (
                 SELECT internal_id as migration_user_id
                 FROM ${database.defaultSchemaName}.api_user
                 WHERE login_email = '${migrations_user_email}'
               )
              INSERT INTO ${database.defaultSchemaName}.feature_flag (internal_id, name, value,
              created_at, created_by, updated_at, updated_by)
              SELECT
                gen_random_uuid(),
                'multiplexEnabled',
                true,
                now(),
                migration_user_id,
                now(),
                migration_user_id
              FROM migration_user
      rollback:
        - delete:
            tableName: feature_flag
            where: name='multiplexEnabled'
  - changeSet:
      id: add-index-patient_link-created_at
      author: zedd@skylight.digital
      changes:
        - tagDatabase:
            tag: add-index-patient_link-created_at
        - createIndex:
            tableName: patient_link
            indexName: ix__patient_link__created_at
            columns:
              - column:
                  name: created_at
                  descending: true
      rollback:
        - dropIndex:
            indexName: ix__patient_link__created_at
  - changeSet:
      id: drop-facility_device_specimen_type-table
      author: zedd@skylight.digital
      changes:
        - tagDatabase:
            tag: drop-facility_device_specimen_type-table
        - dropTable:
            tableName: facility_device_specimen_type
      rollback:
        - createTable:
            tableName: facility_device_specimen_type
            remarks: Many-to-many table for device/specimen configuration at a facility.
            columns:
              - column:
                  name: facility_id
                  remarks: A facility at which this device/specimen combination is used.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility_device_specimen_type__facility
                    references: facility
              - column:
                  name: device_specimen_type_id
                  remarks: A device/specimen combination that is allowed to be used at the facility.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility_device_specimen_type__device_specimen_type
                    references: device_specimen_type
  - changeSet:
      id: drop-not-null-constraints_device_specimen_type_id
      author: zedd@skylight.digital
      changes:
        - tagDatabase:
            tag: drop-not-null-constraints_device_specimen_type_id
        - dropNotNullConstraint:
            tableName: test_event
            columnName: device_specimen_type_id
        - dropNotNullConstraint:
            tableName: test_order
            columnName: device_specimen_type_id
      rollback:
        - addNotNullConstraint:
            tableName: test_event
            columnName: device_specimen_type_id
        - addNotNullConstraint:
            tableName: test_order
            columnName: device_specimen_type_id
  - changeSet:
      id: drop-primary-key-device_specimen_type
      author: zedd@skylight.digital
      changes:
        - tagDatabase:
            tag: drop-primary-key-device_specimen_type
        - dropPrimaryKey:
            tableName: device_specimen_type
            constraintName: device_specimen_type_pkey
            dropIndex: true
      rollback:
        - addPrimaryKey:
            tableName: device_specimen_type
            constraintName: device_specimen_type_pkey
            columnNames: internal_id
  - changeSet:
      id: drop-not-null-constraints-device_specimen_type
      author: zedd@skylight.digital
      changes:
        - tagDatabase:
            tag: drop-not-null-constraints-device_specimen_type
        - dropNotNullConstraint:
            tableName: device_specimen_type
            columnName: internal_id
        - dropNotNullConstraint:
            tableName: device_specimen_type
            columnName: created_at
        - dropNotNullConstraint:
            tableName: device_specimen_type
            columnName: created_by
        - dropNotNullConstraint:
            tableName: device_specimen_type
            columnName: updated_at
        - dropNotNullConstraint:
            tableName: device_specimen_type
            columnName: updated_by
        - dropNotNullConstraint:
            tableName: device_specimen_type
            columnName: is_deleted
      rollback:
        - addNotNullConstraint:
            tableName: device_specimen_type
            columnName: internal_id
        - addNotNullConstraint:
            tableName: device_specimen_type
            columnName: created_at
        - addNotNullConstraint:
            tableName: device_specimen_type
            columnName: created_by
        - addNotNullConstraint:
            tableName: device_specimen_type
            columnName: updated_at
        - addNotNullConstraint:
            tableName: device_specimen_type
            columnName: updated_by
        - addNotNullConstraint:
            tableName: device_specimen_type
            columnName: is_deleted
  - changeSet:
      id: add-test-performed-code-column-to-device-supported-disease-table
      author: boban@skylight.digital
      comment: Add a test performed code column to store the specific LOINC code between a device and disease.
      changes:
        - tagDatabase:
            tag: add-test-performed-code-column-to-device-supported-disease-table
        - addColumn:
            tableName: device_supported_disease
            columns:
              - column:
                  name: test_performed_code
                  type: text
                  remarks: The code that identifies which disease was tested.
  - changeSet:
      id: create-shedlock-table
      author: merethe@skylight.digital
      comment: creates a table to be used by shedlock library
      changes:
        - tagDatabase:
            tag: create-shedlock-table
        - createTable:
            tableName: shedlock
            remarks: stores information about scheduler locks
            columns:
              - column:
                  name: name
                  type: text
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: lock_until
                  type: DATETIME
                  constraints:
                    nullable: false
              - column:
                  name: locked_at
                  type: DATETIME
                  constraints:
                    nullable: false
              - column:
                  name: locked_by
                  type: text
                  constraints:
                    nullable: false
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.shedlock TO ${noPhiUsername};
      rollback:
        dropTable:
          tableName: shedlock
  - changeSet:
      id: update-test_event_no_phi_view
      author: zedd@skylight.digital
      changes:
        - tagDatabase:
            tag: update-test_event_no_phi_view
        - dropView:
            viewName: test_event_no_phi_view
        - createView:
            viewName: test_event_no_phi_view
            remarks: A subset of the test_event table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, created_by, updated_at, updated_by, patient_id, organization_id, result, facility_id, specimen_type_id, device_type_id, survey_data, date_tested_backdate, test_order_id, correction_status, prior_corrected_test_event_id, reason_for_correction FROM ${database.defaultSchemaName}.test_event
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.test_event_no_phi_view TO ${noPhiUsername};
      rollback:
        - dropView:
            viewName: test_event_no_phi_view
        - createView:
            viewName: test_event_no_phi_view
            remarks: A subset of the test_event table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT device_specimen_type_id, created_at, created_by, updated_at, updated_by, patient_id, organization_id, result, facility_id, survey_data, date_tested_backdate, test_order_id, correction_status, prior_corrected_test_event_id, internal_id, reason_for_correction FROM ${database.defaultSchemaName}.test_event
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.test_event_no_phi_view TO ${noPhiUsername};
  - changeSet:
      id: remove-test-performed-code-column-in-device-supported-disease-table
      author: boban@skylight.digital
      comment: Remove test performed code column to store the specific LOINC code between a device and disease.
      changes:
        - tagDatabase:
            tag: remove-test-performed-code-column-to-device-supported-disease-table
        - dropColumn:
            tableName: device_supported_disease
            columnName: test_performed_code
      rollback:
        - addColumn:
            tableName: device_supported_disease
            columns:
              - column:
                  name: test_performed_code
                  type: text
  - changeSet:
      id: add-equipment_uid-testkit_name_id-to-device_type
      author: zedd@skylight.digital
      comment: Add equipment_uid and testkit_name_id columns to device_type table
      changes:
        - tagDatabase:
            tag: add-equipment_uid-testkit_name_id-to-device_type
        - addColumn:
            tableName: device_type
            columns:
              - column:
                  name: equipment_uid
                  type: text
                  remarks: represents the data from "Equipment UID" column in the LIVD
              - column:
                  name: testkit_name_id
                  type: text
                  remarks: represents the data from "Testkit Name ID" column in the LIVD
  - changeSet:
      id: create-test-performed-table
      author: boban@skylight.digital
      comment: creates a table to store the test performed code between device type and supported disease
      changes:
        - tagDatabase:
            tag: create-test-performed-table
        - createTable:
            tableName: device_test_performed_loinc_code
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: device_type_id
                  remarks: The reference to the device type.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__device_type
                    references: device_type
              - column:
                  name: supported_disease_id
                  remarks: The reference to the supported disease.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__supported_disease_type
                    references: supported_disease
              - column:
                  name: test_performed_loinc_code
                  remarks: The code that identifies which disease was tested.
                  type: text
                  constraints:
                    nullable: false
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.device_test_performed_loinc_code TO ${noPhiUsername};
      rollback:
        - dropTable:
            tableName: device_test_performed_loinc_code
  - changeSet:
      id: drop-data_hub_upload-table
      author: merethe@skylight.digital
      comment: remove unused table formerly used for tracking uploads to ReportStream via deprecated implementation
      changes:
        - tagDatabase:
            tag: drop-data_hub_upload-table
        - dropTable:
            tableName: data_hub_upload
        - sql:
            sql: |
              DROP TYPE ${database.defaultSchemaName}.DATA_HUB_UPLOAD_STATUS;
      rollback:
        - sql:
            remarks: Create the enumerations needed for DataHubUpload.
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.DATA_HUB_UPLOAD_STATUS as ENUM('IN_PROGRESS', 'SUCCESS', 'FAIL');
        - createTable:
            tableName: data_hub_upload
            remarks: Track uploads and results of test_events to the data-hub.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: job_status
                  type: ${database.defaultSchemaName}.DATA_HUB_UPLOAD_STATUS
                  remarks: State of this upload. Enumerated value.
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: records_processed
                  type: int
                  remarks: Number of rows sent to the server.
              - column:
                  name: error_message
                  type: text
                  remarks: Set if an exception happens.
              - column:
                  name: response_data
                  type: jsonb
                  remarks: Response json from data-hub.
              - column:
                  name: earliest_recorded_timestamp
                  type: DATETIME
                  remarks: Lowerbound timestamp used to collect test_events. Entities with created_by > this value are sent.
              - column:
                  name: latest_recorded_timestamp
                  type: DATETIME
                  remarks: Upperbounds timestamp used to collect test_event. Entities with created_by <= this value are sent.
        - createIndex:
            indexName: uk__data_hub_upload__job_status__latest_recorded_timestamp
            tableName: data_hub_upload
            clustered: true
            columns:
              - column:
                  name: job_status
              - column:
                  name: latest_recorded_timestamp
                  descending: true
  - changeSet:
      id: add-queuename-column-report-stream-response
      author: tsv7@cdc.gov
      comment: Add column queue name to report stream response table to differentiate the origin of the exception
      changes:
        - tagDatabase:
            tag: add-queuename-column-report-stream-response
        - addColumn:
            tableName: report_stream_response
            columns:
              - column:
                  name: queue_name
                  type: text
                  remarks: Tracks the individual's preference for receiving test results
      rollback:
        - dropColumn:
            tableName: report_stream_response
            columns:
              - column:
                  name: queue_name
  - changeSet:
      id: add-equipment_uid-testkit_name_id-to-device_test_performed_loinc_code
      author: zedd@skylight.digital
      comment: Add equipment_uid and testkit_name_id columns to device_test_performed_loinc_code table
      changes:
        - tagDatabase:
            tag: add-equipment_uid-testkit_name_id-to-device_test_performed_loinc_code
        - addColumn:
            tableName: device_test_performed_loinc_code
            columns:
              - column:
                  name: equipment_uid
                  type: text
                  remarks: represents the data from "Equipment UID" column in the LIVD
              - column:
                  name: testkit_name_id
                  type: text
                  remarks: represents the data from "Testkit Name ID" column in the LIVD
  - changeSet:
      id: remove-equipment_uid-testkit_name_id-from-device_type
      author: zedd@skylight.digital
      comment: remove equipment_uid and testkit_name_id columns from device_type table
      changes:
        - tagDatabase:
            tag: remove-equipment_uid-testkit_name_id-from-device_type
        - dropColumn:
            tableName: device_type
            columns:
              - column:
                  name: equipment_uid
              - column:
                  name: testkit_name_id
      rollback:
        - addColumn:
            tableName: device_type
            columns:
              - column:
                  name: equipment_uid
                  type: text
                  remarks: represents the data from "Equipment UID" column in the LIVD
              - column:
                  name: testkit_name_id
                  type: text
                  remarks: represents the data from "Testkit Name ID" column in the LIVD
  - changeSet:
      id: create-device-disease-table
      author: boban@skylight.digital
      comment: creates a new table to store the relationship between device and disease
      changes:
        - tagDatabase:
            tag: create-device_type_disease-table
        - createTable:
            tableName: device_type_disease
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: device_type_id
                  remarks: The reference to the device type.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__device_type
                    references: device_type
              - column:
                  name: supported_disease_id
                  remarks: The reference to the supported disease.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__supported_disease_type
                    references: supported_disease
              - column:
                  name: test_performed_loinc_code
                  remarks: The code that identifies which disease was tested.
                  type: text
                  constraints:
                    nullable: false
              - column:
                  name: equipment_uid
                  remarks: represents the data from "Equipment UID" column in the LIVD
                  type: text
              - column:
                  name: testkit_name_id
                  remarks: represents the data from "Testkit Name ID" column in the LIVD
                  type: text
              - column:
                  name: test_ordered_loinc_code
                  remarks: The code that identifies which disease was tested.
                  type: text
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.device_type_disease TO ${noPhiUsername};
        - sql:
            sql: INSERT INTO ${database.defaultSchemaName}.device_type_disease SELECT * FROM ${database.defaultSchemaName}.device_test_performed_loinc_code
      rollback:
        - dropTable:
            tableName: device_type_disease
  - changeSet:
      id: drop-not-null-constraint-loinc_code
      author: tsv7@cdc.gov
      comment: Drop the not null constraint for loinc_code in device_type
      changes:
        - tagDatabase:
            tag: drop-not-null-constraint-loinc_code
        - dropNotNullConstraint:
            columnName: loinc_code
            tableName: device_type
  - changeSet:
      id: drop-device_test_performed_loinc_code-table
      author: uem4@cdc.gov
      comment: Drop duplicate table device test performed loinc code table
      changes:
        - dropTable:
            tableName: device_test_performed_loinc_code
      rollback:
        - createTable:
            tableName: device_test_performed_loinc_code
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: device_type_id
                  remarks: The reference to the device type.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__device_type
                    references: device_type
              - column:
                  name: supported_disease_id
                  remarks: The reference to the supported disease.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__supported_disease_type
                    references: supported_disease
              - column:
                  name: test_performed_loinc_code
                  remarks: The code that identifies which disease was tested.
                  type: text
                  constraints:
                    nullable: false
              - column:
                  name: equipment_uid
                  remarks: represents the data from "Equipment UID" column in the LIVD
                  type: text
              - column:
                  name: testkit_name_id
                  remarks: represents the data from "Testkit Name ID" column in the LIVD
                  type: text
  - changeSet:
      id: drop-columns-loinc_code-swab_type
      author: tsv7@cdc.gov
      comment: Drop the columns loincCode and swabType in device_type table
      changes:
        - tagDatabase:
            tag: drop-columns-loinc_code-swab_type
        - dropColumn:
            tableName: device_type
            columns:
              - column:
                  name: loinc_code
              - column:
                  name: swab_type
      rollback:
        - addColumn:
            tableName: device_type
            columns:
              - column:
                  name: loinc_code
                  type: text
                  remarks: The LOINC code for this device, for reporting purposes (sadly, not unique)
              - column:
                  name: swab_type
                  type: text
                  remarks: The swab type used for this device
  - changeSet:
      id: drop-device_supported_disease-join-table
      author: ttu8@cdc.gov
      comment: Drop the device_supported_disease join table
      changes:
        - tagDatabase:
            tag: drop-device_supported_disease-join-table
        - dropTable:
            tableName: device_supported_disease
      rollback:
        - createTable:
            tableName: device_supported_disease
            remarks: A usable combination of device type and supported diseases for that device.
            columns:
              - column:
                  name: device_type_id
                  remarks: The device type for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__device_type
                    references: device_type
              - column:
                  name: supported_disease_id
                  remarks: The supported disease for this combination.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__device_supported_disease__supported_disease_type
                    references: supported_disease
              - addUniqueConstraint:
                  tableName: device_supported_disease
                  constraintName: uk__device_supported_disease
                  columnNames: device_type_id, supported_disease_id
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.device_supported_disease TO ${noPhiUsername};
  - changeSet:
      id: drop-test_order_id-not_null_constraint-from-result
      author: zedd@skylight.digital
      changes:
        - tagDatabase:
            tag: drop-test_order_id-not_null_constraint-from-result
        - dropNotNullConstraint:
            tableName: result
            columnName: test_order_id
  - changeSet:
      id: create-result-upload-error-table
      author: nathan@skylight.digital
      comment: Add a table that holds validation errors for bulk test result uploads
      changes:
        - tagDatabase:
            tag: create-result-upload-error-table
        - sql:
            remarks: Create the enumerations for upload error types
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.TEST_RESULT_UPLOAD_ERROR as ENUM('HEADER_ERROR', 'INVALID_DATA', 'MISSING_DATA', 'INCORRECT_STRUCTURE');
        - sql:
            remarks: Create the enumerations for upload error sources
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.RESULT_UPLOAD_ERROR_SOURCE as ENUM('SIMPLE_REPORT', 'REPORT_STREAM');
        - createTable:
            tableName: result_upload_error
            remarks: A collection of errors for bulk upload submission attempts.
            columns:
              - column:
                  name: upload_id
                  type: uuid
                  remarks: The internal ID for the upload associated with this error
              - column:
                  name: org_id
                  type: uuid
                  remarks: The internal ID for the organization which submitted the upload
              - column:
                  name: submission_id
                  type: uuid
                  remarks: Identifier shared by an individual error and its overall submission
              - column:
                  name: type
                  type: ${database.defaultSchemaName}.test_result_upload_error
                  remarks: Enumerated value representing the general category of error
              - column:
                  name: field
                  type: text
                  remarks: CSV header for the field where error occurred
              - column:
                  name: required
                  type: boolean
                  remarks: Boolean value indicating whether the field is required
              - column:
                  name: source
                  type: ${database.defaultSchemaName}.result_upload_error_source
                  remarks: The system (SimpleReport or ReportStream) that returned the error
              - column:
                  name: message
                  type: text
                  remarks: Full text of error message
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__result_upload_error__created_by
                    references: api_user
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__result_upload_error__updated_by
        - addColumn:
            tableName: upload
            columns:
              - column:
                  name: submission_id
                  type: uuid
      rollback:
          - dropTable:
              tableName: result_upload_error
          - dropColumn:
              tableName: upload
              columnName: submission_id
          - sql:
              sql: |
                DROP TYPE ${database.defaultSchemaName}.TEST_RESULT_UPLOAD_ERROR;
  - changeSet:
      id: result_upload_error-add-no-phi-user
      author: nathan@skylight.digital
      comment: Adds permission for the no-PHI user to select from the bulk test result upload errors
      changes:
        - tagDatabase:
            tag: results_upload_error-add-no-phi-user
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.result_upload_error TO ${noPhiUsername};
      rollback:
            sql: REVOKE SELECT ON ${database.defaultSchemaName}.result_upload_error FROM ${noPhiUsername};
  - changeSet:
      id: remove-upload-report-id-not-null-constraint
      author: dsass@skylight.digital
      comment: set report Id to be nullable
      changes:
        - tagDatabase:
            tag: Removes not null constraint on upload.report_id
        - dropNotNullConstraint:
            tableName: upload
            columnName: report_id
      rollback:
        - addNotNullConstraint:
            tableName: upload
            columnName: report_id
  - changeSet:
      id: remove-unused_columns-from-device_specimen_type
      author: zedd@skylight.digital
      comment: remove unused columns from device_specimen_type
      changes:
        - tagDatabase:
            tag: remove-unused_columns-from-device_specimen_type
        - dropColumn:
            tableName: device_specimen_type
            columns:
              - column:
                  name: internal_id
              - column:
                  name: created_at
              - column:
                  name: created_by
              - column:
                  name: updated_at
              - column:
                  name: updated_by
              - column:
                  name: is_deleted
      rollback:
        - addColumn:
            tableName: device_specimen_type
            columns:
              - column:
                  name: internal_id
                  type: uuid
              - column:
                  name: created_at
                  type: DATETIME
              - column:
                  name: created_by
                  type: uuid
              - column:
                  name: updated_at
                  type: DATETIME
              - column:
                  name: updated_by
                  type: uuid
              - column:
                  name: is_deleted
                  type: boolean
  - changeSet:
      id: remove-device_specimen_type_id-from-test_order-and-test_event
      author: zedd@skylight.digital
      comment: remove device_specimen_type_id columns from test_order and test_event
      changes:
        - tagDatabase:
            tag: remove-device_specimen_type_id-from-test_order-and-test_event
        - dropColumn:
            tableName: test_order
            columns:
              - column:
                  name: device_specimen_type_id
        - dropColumn:
            tableName: test_event
            columns:
              - column:
                  name: device_specimen_type_id
      rollback:
        - addColumn:
            tableName: test_order
            columns:
              - column:
                  name: device_specimen_type_id
                  type: uuid
        - addColumn:
            tableName: test_event
            columns:
              - column:
                  name: device_specimen_type_id
                  type: uuid
  - changeSet:
      id: remove-default_device_specimen_type_id-from-facility
      author: zedd@skylight.digital
      comment: remove default_device_specimen_type_id columns from facility
      changes:
        - tagDatabase:
            tag: remove-default_device_specimen_type_id-from-facility
        - dropColumn:
            tableName: facility
            columns:
              - column:
                  name: default_device_specimen_type_id
      rollback:
        - addColumn:
            tableName: facility
            columns:
              - column:
                  name: default_device_specimen_type_id
                  type: uuid
  - changeSet:
      id: remove-result-from-test_event_no_phi_view
      author: zedd@skylight.digital
      changes:
        - tagDatabase:
            tag: remove-result-from-test_event_no_phi_view
        - dropView:
            viewName: test_event_no_phi_view
        - createView:
            viewName: test_event_no_phi_view
            remarks: A subset of the test_event table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT internal_id, created_at, created_by, updated_at, updated_by, patient_id, organization_id, facility_id, specimen_type_id, device_type_id, survey_data, date_tested_backdate, test_order_id, correction_status, prior_corrected_test_event_id, reason_for_correction FROM ${database.defaultSchemaName}.test_event
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.test_event_no_phi_view TO ${noPhiUsername};
      rollback:
        - dropView:
            viewName: test_event_no_phi_view
        - createView:
            viewName: test_event_no_phi_view
            remarks: A subset of the test_event table with columns containing PHI removed.
            replaceIfExists: true
            fullDefinition: false
            selectQuery: SELECT created_at, created_by, updated_at, updated_by, patient_id, organization_id, result, facility_id, survey_data, date_tested_backdate, test_order_id, correction_status, prior_corrected_test_event_id, internal_id, reason_for_correction FROM ${database.defaultSchemaName}.test_event
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.test_event_no_phi_view TO ${noPhiUsername};
  - changeSet:
      id: remove-result-from-test_order-and-test_event
      author: zedd@skylight.digital
      comment: remove result columns from test_order and test_event
      changes:
        - tagDatabase:
            tag: remove-result-from-test_order-and-test_event
        - dropColumn:
            tableName: test_order
            columns:
              - column:
                  name: result
        - dropColumn:
            tableName: test_event
            columns:
              - column:
                  name: result
      rollback:
        - addColumn:
            tableName: test_order
            columns:
              - column:
                  name: result
                  type: ${database.defaultSchemaName}.TEST_RESULT
        - addColumn:
            tableName: test_event
            columns:
              - column:
                  name: result
                  type: ${database.defaultSchemaName}.TEST_RESULT
  - changeSet:
      id: add-missing-header-to-test_result_upload_error
      author: boban@skylight.digital
      comment: add MISSING_HEADER to test_result_upload_error
      changes:
        - sql:
            sql: |
              ALTER TYPE ${database.defaultSchemaName}.TEST_RESULT_UPLOAD_ERROR ADD VALUE 'MISSING_HEADER';
      rollback: ""
  - changeSet:
      id: add-gender_identity-to-person-table
      author: zedd@skylight.digital
      comment: Add gender_identity and person table
      changes:
        - tagDatabase:
            tag: add-gender_identity-to-person-table
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: gender_identity
                  type: text
                  remarks: represents the persons gender identity
  - changeSet:
      id: add-rsv-to-supported-disease-table
      author: bob@skylight.digital
      comment: Add RSV to the supported_disease table.
      changes:
        - tagDatabase:
            tag: add-rsv-to-supported-disease-table
        - sql:
            comment: Add RSV to the supported disease table
            sql: |
              INSERT INTO ${database.defaultSchemaName}.supported_disease (
                   internal_id,
                   name,
                   loinc)
              VALUES
                   (gen_random_uuid(), 'RSV', 'LP14244-5')
      rollback:
        - sql:
            sql: DELETE FROM ${database.defaultSchemaName}.supported_disease WHERE name = 'RSV';
  - changeSet:
      id: add-notes-to-person-table
      author: zedd@skylight.digital
      comment: Add notes and person table
      changes:
        - tagDatabase:
            tag: add-notes-to-person-table
        - addColumn:
            tableName: person
            columns:
              - column:
                  name: notes
                  type: text
  - changeSet:
      id: remove-multiplex-flag
      author: boban@skylight.digital
      comment: remove multiplex flag in table
      changes:
        - tagDatabase:
            tag: remove-multiplex-flag
        - delete:
            schemaName: ${database.defaultSchemaName}
            tableName: feature_flag
            where: name='multiplexEnabled'
      rollback: ""
  - changeSet:
      id: add-hiv-to-supported_disease-table
      author: zedd@skylight.digital
      comment: Add HIV to the supported_disease table.
      changes:
        - tagDatabase:
            tag: add-hiv-to-supported_disease-table
        - sql:
            sql: |
              INSERT INTO ${database.defaultSchemaName}.supported_disease (
                   internal_id,
                   name,
                   loinc)
              VALUES
                   (gen_random_uuid(), 'HIV', 'LP17126-1')
      rollback:
        - sql:
            sql: DELETE FROM ${database.defaultSchemaName}.supported_disease WHERE name = 'HIV';
  - changeSet:
      id: add-equipment-uid-type-to-device-type-disease
      author: bob@skylight.digital
      comment: Add column to Device Type Disease for equipment UID type to be populated by the LIVD sync
      changes:
        - addColumn:
            tableName: device_type_disease
            columns:
              - column:
                  name: equipment_uid_type
                  type: text
                  remarks: Equipment UID from LIVD sync to be used in the universal pipeline
  - changeSet:
      id: add-disease_and_destination-columns-to-upload
      author: tsv7@cdc.gov
      comment: Add disease and destination(COVID|UNIVERSAL) columns to upload table
      changes:
        - tagDatabase:
            tag: add-disease_and_destination-columns-to-upload
        - sql:
            remarks: Create the enumerations needed for pipeline types.
            sql: |
              CREATE TYPE ${database.defaultSchemaName}.PIPELINE as ENUM('COVID', 'UNIVERSAL');
        - addColumn:
            tableName: upload
            columns:
              - column:
                  name: destination
                  type: ${database.defaultSchemaName}.PIPELINE
                  remarks: the pipeline where the results were sent to
              - column:
                  name: supported_disease_id
                  remarks: The disease that was reported.
                  type: uuid
                  constraints:
                    nullable: true
                    foreignKeyName: fk__upload__supported_disease_id
                    referencedTableName: supported_disease
                    referencedColumnNames: internal_id
      rollback:
        dropColumn:
          tableName: upload
          columnName: supported_disease_id
        sql: |
          DROP TYPE ${database.defaultSchemaName}.PIPELINE CASCADE;
  - changeSet:
      id: create-upload_disease_details-table
      author: tsv7@cdc.gov
      comment: creates upload_disease_details table and drops the disease_id column from upload table
      changes:
        - tagDatabase:
            tag: create-upload_disease_details-table
        - dropColumn:
            tableName: upload
            columnName: supported_disease_id
        - createTable:
            tableName: upload_disease_details
            remarks: contains details of each of the diseases reported in the bulk upload.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: upload_id
                  remarks: the upload internal id.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__upload_disease_details__upload
                    references: upload
              - column:
                  name: supported_disease_id
                  remarks: The supported disease reported in the upload.
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__upload_disease_details__supported_disease
                    references: supported_disease
              - column:
                  name: records_count
                  remarks: The number of records uploaded for the disease.
                  type: int
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.upload_disease_details TO ${noPhiUsername};
      rollback:
        - addColumn:
            tableName: upload
            columns:
              - column:
                  name: supported_disease_id
                  remarks: The disease that was reported.
                  type: uuid
                  constraints:
                    nullable: true
                    foreignKeyName: fk__upload__supported_disease_id
                    referencedTableName: supported_disease
                    referencedColumnNames: internal_id
        - dropTable:
            tableName: upload_disease_details
  - changeSet:
      id: add-loinc-long-names-to-device-type-disease
      author: ttu8@cdc.gov
      comment: Add the LOINC long names for the test performed and test ordered LOINC codes to Device Type Disease
      changes:
        - addColumn:
            tableName: device_type_disease
            columns:
              - column:
                  name: test_performed_loinc_long_name
                  type: text
                  remarks: testPerformedLoincLongName from LIVD API
              - column:
                  name: test_ordered_loinc_long_name
                  type: text
                  remarks: testOrderedLoincLongName from LIVD API
  - changeSet:
      id: add-unavailable-disease-to-test_result_upload_error
      author: bob@skylight.digital
      comment: add UNAVAILABLE_DISEASE to test_result_upload_error
      changes:
        - tagDatabase:
            tag: add-unavailable-disease-to-test_result_upload_error
        - sql:
            sql: |
              ALTER TYPE ${database.defaultSchemaName}.TEST_RESULT_UPLOAD_ERROR ADD VALUE 'UNAVAILABLE_DISEASE';
      rollback: ""
  - changeSet:
      id: remove-unused-feature-flags
      author: ttu8@cdc.gov
      comment: remove rsvEnabled, testCardRefactorEnabled, and singleEntryRsvEnabled
      changes:
        - tagDatabase:
            tag: remove-unused-feature-flags
        - delete:
            schemaName: ${database.defaultSchemaName}
            tableName: feature_flag
            where: name in ('rsvEnabled', 'testCardRefactorEnabled', 'singleEntryRsvEnabled')
      rollback: ""
  - changeSet:
      id: add-syphilis-to-supported_disease-table
      author: bobby@skylight.digital
      comment: Add Syphilis to the supported_disease table.
      changes:
        - tagDatabase:
            tag: add-syphilis-to-supported_disease-table
        - sql:
            sql: |
              INSERT INTO ${database.defaultSchemaName}.supported_disease (
                   internal_id,
                   name,
                   loinc)
              VALUES
                   (gen_random_uuid(), 'Syphilis', 'LL2467-0')
      rollback:
        - sql:
            sql: DELETE FROM ${database.defaultSchemaName}.supported_disease WHERE name = 'Syphilis';
  - changeSet:
      id: create-user-role-and-user-facility-tables
      author: ttu8@cdc.gov
      comment: creates role, api_user_role, and api_user_facility tables to begin migration of Okta role and groups
      changes:
        - tagDatabase:
            tag: create-user-role-and-user-facility
        - sql:
            remarks: Create the OrganizationRole enumerations needed for role
            sql: CREATE TYPE ${database.defaultSchemaName}.ORGANIZATION_ROLE as ENUM('ALL_FACILITIES', 'ENTRY_ONLY', 'USER', 'ADMIN');
        - createTable:
            tableName: role
            remarks: named references to a OrganizationRole enum
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: ${database.defaultSchemaName}.ORGANIZATION_ROLE
                  remarks: The name of the role that is an enumerated value.
                  constraints:
                    nullable: false
        - createTable:
            tableName: api_user_facility
            remarks: creates a new table to store the relationship between api_user and facility
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: api_user_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_facility__api_user
                    references: api_user
              - column:
                  name: facility_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_facility__facility
                    references: facility
        - createTable:
            tableName: api_user_role
            remarks: creates a new table to store the relationship between api_user and role
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: api_user_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_role__api_user
                    references: api_user
              - column:
                  name: organization_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_role__organization
                    references: organization
              - column:
                  name: role_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_role__role
                    references: role
      rollback:
        - sql:
            sql: |
              DROP TABLE ${database.defaultSchemaName}.API_USER_FACILITY;
              DROP TABLE ${database.defaultSchemaName}.API_USER_ROLE;
              DROP TABLE ${database.defaultSchemaName}.ROLE;
              DROP TYPE ${database.defaultSchemaName}.ORGANIZATION_ROLE;
  - changeSet:
      id: add-user-role-and-user-facility-to-metabase
      author: ttu8@cdc.gov
      comment: Adds permission for the no-PHI user to select from the role, api_user_role, and api_user_facility tables
      changes:
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.role TO ${noPhiUsername};
            GRANT SELECT ON ${database.defaultSchemaName}.api_user_facility TO ${noPhiUsername};
            GRANT SELECT ON ${database.defaultSchemaName}.api_user_role TO ${noPhiUsername};
      rollback:
        - sql: |
            REVOKE SELECT ON TABLE ${database.defaultSchemaName}.role FROM ${noPhiUsername};
            REVOKE SELECT ON TABLE ${database.defaultSchemaName}.api_user_facility FROM ${noPhiUsername};
            REVOKE SELECT ON TABLE ${database.defaultSchemaName}.api_user_role FROM ${noPhiUsername};
  - changeSet:
      id: add-flu-a-and-b-to-supported_disease-table
      author: tmz1@cdc.gov
      comment: Add Flu A and B to the supported_disease table.
      changes:
        - tagDatabase:
            tag: add-flu-a-and-b-to-supported_disease-table
        - sql:
            sql: |
              INSERT INTO ${database.defaultSchemaName}.supported_disease (
                   internal_id,
                   name,
                   loinc)
              VALUES
                   (gen_random_uuid(), 'Flu A and B', '44567-6')
      rollback:
        - sql:
            sql: DELETE FROM ${database.defaultSchemaName}.supported_disease WHERE name = 'Flu A and B';
  - changeSet:
      id: remove-internal_id-from-user-facility-table
      author: tnd8@cdc.gov
      comment: Remove internal_id column from join table
      changes:
        - dropColumn:
            tableName: api_user_facility
            columnName: internal_id
      rollback:
        - addColumn:
            tableName: api_user_facility
            column:
              name: internal_id
              type: uuid
              remarks: The internal database identifier for this entity.
              constraints:
                primaryKey: true
                nullable: false
  - changeSet:
      id: add-audit-cols-to-facility-table
      author: tnd8@cdc.gov
      changes:
        - dropTable:
            tableName: api_user_facility
        - createTable:
            tableName: api_user_facility
            remarks: creates a new table to store the relationship between api_user and facility
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                      primaryKey: true
                      nullable: false
              - column:
                  name: api_user_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_facility__api_user
                    references: api_user
              - column:
                  name: facility_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_facility__facility
                    references: facility
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__created_by
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.api_user_facility TO ${noPhiUsername};
      rollback:
        - dropTable:
            tableName: api_user_facility
        - createTable:
            tableName: api_user_facility
            remarks: creates a new table to store the relationship between api_user and facility
            columns:
              - column:
                  name: api_user_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_facility__api_user
                    references: api_user
              - column:
                  name: facility_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_facility__facility
                    references: facility
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.api_user_facility TO ${noPhiUsername};
  - changeSet:
      id: add-audit-cols-and-enum-role-to-api_user_role-table
      author: tnd8@cdc.gov
      changes:
        - dropTable:
            tableName: api_user_role
        - dropTable:
            tableName: role
        - createTable:
            tableName: api_user_role
            remarks: creates a new table to store the relationship between api_user and role
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: api_user_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_facility__api_user
                    references: api_user
              - column:
                  name: organization_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_role__organization
                    references: organization
              - column:
                  name: role
                  type: ${database.defaultSchemaName}.ORGANIZATION_ROLE
                  remarks: The name of the role that is an enumerated value.
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__created_by
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
        - sql:
            sql: GRANT SELECT ON ${database.defaultSchemaName}.api_user_role TO ${noPhiUsername};
      rollback:
        - dropTable:
            tableName: api_user_role
        - createTable:
            tableName: role
            remarks: named references to a OrganizationRole enum
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: ${database.defaultSchemaName}.ORGANIZATION_ROLE
                  remarks: The name of the role that is an enumerated value.
                  constraints:
                    nullable: false
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.role TO ${noPhiUsername};
        - createTable:
            tableName: api_user_role
            remarks: creates a new table to store the relationship between api_user and role
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: api_user_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_role__api_user
                    references: api_user
              - column:
                  name: organization_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_role__organization
                    references: organization
              - column:
                  name: role_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__api_user_role__role
                    references: role
        - sql: |
            GRANT SELECT ON ${database.defaultSchemaName}.api_user_role TO ${noPhiUsername};
  - changeSet:
      id: add-timer-started-at-to-test_order-table
      author: ggs2@cdc.gov
      changes:
        - addColumn:
            tableName: test_order
            columns:
            - column:
                  name: timer_started_at
                  type: text
                  constraints:
                    nullable: true
      rollback:
        - dropColumn:
            tableName: test_order
            columnName: timer_started_at
  - changeSet:
      id: add-hepatitis-c-to-supported_disease-table
      author: ggs2@cdc.gov
      comment: Add Hepatitis-C to the supported_disease table.
      changes:
        - tagDatabase:
            tag: add-hepatitis-c-to-supported_disease-table
        - sql:
            sql: |
              INSERT INTO ${database.defaultSchemaName}.supported_disease (
                   internal_id,
                   name,
                   loinc)
              VALUES
                   (gen_random_uuid(), 'Hepatitis-C', 'LP14400-3')
      rollback:
        - sql:
            sql: DELETE FROM ${database.defaultSchemaName}.supported_disease WHERE name = 'Hepatitis-C';
  - changeSet:
      id: update-hepatitis-c-naming-in-supported-disease-table
      author: ggs2@cdc.gov
      comment: Changes Hepatitis-C to Hepatitis C without a dash
      changes:
        - tagDatabase:
            tag: update-hepatitis-c-naming-in-supported-disease-table
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.supported_disease
              SET name = 'Hepatitis C'
              WHERE name = 'Hepatitis-C' AND loinc = 'LP14400-3'
      rollback:
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.supported_disease
              SET name = 'Hepatitis-C'
              WHERE name = 'Hepatitis C' AND loinc = 'LP14400-3'
  - changeSet:
        id: add-gonorrhea-to-supported_disease-table
        author: ggs2@cdc.gov
        comment: Add Gonorrhea to the supported_disease table.
        changes:
          - tagDatabase:
              tag: add-gonorrhea-to-supported_disease-table
          - sql:
              sql: |
                INSERT INTO ${database.defaultSchemaName}.supported_disease (
                     internal_id,
                     name,
                     loinc)
                VALUES
                     (gen_random_uuid(), 'Gonorrhea', 'LP14316-1')
        rollback:
          - sql:
              sql: DELETE FROM ${database.defaultSchemaName}.supported_disease WHERE name = 'Gonorrhea';
  - changeSet:
      id: add-chlamydia-to-supported_disease-table
      author: bobby@skyliight.digital
      comment: Add chlamydia to the supported_disease table.
      changes:
        - tagDatabase:
            tag: add-chlamydia-to-supported_disease-table
        - sql:
            sql: |
              INSERT INTO ${database.defaultSchemaName}.supported_disease (
                   internal_id,
                   name,
                   loinc)
              VALUES
                   (gen_random_uuid(), 'Chlamydia', 'LP14298-1')
      rollback:
        - sql:
            sql: DELETE FROM ${database.defaultSchemaName}.supported_disease WHERE name = 'Chlamydia';
  - changeSet:
      id: create-facility_providers-table
      author: bobby@skylight.digital
      changes:
        - tagDatabase:
            tag: add-facility-providers-table
        - createTable:
            tableName: facility_providers
            remarks: Join table for mapping multiple providers to a facility.
            columns:
              - column:
                  name: facility_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility_providers__facility
                    references: facility
              - column:
                  name: provider_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__facility_providers__provider
                    references: provider
  - changeSet:
      id: grant-facility_providers-access-to-metabase-user
      author: tnd8@cdc.gov
      changes:
        - sql:
            sql: |
              GRANT SELECT ON ${database.defaultSchemaName}.facility_providers TO ${noPhiUsername};
      rollback:
        - sql:
            sql: |
              REVOKE SELECT ON TABLE ${database.defaultSchemaName}.facility_providers FROM ${noPhiUsername};
  - changeSet:
      id: add-default-provider
      author: bobby@skylight.digital
      changes:
        - tagDatabase:
            tag: add-default-provider-col
        - addColumn:
            tableName: facility
            columns:
              - column:
                  name: default_ordering_provider_id
                  remarks: The default ordering provider for tests at this facility.
                  type: uuid
                  constraints:
                    foreignKeyName: fk__facility__default_ordering_provider
                    references: provider(internal_id)
  - changeSet:
      id: populate-facility-providers-table
      author: bobby@skylight.digital
      changes:
        - tagDatabase:
            tag: populate-facility-providers-table
        - sql:
            sql: |
              INSERT INTO ${database.defaultSchemaName}.facility_providers (
                facility_id,
                provider_id
              )
              SELECT
                internal_id,
                ordering_provider_id
              FROM ${database.defaultSchemaName}.facility;
      rollback:
        - sql:
            sql: |
              TRUNCATE TABLE ${database.defaultSchemaName}.facility_providers;
  - changeSet:
      id: populate-default-provider-column
      author: bobby@skylight.digital
      changes:
        - tagDatabase:
            tag: populate-default-provider-column
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.facility
              SET
                default_ordering_provider_id = facility.ordering_provider_id
              WHERE facility.default_ordering_provider_id is NULL;
      rollback:
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.facility
              SET
                default_ordering_provider_id = NULL
              WHERE facility.default_ordering_provider_id is NOT NULL;
  - changeSet:
      id: drop-ordering-provider-column
      author: tnd8@cdc.gov
      changes:
        - tagDatabase:
            tag: facility-supports-multiple-providers
        - dropColumn:
            columnName: ordering_provider_id
            tableName: facility
      rollback:
        - addColumn:
            tableName: facility
            columns:
              - column:
                  name: ordering_provider_id
                  type: uuid
                  remarks: The healthcare provider who orders tests at this facility.
                  constraints:
                    foreignKeyName: fk__facility__ordering_provider
                    referencedTableName: provider
        - sql:
            sql: |
              UPDATE ${database.defaultSchemaName}.facility
              SET ordering_provider_id = COALESCE(
                  default_ordering_provider_id, 
                  (
                    SELECT provider_id
                    FROM ${database.defaultSchemaName}.facility_providers
                    WHERE facility_providers.facility_id = facility.internal_id
                    LIMIT 1
                  )
                );
        - addNotNullConstraint:
            tableName: facility
            columnName: ordering_provider_id
  - changeSet:
      id: add-condition-table
      author: ggs2@cdc.gov
      changes:
        - tagDatabase:
              tag: add-condition-table
        - createTable:
            tableName: condition
            remarks: Any reportable public health condition.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: code
                  type: text
                  remarks: The SNOMED code that represents this reportable condition.
                  constraints:
                    unique: true
                    nullable: false
              - column:
                  name: display
                  type: text
                  remarks: The display name of this reportable condition.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: true
                    references: api_user
                    foreignKeyName: fk__anyentity__created_by
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: true
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column: &soft_delete_column
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
      rollback:
        - dropTable:
            tableName: condition
  - changeSet:
      id: add-loinc-staging-table
      author: ggs2@cdc.gov
      changes:
        - tagDatabase:
            tag: add-loinc-staging-table
        - createTable:
            tableName: loinc_staging
            remarks: Staging table for LOINC ETL process
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: condition_id
                  type: uuid
                  constraints:
                    nullable: false
                    foreignKeyName: fk__loinc_staging__condition_id
                    references: condition
              - column:
                  name: code
                  type: text
                  remarks: The LOINC code.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: display
                  type: text
                  remarks: The display name of the LOINC.
                  constraints:
                    unique: false
                    nullable: false
      rollback:
        - dropTable:
            tableName: loinc_staging
  - changeSet:
      id: add-lab-table
      author: tlx4@cdc.gov
      changes:
        - tagDatabase:
            tag: add-lab-table
        - createTable:
            tableName: lab
            remarks: Table to hold all labs for universal reporting
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: code
                  type: text
                  remarks: The LOINC code.
                  constraints:
                    unique: true
                    nullable: false
              - column:
                  name: display
                  type: text
                  remarks: The display name of the LOINC.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: description
                  type: text
                  remarks: The description of the LOINC.
                  constraints:
                    unique: false
                    nullable: true
              - column:
                  name: long_common_name
                  type: text
                  remarks: The long common name for the lab.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: scale_code
                  type: text
                  remarks: The scale code for the LOINC indicating the kind of result e.g. qualitative, quantiative, etc.
                  constraints:
                    unique: false
                    nullable: true
              - column:
                  name: scale_display
                  type: text
                  remarks: The display value for the LOINC's scale indicating the kind of result e.g. qualitative, quantiative, etc.
                  constraints:
                    unique: false
                    nullable: true
              - column:
                  name: system_code
                  type: text
                  remarks: The code for the LOINC's system indicating the specimen type.
                  constraints:
                    unique: false
                    nullable: true
              - column:
                  name: system_display
                  type: text
                  remarks: The display value for the LOINC's system indicating the specimen type.
                  constraints:
                    unique: false
                    nullable: true
              - column:
                  name: answer_list
                  type: text
                  remarks: The code value for the LOINC's answer list, when available.
                  constraints:
                    unique: false
                    nullable: true
              - column:
                  name: order_or_observation
                  type: text
                  remarks: Indicates if the LOINC is an order, observation, or both.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: panel
                  type: bool
                  remarks: Does the LOINC represent a panel?
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: true
                    references: api_user
                    foreignKeyName: fk__anyentity__created_by
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: true
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column: &soft_delete_column
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
      rollback:
        - dropTable:
            tableName: lab
  - changeSet:
      id: add-condition-lab-join-table
      author: tlx4@cdc.gov
      changes:
        - tagDatabase:
            tag: add-condition-lab-join-table
        - createTable:
            tableName: condition_lab_join
            remarks: Table to model the many to many relationship between conditions and labs.
            columns:
              - column:
                  name: condition_id
                  type: uuid
                  remarks: Internal Id of a condition in the condition table.
                  constraints:
                    unique: false
                    foreignKeyName: fk__lab__condition_id
                    references: condition
              - column:
                  name: lab_id
                  type: uuid
                  remarks: Internal Id of a lab in the lab tbale
                  constraints:
                    unique: false
                    foreignKeyName: fk__lab__lab_id
                    references: lab
      rollback:
        - dropTable:
            tableName: condition_lab_join
  - changeSet:
      id: add-has-labs-to-condition-table
      author: ggs2@cdc.gov
      changes:
        - tagDatabase:
            tag: add-has-labs-to-condition-table
        - addColumn:
            tableName: condition
            columns:
              - column:
                  name: has_labs
                  type: boolean
                  remarks: Flag for whether the condition has any labs associated with it instead of having to check the entire join table.
                  defaultValueBoolean: false
      rollback:
        - dropColumn:
            tableName: condition
            columnName: has_labs
  - changeSet:
      id: add-specimen-table
      author: tlx4@cdc.gov
      changes:
        - tagDatabase:
            tag: add-specimen-table
        - createTable:
            tableName: specimen
            remarks: Specific specimens identified by SNOMED code and mapped to LOINC system codes.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: loinc_system_code
                  type: text
                  remarks: LOINC system code
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: loinc_system_display
                  type: text
                  remarks: The display name of the LOINC system code.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: snomed_code
                  type: text
                  remarks: The SNOMED code for this specimen
                  constraints:
                    unique: true
                    nullable: false
              - column:
                  name: snomed_display
                  type: text
                  remarks: The SNOMED display for this specimen
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: true
                    references: api_user
                    foreignKeyName: fk__anyentity__created_by
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: true
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
              - column: &soft_delete_column
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
        - createIndex:
            tableName: specimen
            indexName: ix__specimen_loinc_system_code
            columns:
              - column:
                  name: loinc_system_code
        - createIndex:
            tableName: specimen
            indexName: ix__specimen_snomed_code
            columns:
              - column:
                  name: snomed_code
      rollback:
        - dropTable:
            tableName: specimen
  - changeSet:
      id: add-specimen-body-site-table
      author: ubz8@cdc.gov
      changes:
        - tagDatabase:
            tag: add-specimen-body-site-table
        - createTable:
            tableName: specimen_body_site
            remarks: Specific body sites or locations for specimens identified by SNOMED code and mapped to SNOMED specimen codes.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: snomed_specimen_code
                  type: text
                  remarks: SNOMED specimen code.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: snomed_specimen_display
                  type: text
                  remarks: The display name of the SNOMED specimen.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: snomed_site_code
                  type: text
                  remarks: The SNOMED code for this body site.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: snomed_site_display
                  type: text
                  remarks: The SNOMED display for this body site.
                  constraints:
                    unique: false
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: true
                    references: api_user
                    foreignKeyName: fk__anyentity__created_by
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: true
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
        - createIndex:
            tableName: specimen_body_site
            indexName: ix__body_site_snomed_specimen_code
            columns:
              - column:
                  name: snomed_specimen_code
        - createIndex:
            tableName: specimen_body_site
            indexName: ix__body_site_snomed_site_code
            columns:
              - column:
                  name: snomed_site_code
        - addUniqueConstraint:
            tableName: specimen_body_site
            columnNames: snomed_specimen_code, snomed_site_code
            constraintName: uk__snomed_spec_code__snomed_site_code
      rollback:
        - dropTable:
            tableName: specimen_body_site
  - changeSet:
      id: update-specimen-unique-constraint
      author: tlx4@cdc.gov
      changes:
        - tagDatabase:
            tag: update-specimen-unique-constraint
        - dropUniqueConstraint:
            tableName: specimen
            constraintName: specimen_snomed_code_key
        - addUniqueConstraint:
            tableName: specimen
            columnNames: loinc_system_code, snomed_code
            constraintName: uk__loinc_system_code__snomed_code
      rollback:
        - addUniqueConstraint:
            tableName: specimen
            columnNames: snomed_code
            constraintName: specimen_snomed_code_key
        - dropUniqueConstraint:
            tableName: specimen
            constraintName: uk__loinc_system_code__snomed_code
  - changeSet:
      id: add-facility-feature-flag
      author: az01@cdc.gov
      changes:
        - tagDatabase:
            tag: add-facility-feature-flag
        - createTable:
            tableName: facility_feature_flag
            remarks: Table to store facility-specific feature flags
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: facility_id
                  type: uuid
                  remarks: Internal Id of a facility in the facility table.
                  constraints:
                    unique: false
                    nullable: false
                    foreignKeyName: fk__facility__facility_id
                    references: facility
              - column:
                  name: name
                  type: text
                  remarks: The name of the flag. It should describe the feature it represents.
                  constraints:
                    nullable: false
              - column:
                  name: value
                  type: boolean
                  remarks: The value of the flag. It indicates if the feature is enable or disable for the app.
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
        - addUniqueConstraint:
            constraintName: uk__facility_id__name
            tableName: facility_feature_flag
            columnNames: facility_id, name
      rollback:
        - dropTable:
            tableName: facility_feature_flag
  - changeSet:
      id: add-facility-lab
      author: az01@cdc.gov
      changes:
        - tagDatabase:
            tag: add-facility-lab
        - createTable:
            tableName: facility_lab
            remarks: Table to store facility-specific descriptions and names for test orders
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: The internal database identifier for this entity.
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: facility_id
                  type: uuid
                  remarks: Internal Id of a facility in the facility table.
                  constraints:
                    unique: false
                    nullable: false
                    foreignKeyName: fk__facility__facility_id
                    references: facility
              - column:
                  name: lab_id
                  type: uuid
                  remarks: Internal Id of a lab in the lab table.
                  constraints:
                    unique: false
                    nullable: false
                    foreignKeyName: fk__lab__lab_id
                    references: lab
                    deleteCascade: true
              - column:
                  name: name
                  type: text
                  remarks: Facility-specific name for test order
                  constraints:
                    nullable: false
              - column:
                  name: description
                  type: text
                  remarks: Facility-specific description for test order
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: The creation timestamp for this entity.
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: The timestamp for the most recent update of this entity.
                  constraints:
                    nullable: false
              - column:
                  name: is_deleted
                  type: boolean
                  remarks: Flag for soft-deletion of entities (false unless the entity has been deleted).
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: The user who created this entity.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__anyentity__created_by
                    references: api_user
              - column:
                  name: updated_by
                  type: uuid
                  remarks: The user who most recently updated this entity.
                  constraints:
                    nullable: false
                    references: api_user
                    foreignKeyName: fk__anyentity__updated_by
        - addUniqueConstraint:
            constraintName: uk__facility_id__lab_id
            tableName: facility_lab
            columnNames: facility_id, lab_id
      rollback:
        - dropTable:
            tableName: facility_lab
  - changeSet:
      id: add-facility-lab-specimen
      author: az01@cdc.gov
      changes:
        - tagDatabase:
            tag: add-facility-lab-specimen
        - createTable:
            tableName: facility_lab_specimen
            remarks: Table to store facility-specific test order specimens
            columns:
              - column:
                  name: facility_lab_id
                  type: uuid
                  remarks: Internal Id of a test order in the facility_lab table.
                  constraints:
                    unique: false
                    nullable: false
                    foreignKeyName: fk__facility_lab__facility_lab_id
                    references: facility_lab
                    deleteCascade: true
              - column:
                  name: specimen_id
                  type: uuid
                  remarks: Internal Id of a specimen in the specimen table.
                  constraints:
                    unique: false
                    nullable: false
                    foreignKeyName: fk__specimen__specimen_id
                    references: specimen
                    deleteCascade: true
        - addUniqueConstraint:
            constraintName: uk__facility_lab_id__specimen_id
            tableName: facility_lab_specimen
            columnNames: facility_lab_id, specimen_id
      rollback:
        - dropTable:
            tableName: facility_lab_specimen
  - changeSet:
      id: add-index-person-org
      author: david@skylight.digital
      changes:
        - createIndex:
            tableName: person
            indexName: ix__person__organization_id
            columns:
              - column:
                  name: organization_id

  - changeSet:
      id: add-test-event-metadata-table
      author: ar72@cdc.gov
      changes:
        - tagDatabase:
            tag: add-test-event-metadata-table
        - createTable:
            tableName: test_event_metadata
            remarks: Metadata about test events for reporting and tracking purposes, including information about how and where test events were reported.
            columns:
              - column:
                  name: internal_id
                  type: uuid
                  remarks: id for this metadata record
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: created_at
                  type: DATETIME
                  remarks: timestamp of when this metadata was saved
                  constraints:
                    nullable: false
              - column:
                  name: created_by
                  type: uuid
                  remarks: API user who created this which should be the SR service account running the cron job
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event_metadata__created_by
                    references: api_user
              - column:
                  name: updated_at
                  type: DATETIME
                  remarks: this record should never actually be updated so this should match the created_at timestamp
                  constraints:
                    nullable: false
              - column:
                  name: updated_by
                  type: uuid
                  remarks: this record should never actually be updated so this should match the created_by API user
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event_metadata__updated_by
                    references: api_user
              - column:
                  name: test_event_id
                  type: uuid
                  remarks: id of the test event this metadata refers to
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event_metadata__test_event_id
                    references: test_event
              - column:
                  name: test_event_created_at
                  type: DATETIME
                  remarks: timestamp referring to when the test event was created
                  constraints:
                    nullable: false
              - column:
                  name: test_event_created_by
                  type: uuid
                  remarks: API user who created the test event
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event_metadata__test_event_created_by
                    references: api_user
              - column:
                  name: test_event_updated_at
                  type: DATETIME
                  remarks: timestamp referring to when the test event was last updated
                  constraints:
                    nullable: false
              - column:
                  name: test_event_updated_by
                  type: uuid
                  remarks: API user who last updated the test event
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event_metadata__test_event_updated_by
                    references: api_user
              - column:
                  name: organization_id
                  type: uuid
                  remarks: populated from test_event.organization_id
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event_metadata__organization_id
                    references: organization
              - column:
                  name: facility_id
                  type: uuid
                  remarks: populated from test_event.facility_id
                  constraints:
                    nullable: false
                    foreignKeyName: fk__test_event_metadata__facility_id
                    references: facility
              - column:
                  name: provider_id
                  type: text
                  remarks: populated from test_event.provider_data.provider_id
                  constraints:
                    nullable: true
              - column:
                  name: report_type
                  type: text
                  remarks: currently this will always be eLR
                  constraints:
                    nullable: false
              - column:
                  name: destination
                  type: text
                  remarks: currently this will be ReportStream, but may switch to HL7v2 depending on how soon we switch to AIMS
                  constraints:
                    nullable: false
              - column:
                  name: format
                  type: text
                  remarks: currently this will be FHIR, but may switch to HL7v2 depending on how soon we switch to AIMS
                  constraints:
                    nullable: false
              - column:
                  name: conditions
                  type: text[]
                  remarks: since multiplex test events are associated with multiple supported diseases, this stores the disease names as an array (e.g., ['COVID-19', 'Flu A', 'Flu B'])
                  constraints:
                    nullable: true
              - column:
                  name: test_ordered_code
                  type: text
                  remarks: populated by going from test_event.device_type_id to device_type_disease.test_order_code. alternatively, we could just keep track of the device_id here, but there's possible (unlikely) risk of device data changing, so it might not truly represent the same test_ordered_code as it existed during the test event
                  constraints:
                    nullable: true
              - column:
                  name: correction_status
                  type: text
                  remarks: populated from test_event.correction_status
                  constraints:
                    nullable: true
              - column:
                  name: original_test_order_id
                  type: uuid
                  remarks: populated from test_event.test_order_id, this allows test events from the same test order to still be associated with each other
                  constraints:
                    nullable: true
                    foreignKeyName: fk__test_event_metadata__original_test_order_id
                    references: test_order
        - addUniqueConstraint:
            tableName: test_event_metadata
            columnNames: test_event_id
            constraintName: uk__test_event_metadata__test_event_id
      rollback:
        - dropTable:
            tableName: test_event_metadata
  - changeSet:
      id: add-test-event-metadata-indexes
      author: ar72@cdc.gov
      changes:
        - tagDatabase:
            tag: add-test-event-metadata-indexes
        - createIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__test_event_id
            columns:
              - column:
                  name: test_event_id
        - createIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__organization_id
            columns:
              - column:
                  name: organization_id
        - createIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__facility_id
            columns:
              - column:
                  name: facility_id
        - createIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__created_at
            columns:
              - column:
                  name: created_at
        - createIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__conditions
            columns:
              - column:
                  name: conditions
                  type: GIN
      rollback:
        - dropIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__test_event_id
        - dropIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__organization_id
        - dropIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__facility_id
        - dropIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__created_at
        - dropIndex:
            tableName: test_event_metadata
            indexName: ix__test_event_metadata__conditions
