> Task :bootBuildInfo

> Task :compileJava
Note: Hibernate JPA 2 Static-Metamodel Generator 5.4.27.Final

> Task :generateGitProperties UP-TO-DATE
> Task :processResources UP-TO-DATE
> Task :classes
> Task :bootRunMainClassName

> Task :bootRun
{"time": "2022-06-14 15:48:19.107", "level": "INFO", "source": "g.c.u.s.SimpleReportApplication:55", "message": "Starting SimpleReportApplication using Java 11.0.11 on kraut.local with PID 14127 (/Users/nathancarter/repos/prime-simplereport/backend/build/classes/java/main started by nathancarter in /Users/nathancarter/repos/prime-simplereport/backend)"}
{"time": "2022-06-14 15:48:19.109", "level": "DEBUG", "source": "g.c.u.s.SimpleReportApplication:56", "message": "Running with Spring Boot v2.4.2, Spring v5.3.3"}
{"time": "2022-06-14 15:48:19.109", "level": "INFO", "source": "g.c.u.s.SimpleReportApplication:664", "message": "The following profiles are active: dev,no-security,no-okta-mgmt,server-debug,create-sample-data,local,no-okta-auth"}
{"time": "2022-06-14 15:48:19.158", "level": "INFO", "source": "o.s.b.devtools.restart.ChangeableUrls:255", "message": "The Class-Path manifest attribute in /Users/nathancarter/.gradle/caches/modules-2/files-2.1/org.liquibase/liquibase-core/3.10.3/54512c0e8c4eb45da120658b2dd0327d9690020c/liquibase-core-3.10.3.jar referenced one or more files that do not exist: file:/Users/nathancarter/.gradle/caches/modules-2/files-2.1/org.liquibase/liquibase-core/3.10.3/54512c0e8c4eb45da120658b2dd0327d9690020c/commons-cli-1.4.jar,file:/Users/nathancarter/.gradle/caches/modules-2/files-2.1/org.liquibase/liquibase-core/3.10.3/54512c0e8c4eb45da120658b2dd0327d9690020c/snakeyaml-1.24.jar,file:/Users/nathancarter/.gradle/caches/modules-2/files-2.1/org.liquibase/liquibase-core/3.10.3/54512c0e8c4eb45da120658b2dd0327d9690020c/slf4j-api-1.7.28.jar,file:/Users/nathancarter/.gradle/caches/modules-2/files-2.1/org.liquibase/liquibase-core/3.10.3/54512c0e8c4eb45da120658b2dd0327d9690020c/logback-classic-1.2.3.jar,file:/Users/nathancarter/.gradle/caches/modules-2/files-2.1/org.liquibase/liquibase-core/3.10.3/54512c0e8c4eb45da120658b2dd0327d9690020c/logback-core-1.2.3.jar"}
{"time": "2022-06-14 15:48:19.158", "level": "INFO", "source": "o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor:255", "message": "Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable"}
{"time": "2022-06-14 15:48:19.158", "level": "INFO", "source": "o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor:255", "message": "For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'"}
{"time": "2022-06-14 15:48:20.693", "level": "INFO", "source": "o.s.d.r.c.RepositoryConfigurationDelegate:128", "message": "Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"time": "2022-06-14 15:48:20.856", "level": "INFO", "source": "o.s.d.r.c.RepositoryConfigurationDelegate:188", "message": "Finished Spring Data repository scanning in 155 ms. Found 26 JPA repository interfaces."}
{"time": "2022-06-14 15:48:21.195", "level": "INFO", "source": "o.s.cloud.context.scope.GenericScope:283", "message": "BeanFactory id=40e81183-7332-38ab-b6ae-055b65ef437d"}
{"time": "2022-06-14 15:48:21.363", "level": "INFO", "source": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:350", "message": "Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5a33ab3a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"time": "2022-06-14 15:48:21.368", "level": "INFO", "source": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:350", "message": "Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"time": "2022-06-14 15:48:21.868", "level": "INFO", "source": "o.s.b.w.embedded.tomcat.TomcatWebServer:108", "message": "Tomcat initialized with port(s): 8080 (http)"}
{"time": "2022-06-14 15:48:21.879", "level": "INFO", "source": "o.apache.catalina.core.StandardService:173", "message": "Starting service [Tomcat]"}
{"time": "2022-06-14 15:48:21.879", "level": "INFO", "source": "org.apache.catalina.core.StandardEngine:173", "message": "Starting Servlet engine: [Apache Tomcat/9.0.41]"}
{"time": "2022-06-14 15:48:21.998", "level": "INFO", "source": "o.a.c.c.C.[Tomcat].[localhost].[/]:173", "message": "Initializing Spring embedded WebApplicationContext"}
{"time": "2022-06-14 15:48:21.998", "level": "INFO", "source": "o.s.b.w.s.c.ServletWebServerApplicationContext:289", "message": "Root WebApplicationContext: initialization completed in 2839 ms"}
{"time": "2022-06-14 15:48:22.079", "level": "INFO", "source": "g.c.u.s.i.repository.DemoOktaRepository:59", "message": "Done initializing Demo Okta repository."}
{"time": "2022-06-14 15:48:22.164", "level": "WARN", "source": "com.zaxxer.hikari.HikariConfig:1047", "message": "HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it."}
{"time": "2022-06-14 15:48:22.168", "level": "INFO", "source": "com.zaxxer.hikari.HikariDataSource:80", "message": "HikariPool-1 - Starting..."}
{"time": "2022-06-14 15:48:22.265", "level": "INFO", "source": "com.zaxxer.hikari.HikariDataSource:82", "message": "HikariPool-1 - Start completed."}
{"time": "2022-06-14 15:48:24.874", "level": "INFO", "source": "l.lockservice.StandardLockService:42", "message": "Successfully acquired change log lock"}
{"time": "2022-06-14 15:48:25.248", "level": "INFO", "source": "l.c.StandardChangeLogHistoryService:42", "message": "Reading from simple_report.databasechangelog"}
{"time": "2022-06-14 15:48:25.308", "level": "INFO", "source": "l.lockservice.StandardLockService:42", "message": "Successfully released change log lock"}
{"time": "2022-06-14 15:48:25.323", "level": "INFO", "source": "com.zaxxer.hikari.HikariDataSource:80", "message": "HikariPool-2 - Starting..."}
{"time": "2022-06-14 15:48:25.336", "level": "INFO", "source": "com.zaxxer.hikari.HikariDataSource:82", "message": "HikariPool-2 - Start completed."}
{"time": "2022-06-14 15:48:27.214", "level": "INFO", "source": "l.lockservice.StandardLockService:42", "message": "Successfully acquired change log lock"}
{"time": "2022-06-14 15:48:27.275", "level": "INFO", "source": "l.c.StandardChangeLogHistoryService:42", "message": "Reading from public."databasechangelog-metabase""}
{"time": "2022-06-14 15:48:27.286", "level": "INFO", "source": "l.lockservice.StandardLockService:42", "message": "Successfully released change log lock"}
{"time": "2022-06-14 15:48:27.393", "level": "INFO", "source": "o.hibernate.jpa.internal.util.LogHelper:31", "message": "HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"time": "2022-06-14 15:48:27.448", "level": "INFO", "source": "org.hibernate.Version:44", "message": "HHH000412: Hibernate ORM core version 5.4.27.Final"}
{"time": "2022-06-14 15:48:27.452", "level": "INFO", "source": "org.hibernate.cfg.Environment:184", "message": "HHH000205: Loaded properties from resource hibernate.properties: {hibernate.bytecode.use_reflection_optimizer=false, hibernate.jdbc.time_zone=UTC, hibernate.types.print.banner=false}"}
{"time": "2022-06-14 15:48:27.580", "level": "INFO", "source": "o.hibernate.annotations.common.Version:56", "message": "HCANN000001: Hibernate Commons Annotations {5.1.2.Final}"}
{"time": "2022-06-14 15:48:27.682", "level": "INFO", "source": "org.hibernate.dialect.Dialect:175", "message": "HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect"}
{"time": "2022-06-14 15:48:28.744", "level": "ERROR", "source": "o.h.metamodel.internal.MetadataContext:491", "message": "HHH015007: Illegal argument on static metamodel field injection : gov.cdc.usds.simplereport.db.model.Person_#tribalAffiliation; expected type :  org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl; encountered type : javax.persistence.metamodel.ListAttribute"}
{"time": "2022-06-14 15:48:28.744", "level": "ERROR", "source": "o.h.metamodel.internal.MetadataContext:491", "message": "HHH015007: Illegal argument on static metamodel field injection : gov.cdc.usds.simplereport.db.model.Person_#emails; expected type :  org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl; encountered type : javax.persistence.metamodel.ListAttribute"}
{"time": "2022-06-14 15:48:28.745", "level": "ERROR", "source": "o.h.metamodel.internal.MetadataContext:491", "message": "HHH015007: Illegal argument on static metamodel field injection : gov.cdc.usds.simplereport.db.model.auxiliary.StreetAddress_#street; expected type :  org.hibernate.metamodel.model.domain.internal.SingularAttributeImpl; encountered type : javax.persistence.metamodel.ListAttribute"}
{"time": "2022-06-14 15:48:28.803", "level": "INFO", "source": "o.h.e.t.j.p.i.JtaPlatformInitiator:52", "message": "HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]"}
{"time": "2022-06-14 15:48:28.811", "level": "INFO", "source": "o.s.o.j.LocalContainerEntityManagerFactoryBean:437", "message": "Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"time": "2022-06-14 15:48:29.857", "level": "INFO", "source": "g.c.u.s.c.SendGridDisabledConfiguration:55", "message": "LocalEmailProvider is enabled!"}
{"time": "2022-06-14 15:48:29.924", "level": "DEBUG", "source": "g.c.u.s.service.sms.SmsService:39", "message": "SmsService initialized"}
{"time": "2022-06-14 15:48:31.436", "level": "WARN", "source": "g.kickstart.tools.SchemaClassScanner:181", "message": "Schema type was defined but can never be accessed, and can be safely deleted: ResultValue"}
{"time": "2022-06-14 15:48:31.437", "level": "WARN", "source": "g.kickstart.tools.SchemaClassScanner:181", "message": "Schema type was defined but can never be accessed, and can be safely deleted: TestCorrectionStatus"}
{"time": "2022-06-14 15:48:32.185", "level": "INFO", "source": "o.s.b.d.a.OptionalLiveReloadServer:58", "message": "LiveReload server is running on port 35729"}
{"time": "2022-06-14 15:48:32.259", "level": "INFO", "source": "g.c.u.s.a.a.AccountRequestController:64", "message": "Account request REST endpoint enabled"}
{"time": "2022-06-14 15:48:32.266", "level": "INFO", "source": "g.c.u.s.a.a.IdentityVerificationController:59", "message": "Identity verification REST endpoint enabled."}
{"time": "2022-06-14 15:48:32.280", "level": "INFO", "source": "g.c.u.s.a.a.UserAccountCreationController:61", "message": "User account request creation REST endpoint enabled."}
{"time": "2022-06-14 15:48:32.304", "level": "INFO", "source": "g.c.u.s.a.p.PatientExperienceController:57", "message": "Patient Experience REST endpoints enabled"}
{"time": "2022-06-14 15:48:32.416", "level": "INFO", "source": "o.s.s.c.ThreadPoolTaskScheduler:181", "message": "Initializing ExecutorService"}
{"time": "2022-06-14 15:48:32.598", "level": "INFO", "source": "o.s.s.concurrent.ThreadPoolTaskExecutor:181", "message": "Initializing ExecutorService 'applicationTaskExecutor'"}
{"time": "2022-06-14 15:48:32.650", "level": "WARN", "source": "g.c.u.s.c.DevCorsSecurityConfiguration:19", "message": "CORS ENABLED BY no-security PROFILE"}
{"time": "2022-06-14 15:48:32.690", "level": "INFO", "source": "o.s.b.a.w.s.WelcomePageHandlerMapping:53", "message": "Adding welcome page: class path resource [static/index.html]"}
{"time": "2022-06-14 15:48:32.820", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:340", "message": "Failed to parse configuration property [maxConnectionsPerRoute]"}
{"time": "2022-06-14 15:48:32.820", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:347", "message": "Failed to parse system property [com.okta.sdk.impl.http.httpclient.HttpClientRequestExecutor.connPoolControl.maxPerRoute]"}
{"time": "2022-06-14 15:48:32.820", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:340", "message": "Failed to parse configuration property [maxConnectionsTotal]"}
{"time": "2022-06-14 15:48:32.820", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:347", "message": "Failed to parse system property [com.okta.sdk.impl.http.httpclient.HttpClientRequestExecutor.connPoolControl.maxTotal]"}
{"time": "2022-06-14 15:48:32.820", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:340", "message": "Failed to parse configuration property [validateAfterInactivity]"}
{"time": "2022-06-14 15:48:32.820", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:347", "message": "Failed to parse system property [com.okta.sdk.impl.http.httpclient.HttpClientRequestExecutor.connPoolControl.validateAfterInactivity]"}
{"time": "2022-06-14 15:48:32.821", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:340", "message": "Failed to parse configuration property [connectionTimeToLive]"}
{"time": "2022-06-14 15:48:32.821", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:347", "message": "Failed to parse system property [com.okta.sdk.impl.http.httpclient.HttpClientRequestExecutor.connPoolControl.timeToLive]"}
{"time": "2022-06-14 15:48:32.823", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:263", "message": "Failed to read configuration property [connectionTimeToLive: Invalid connection time to live value]. Falling back to default value: 300000"}
{"time": "2022-06-14 15:48:32.860", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:263", "message": "Failed to read configuration property [validateAfterInactivity: Invalid max connection inactivity validation value]. Falling back to default value: 2000"}
{"time": "2022-06-14 15:48:32.860", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:263", "message": "Failed to read configuration property [maxConnectionsTotal: Bad max connection total value]. Falling back to default value: 2147483647"}
{"time": "2022-06-14 15:48:32.860", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:263", "message": "Failed to read configuration property [maxConnectionsPerRoute: Bad max connection per route value]. Falling back to default value: 1073741823"}
{"time": "2022-06-14 15:48:32.860", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:263", "message": "Failed to read configuration property [maxConnectionsPerRoute: Bad max connection per route value]. Falling back to default value: 1073741823"}
{"time": "2022-06-14 15:48:32.860", "level": "WARN", "source": "c.o.c.h.h.HttpClientRequestExecutor:263", "message": "Failed to read configuration property [maxConnectionsTotal: Bad max connection total value]. Falling back to default value: 2147483647"}
{"time": "2022-06-14 15:48:33.270", "level": "INFO", "source": "o.s.b.a.s.s.UserDetailsServiceAutoConfiguration:86", "message": "nUsing generated security password: e667dfc8-b85a-4080-a3e9-3c85e3781641n"}
{"time": "2022-06-14 15:48:33.324", "level": "WARN", "source": "g.c.u.s.config.DevSecurityConfiguration:18", "message": "SECURITY DISABLED BY no-security PROFILE"}
{"time": "2022-06-14 15:48:33.373", "level": "INFO", "source": "o.s.b.a.e.web.EndpointLinksResolver:58", "message": "Exposing 3 endpoint(s) beneath base path '/actuator'"}
{"time": "2022-06-14 15:48:33.412", "level": "INFO", "source": "o.s.s.web.DefaultSecurityFilterChain:51", "message": "Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b3acb39, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f7b6e46, org.springframework.security.web.header.HeaderWriterFilter@3815de25, org.springframework.web.filter.CorsFilter@208a012f, org.springframework.security.web.authentication.logout.LogoutFilter@11d89bbc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ce88184, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7480d375, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@613e6d72, org.springframework.security.web.session.SessionManagementFilter@6c438adf, org.springframework.security.web.access.ExceptionTranslationFilter@75a42a69, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@b41791]"}
{"time": "2022-06-14 15:48:33.537", "level": "WARN", "source": "o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:82", "message": "Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath."}
{"time": "2022-06-14 15:48:33.637", "level": "INFO", "source": "o.s.b.w.embedded.tomcat.TomcatWebServer:220", "message": "Tomcat started on port(s): 8080 (http) with context path ''"}
{"time": "2022-06-14 15:48:33.664", "level": "INFO", "source": "o.s.s.a.ScheduledAnnotationBeanPostProcessor:309", "message": "No TaskScheduler/ScheduledExecutorService bean found for scheduled processing"}
{"time": "2022-06-14 15:48:33.675", "level": "INFO", "source": "g.c.u.s.SimpleReportApplication:61", "message": "Started SimpleReportApplication in 20.87 seconds (JVM running for 21.541)"}
Hibernate: 
    select
        supportedd0_.internal_id as internal1_22_,
        supportedd0_.loinc as loinc2_22_,
        supportedd0_.name as name3_22_ 
    from
        simple_report.supported_disease supportedd0_ 
    where
        supportedd0_.name=?
Hibernate: 
    select
        supportedd0_.internal_id as internal1_22_,
        supportedd0_.loinc as loinc2_22_,
        supportedd0_.name as name3_22_ 
    from
        simple_report.supported_disease supportedd0_ 
    where
        supportedd0_.name=?
Hibernate: 
    select
        supportedd0_.internal_id as internal1_22_,
        supportedd0_.loinc as loinc2_22_,
        supportedd0_.name as name3_22_ 
    from
        simple_report.supported_disease supportedd0_ 
    where
        supportedd0_.name=?
{"time": "2022-06-14 15:48:33.823", "level": "WARN", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:120", "message": "No authentication found: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:48:33.835", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:48:33.867", "level": "DEBUG", "source": "g.c.u.s.s.OrganizationInitializingService:66", "message": "Organization init called (again?)"}
{"time": "2022-06-14 15:48:33.876", "level": "DEBUG", "source": "g.c.u.s.config.AuditingConfig:37", "message": "Fetching current user for audit"}
{"time": "2022-06-14 15:48:33.877", "level": "WARN", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:120", "message": "No authentication found: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:48:33.880", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
Hibernate: 
    select
        devicetype0_.internal_id as internal1_5_,
        devicetype0_.created_at as created_2_5_,
        devicetype0_.created_by as created11_5_,
        devicetype0_.updated_at as updated_3_5_,
        devicetype0_.updated_by as updated12_5_,
        devicetype0_.is_deleted as is_delet4_5_,
        devicetype0_.loinc_code as loinc_co5_5_,
        devicetype0_.manufacturer as manufact6_5_,
        devicetype0_.model as model7_5_,
        devicetype0_.name as name8_5_,
        devicetype0_.swab_type as swab_typ9_5_,
        devicetype0_.test_length as test_le10_5_ 
    from
        simple_report.device_type devicetype0_ 
    where
        devicetype0_.is_deleted=false
Hibernate: 
    select
        specimenty0_.internal_id as internal1_21_,
        specimenty0_.created_at as created_2_21_,
        specimenty0_.created_by as created_9_21_,
        specimenty0_.updated_at as updated_3_21_,
        specimenty0_.updated_by as updated10_21_,
        specimenty0_.is_deleted as is_delet4_21_,
        specimenty0_.collection_location_code as collecti5_21_,
        specimenty0_.collection_location_name as collecti6_21_,
        specimenty0_.name as name7_21_,
        specimenty0_.type_code as type_cod8_21_ 
    from
        simple_report.specimen_type specimenty0_ 
    where
        specimenty0_.is_deleted=false
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        specimenty1_.internal_id as internal1_21_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        specimenty1_.created_at as created_2_21_1_,
        specimenty1_.created_by as created_9_21_1_,
        specimenty1_.updated_at as updated_3_21_1_,
        specimenty1_.updated_by as updated10_21_1_,
        specimenty1_.is_deleted as is_delet4_21_1_,
        specimenty1_.collection_location_code as collecti5_21_1_,
        specimenty1_.collection_location_name as collecti6_21_1_,
        specimenty1_.name as name7_21_1_,
        specimenty1_.type_code as type_cod8_21_1_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    left outer join
        simple_report.specimen_type specimenty1_ 
            on devicespec0_.specimen_type_id=specimenty1_.internal_id 
    left outer join
        simple_report.device_type devicetype2_ 
            on devicespec0_.device_type_id=devicetype2_.internal_id 
    where
        devicespec0_.is_deleted=false 
        and devicespec0_.device_type_id=? 
        and devicespec0_.specimen_type_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        specimenty1_.internal_id as internal1_21_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        specimenty1_.created_at as created_2_21_1_,
        specimenty1_.created_by as created_9_21_1_,
        specimenty1_.updated_at as updated_3_21_1_,
        specimenty1_.updated_by as updated10_21_1_,
        specimenty1_.is_deleted as is_delet4_21_1_,
        specimenty1_.collection_location_code as collecti5_21_1_,
        specimenty1_.collection_location_name as collecti6_21_1_,
        specimenty1_.name as name7_21_1_,
        specimenty1_.type_code as type_cod8_21_1_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    left outer join
        simple_report.specimen_type specimenty1_ 
            on devicespec0_.specimen_type_id=specimenty1_.internal_id 
    left outer join
        simple_report.device_type devicetype2_ 
            on devicespec0_.device_type_id=devicetype2_.internal_id 
    where
        devicespec0_.is_deleted=false 
        and devicespec0_.device_type_id=? 
        and devicespec0_.specimen_type_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        specimenty1_.internal_id as internal1_21_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        specimenty1_.created_at as created_2_21_1_,
        specimenty1_.created_by as created_9_21_1_,
        specimenty1_.updated_at as updated_3_21_1_,
        specimenty1_.updated_by as updated10_21_1_,
        specimenty1_.is_deleted as is_delet4_21_1_,
        specimenty1_.collection_location_code as collecti5_21_1_,
        specimenty1_.collection_location_name as collecti6_21_1_,
        specimenty1_.name as name7_21_1_,
        specimenty1_.type_code as type_cod8_21_1_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    left outer join
        simple_report.specimen_type specimenty1_ 
            on devicespec0_.specimen_type_id=specimenty1_.internal_id 
    left outer join
        simple_report.device_type devicetype2_ 
            on devicespec0_.device_type_id=devicetype2_.internal_id 
    where
        devicespec0_.is_deleted=false 
        and devicespec0_.device_type_id=? 
        and devicespec0_.specimen_type_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        specimenty1_.internal_id as internal1_21_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        specimenty1_.created_at as created_2_21_1_,
        specimenty1_.created_by as created_9_21_1_,
        specimenty1_.updated_at as updated_3_21_1_,
        specimenty1_.updated_by as updated10_21_1_,
        specimenty1_.is_deleted as is_delet4_21_1_,
        specimenty1_.collection_location_code as collecti5_21_1_,
        specimenty1_.collection_location_name as collecti6_21_1_,
        specimenty1_.name as name7_21_1_,
        specimenty1_.type_code as type_cod8_21_1_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    left outer join
        simple_report.specimen_type specimenty1_ 
            on devicespec0_.specimen_type_id=specimenty1_.internal_id 
    left outer join
        simple_report.device_type devicetype2_ 
            on devicespec0_.device_type_id=devicetype2_.internal_id 
    where
        devicespec0_.is_deleted=false 
        and devicespec0_.device_type_id=? 
        and devicespec0_.specimen_type_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        specimenty1_.internal_id as internal1_21_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        specimenty1_.created_at as created_2_21_1_,
        specimenty1_.created_by as created_9_21_1_,
        specimenty1_.updated_at as updated_3_21_1_,
        specimenty1_.updated_by as updated10_21_1_,
        specimenty1_.is_deleted as is_delet4_21_1_,
        specimenty1_.collection_location_code as collecti5_21_1_,
        specimenty1_.collection_location_name as collecti6_21_1_,
        specimenty1_.name as name7_21_1_,
        specimenty1_.type_code as type_cod8_21_1_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    left outer join
        simple_report.specimen_type specimenty1_ 
            on devicespec0_.specimen_type_id=specimenty1_.internal_id 
    left outer join
        simple_report.device_type devicetype2_ 
            on devicespec0_.device_type_id=devicetype2_.internal_id 
    where
        devicespec0_.is_deleted=false 
        and devicespec0_.device_type_id=? 
        and devicespec0_.specimen_type_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        specimenty1_.internal_id as internal1_21_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        specimenty1_.created_at as created_2_21_1_,
        specimenty1_.created_by as created_9_21_1_,
        specimenty1_.updated_at as updated_3_21_1_,
        specimenty1_.updated_by as updated10_21_1_,
        specimenty1_.is_deleted as is_delet4_21_1_,
        specimenty1_.collection_location_code as collecti5_21_1_,
        specimenty1_.collection_location_name as collecti6_21_1_,
        specimenty1_.name as name7_21_1_,
        specimenty1_.type_code as type_cod8_21_1_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    left outer join
        simple_report.specimen_type specimenty1_ 
            on devicespec0_.specimen_type_id=specimenty1_.internal_id 
    left outer join
        simple_report.device_type devicetype2_ 
            on devicespec0_.device_type_id=devicetype2_.internal_id 
    where
        devicespec0_.is_deleted=false 
        and devicespec0_.device_type_id=? 
        and devicespec0_.specimen_type_id=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false
{"time": "2022-06-14 15:48:34.000", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:264", "message": "Creating organization Unverified Org in Okta"}
{"time": "2022-06-14 15:48:34.000", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:264", "message": "Creating organization Dat Organization in Okta"}
{"time": "2022-06-14 15:48:34.001", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:264", "message": "Creating organization Dis Organization in Okta"}
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:48:34.054", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:115", "message": "Creating facilities [Uptown Clinic, Testing Site, Downtown Clinic] with 2 devices configured"}
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false
{"time": "2022-06-14 15:48:34.066", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:273", "message": "Creating facility=Testing Site in Okta"}
{"time": "2022-06-14 15:48:34.066", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:273", "message": "Creating facility=Uptown Clinic in Okta"}
{"time": "2022-06-14 15:48:34.066", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:273", "message": "Creating facility=Downtown Clinic in Okta"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
Hibernate: 
    select
        patientsel0_.internal_id as internal1_12_,
        patientsel0_.created_at as created_2_12_,
        patientsel0_.created_by as created_6_12_,
        patientsel0_.updated_at as updated_3_12_,
        patientsel0_.updated_by as updated_7_12_,
        patientsel0_.is_deleted as is_delet4_12_,
        patientsel0_.facility_id as facility8_12_,
        patientsel0_.organization_id as organiza9_12_,
        patientsel0_.patient_registration_link as patient_5_12_ 
    from
        simple_report.patient_registration_link patientsel0_ 
    where
        patientsel0_.organization_id=?
Hibernate: 
    select
        patientsel0_.internal_id as internal1_12_,
        patientsel0_.created_at as created_2_12_,
        patientsel0_.created_by as created_6_12_,
        patientsel0_.updated_at as updated_3_12_,
        patientsel0_.updated_by as updated_7_12_,
        patientsel0_.is_deleted as is_delet4_12_,
        patientsel0_.facility_id as facility8_12_,
        patientsel0_.organization_id as organiza9_12_,
        patientsel0_.patient_registration_link as patient_5_12_ 
    from
        simple_report.patient_registration_link patientsel0_ 
    where
        patientsel0_.facility_id=?
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
{"time": "2022-06-14 15:48:34.094", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:178", "message": "User=bob@example.com will have roles=[ADMIN] in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.095", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:199", "message": "User=bob@example.com will have access to all facilities in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.095", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:286", "message": "Creating user bob@example.com in Okta"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
{"time": "2022-06-14 15:48:34.103", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:178", "message": "User=ruby@example.com will have roles=[USER] in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.103", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:204", "message": "User=ruby@example.com will have access to facilities=[Testing Site] in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.103", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:286", "message": "Creating user ruby@example.com in Okta"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
{"time": "2022-06-14 15:48:34.111", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:178", "message": "User=ben@example.com will have roles=[] in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.111", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:204", "message": "User=ben@example.com will have access to facilities=[Testing Site] in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.111", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:286", "message": "Creating user ben@example.com in Okta"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
{"time": "2022-06-14 15:48:34.118", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:178", "message": "User=jamar@example.com will have roles=[ENTRY_ONLY, ALL_FACILITIES] in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.119", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:199", "message": "User=jamar@example.com will have access to all facilities in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.119", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:286", "message": "Creating user jamar@example.com in Okta"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
{"time": "2022-06-14 15:48:34.127", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:178", "message": "User=sarah@example.com will have roles=[ADMIN] in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.127", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:199", "message": "User=sarah@example.com will have access to all facilities in organization=DIS_ORG"}
{"time": "2022-06-14 15:48:34.127", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:286", "message": "Creating user sarah@example.com in Okta"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and organizati0_.organization_external_id=?
{"time": "2022-06-14 15:48:34.137", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:178", "message": "User=megan@example.com will have roles=[ADMIN] in organization=DAT_ORG"}
{"time": "2022-06-14 15:48:34.137", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:199", "message": "User=megan@example.com will have access to all facilities in organization=DAT_ORG"}
{"time": "2022-06-14 15:48:34.138", "level": "INFO", "source": "g.c.u.s.s.OrganizationInitializingService:286", "message": "Creating user megan@example.com in Okta"}
Hibernate: 
    insert 
    into
        simple_report.provider
        (created_at, created_by, updated_at, updated_by, is_deleted, city, county, postal_code, state, street, first_name, last_name, middle_name, suffix, provider_id, telephone, internal_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"time": "2022-06-14 15:48:37.903", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:48:37.903", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:48:37.903", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:48:37.911", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:48:37.916", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:48:37.922", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:48:37.925", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:48:37.964", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:48:37.973", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:48:38.012", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:48:38.067", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [whoami.firstName, whoami.organization.testingFacility.id, whoami.permissions, whoami.suffix, whoami.isAdmin, whoami.organization.name, whoami.organization.testingFacility.name, whoami.middleName, whoami.organization.testingFacility.__typename, whoami.__typename, whoami.lastName, whoami.roleDescription, whoami.organization.__typename, whoami.id, whoami.email]"}
{"time": "2022-06-14 15:48:38.113", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:48:38.114", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:48:38.180", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"WhoAmI","query":"query WhoAmI {\n  whoami {\n    id\n    firstName\n    middleName\n    lastName\n    suffix\n    email\n    isAdmin\n    permissions\n    roleDescription\n    organization {\n      name\n      testingFacility {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}","variables":{}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"323c9ba9-277e-41cd-89fb-ae92d1102e69","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:48:37.937+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:48:37.926+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:48:38.181", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 134ms"}
{"time": "2022-06-14 15:48:52.598", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:48:52.599", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:48:52.599", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:48:52.602", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:48:52.606", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:48:52.610", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:48:52.615", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:48:52.627", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:48:52.631", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:48:52.659", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:48:52.661", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [whoami.firstName, whoami.organization.testingFacility.id, whoami.permissions, whoami.suffix, whoami.isAdmin, whoami.organization.name, whoami.organization.testingFacility.name, whoami.middleName, whoami.organization.testingFacility.__typename, whoami.__typename, whoami.lastName, whoami.roleDescription, whoami.organization.__typename, whoami.id, whoami.email]"}
{"time": "2022-06-14 15:48:52.662", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:48:52.663", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:48:52.666", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"WhoAmI","query":"query WhoAmI {\n  whoami {\n    id\n    firstName\n    middleName\n    lastName\n    suffix\n    email\n    isAdmin\n    permissions\n    roleDescription\n    organization {\n      name\n      testingFacility {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}","variables":{}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"04f03236-8658-4ba0-b519-6e35d9b10091","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:48:52.620+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:48:52.615+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:48:52.667", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 6ms"}
{"time": "2022-06-14 15:49:11.307", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:49:11.307", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:49:11.307", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:49:11.310", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:49:11.316", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:49:11.322", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:49:11.325", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:49:11.333", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:49:11.337", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:49:11.356", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:49:11.363", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [uploadSubmissions.content.recordsCount, uploadSubmissions.content.errors.scope, uploadSubmissions.content.__typename, uploadSubmissions.totalElements, uploadSubmissions.content.reportId, uploadSubmissions.content.warnings.message, uploadSubmissions.content.warnings.scope, uploadSubmissions.__typename, uploadSubmissions.content.errors.message, uploadSubmissions.content.createdAt, uploadSubmissions.content.status, uploadSubmissions.content.errors.__typename, uploadSubmissions.content.internalId, uploadSubmissions.content.warnings.__typename]"}
Hibernate: 
    select
        testresult0_.internal_id as internal1_29_,
        testresult0_.created_at as created_2_29_,
        testresult0_.created_by as created_9_29_,
        testresult0_.updated_at as updated_3_29_,
        testresult0_.updated_by as updated10_29_,
        testresult0_.errors as errors4_29_,
        testresult0_.org_id as org_id11_29_,
        testresult0_.records_count as records_5_29_,
        testresult0_.report_id as report_i6_29_,
        testresult0_.status as status7_29_,
        testresult0_.warnings as warnings8_29_ 
    from
        simple_report.upload testresult0_ 
    where
        testresult0_.org_id=? 
        and (
            cast(? as date) is null 
            or testresult0_.created_at>=?
        ) 
        and (
            cast(? as date) is null 
            or testresult0_.created_at<=?
        ) 
    order by
        testresult0_.created_at desc limit ?
{"time": "2022-06-14 15:49:11.396", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"GetUploadSubmissions","query":"query GetUploadSubmissions($startDate: DateTime, $endDate: DateTime, $pageNumber: Int, $pageSize: Int) {\n  uploadSubmissions(\n    startDate: $startDate\n    endDate: $endDate\n    pageNumber: $pageNumber\n    pageSize: $pageSize\n  ) {\n    content {\n      internalId\n      reportId\n      createdAt\n      status\n      recordsCount\n      errors {\n        message\n        scope\n        __typename\n      }\n      warnings {\n        message\n        scope\n        __typename\n      }\n      __typename\n    }\n    totalElements\n    __typename\n  }\n}","variables":{"pageNumber":0,"endDate":null,"pageSize":10,"startDate":null}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"64331765-9f5b-4e05-a9fd-efe2c465f7e4","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:49:11.328+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:49:11.326+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:49:11.396", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 37ms"}
{"time": "2022-06-14 15:49:48.653", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:49:48.654", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:49:48.654", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:49:48.658", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:49:48.667", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:49:48.674", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:49:48.677", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:49:48.718", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:49:48.722", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:49:48.746", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:49:48.752", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [uploadTestResultCSV.status, uploadTestResultCSV.__typename, uploadTestResultCSV.errors.message, uploadTestResultCSV.errors.scope, uploadTestResultCSV.errors.__typename, uploadTestResultCSV.reportId, uploadTestResultCSV.warnings.message, uploadTestResultCSV.warnings.__typename, uploadTestResultCSV.recordsCount, uploadTestResultCSV.warnings.scope]"}
{"time": "2022-06-14 15:49:48.757", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:50:02.452", "level": "DEBUG", "source": "g.c.u.s.config.AuditingConfig:37", "message": "Fetching current user for audit"}
{"time": "2022-06-14 15:50:02.457", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
Hibernate: 
    insert 
    into
        simple_report.upload
        (created_at, created_by, updated_at, updated_by, errors, org_id, records_count, report_id, status, warnings, internal_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
{"time": "2022-06-14 15:50:02.623", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 874ms"}
{"time": "2022-06-14 15:50:02.622", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"UploadTestResultCSV","query":"mutation UploadTestResultCSV($testResultList: Upload!) {\n  uploadTestResultCSV(testResultList: $testResultList) {\n    reportId\n    status\n    recordsCount\n    warnings {\n      scope\n      message\n      __typename\n    }\n    errors {\n      scope\n      message\n      __typename\n    }\n    __typename\n  }\n}","variables":{"testResultList":"Patient_last_name,Patient_first_name,Patient_middle_name,Patient_suffix,Patient_tribal_affiliation,Patient_ID,Ordered_test_code,Specimen_source_site_code,Specimen_type_code,Device_ID,Instrument_ID,Result_ID,Corrected_result_ID,Test_correction_reason,Test_result_status,Test_result_code,Illness_onset_date,Specimen_collection_date_time,Order_test_date,Test_date,Date_result_released,Patient_race,Patient_DOB,Patient_gender,Patient_ethnicity,Patient_preferred_language,Patient_street,Patient_street_2,Patient_city,Patient_state,Patient_zip_code,Patient_country,Patient_phone_number,Patient_county,Patient_email,Patient_role,Processing_mode_code,Employed_in_healthcare,Resident_congregate_setting,First_test,Symptomatic_for_disease,Testing_lab_name,Testing_lab_CLIA,Testing_lab_street,Testing_lab_street_2,Testing_lab_city,Testing_lab_state,Testing_lab_zip_code,Testing_lab_phone_number,Testing_lab_county,Organization_name,Ordering_facility_name,Ordering_facility_street,Ordering_facility_street_2,Ordering_facility_city,Ordering_facility_state,Ordering_facility_zip_code,Ordering_facility_phone_number,Ordering_facility_county,Ordering_provider_ID,Ordering_provider_last_name,Ordering_provider_first_name,Ordering_provider_street,Ordering_provider_street_2,Ordering_provider_city,Ordering_provider_state,Ordering_provider_zip_code,Ordering_provider_phone_number,Ordering_provider_county,Site_of_care\nAlaska1,Judy,Suellen,,39,xen4p,94558-4,71836000,440500007,BD Veritor System for Rapid Detection of SARS-CoV-2,939273,Alaska1,613603,nh1rigems,F,260373001,20220225,202202201809-0500,202202261540-0500,20220221,20220220,2106-3,,F,H,Iloko,10269 Larry Villages,,Yellow jacket,AK,81335,USA,2853464789,Montezuma,lyndon.smitham@email.com,kgvmoxba,P,Y,UNK,N,Y,Any lab USA,BadCLIA,3279 Schroeder Mountain,,Yellow jacket,AK,81335,2365001476,Montezuma,see3r8,Any facility USA,35260 Dustin Crossroad,,Yellow jacket,AK,81335,2862149859,Montezuma,1368398388,Huels,Bradley,283 Runolfsson Drive,,Yellow jacket,AK,81335,2241497529,Montezuma,camp\nAlaska4,Lakia,Jasmine,II,425,681gcvcej,95209-3,71836000,119364003,LumiraDx SARS-CoV-2 Ag Test,488125,Alaska4,149794,mf433,C,260373001,20220224,202202201018-0500,202202280213-0500,20220228,20220224,ASKU,20040109,O,U,Otomian languages,73745 Garfield Junctions,,Loveland,AK,80537,USA,2410308513,Larimer,dot.swaniawski@email.com,mawsfa,P,UNK,Y,Y,UNK,Any lab USA,BadCLIA,91150 Runolfsson Trail,,Loveland,AK,80537,2381431370,Larimer,3e3lsxz,Any facility USA,285 Javier Lodge,,Loveland,AK,80537,2227498182,Larimer,1073411005,Collins,Edward,8131 Morton Vista,,Loveland,AK,80537,2545052905,Larimer,hospital\nAlaska5,Camilla,Aaron,PhD,155,znh1w4,94558-4,71836000,258529004,BD Veritor System for Rapid Detection of SARS-CoV-2,714105,Alaska5,969475,rxmbg2q8,F,260373001,20220224,202202200933-0500,202202281920-0500,20220227,20220222,2054-5,20181119,N,U,Gaelic; Scottish Gaelic,316 Esperanza Mountain,,Villegreen,AK,81049,USA,2628197766,Las Animas,darcie.schmidt@email.com,0p4y9,P,N,UNK,Y,Y,Any lab USA,19D1982418,3383 Natividad Fall,,Villegreen,AK,81049,2363622974,Las Animas,auzsv79j,Any facility USA,9269 Tyrell Run,,Villegreen,AK,81049,2259860436,Las Animas,1871021246,Beier,Jaime,056 Stracke Canyon,,Villegreen,AK,81049,2316942250,Las Animas,urgent_care\nHawaii6,Roman,Ethan,DDS,337,3y8kvx,95209-3,71836000,WRONG_specimen_type,LumiraDx SARS-CoV-2 Ag Test,91792,Hawaii6,248058,19bxo4,F,419984006,20220220,202202240743-0500,202202270006-0500,20220226,20220227,2028-9,19630418,O,N,Arawak,68346 Kuhn Rest,,Paauilo,HI,96776,USA,2893386593,Hawaii,king.schmeler@email.com,07e9jsv9,P,N,UNK,UNK,N,Any lab USA,52D0993791,70172 Maynard Mills,,Paauilo,HI,96776,2509382172,Hawaii,xt4bs4,Any facility USA,143 Bailey Prairie,,Paauilo,HI,96776,2433464082,Hawaii,1500461516,Kris,Milan,46478 Jason Ferry,,Paauilo,HI,96776,2221021721,Hawaii,treatment_center\nHawaii7,Oren,Booker,I,508,9j5ucoy3,95209-3,71836000,WRONG_specimen_type,WRONG_equipment_model_name,314875,Hawaii7,96325,hbngcaokg,C,419984006,20220301,202202271959-0500,202202230746-0500,20220227,20220228,ASKU,19850227,M,U,Khotanese,48626 Andrea Cape,,Holualoa,HI,96725,USA,2723653056,Hawaii,jarod.stark@email.com,fozgv3559,P,N,N,N,N,Any lab USA,45D7232637,625 Raynor Vista,,Holualoa,HI,96725,2454972847,Hawaii,jvdqgzo4,Any facility USA,0023 Erdman Ville,,Holualoa,HI,96725,2417450135,Hawaii,1082220249,Terry,Hans,937 Takisha Estates,,Holualoa,HI,96725,2926957961,Hawaii,employer\nHawaii8,Dale,Rosario,MD,485,o16jg5h,95209-3,71836000,119364003,LumiraDx SARS-CoV-2 Ag Test,311546,Hawaii8,901196,q4two0yw,C,260373001,20220226,202202251550-0500,202202271952-0500,20220224,20220222,2106-3,19611009,M,U,Thai,754 Muller Course,,Kurtistown,HI,96760,USA,2946622751,Hawaii,moriah.raynor@email.com,8d5k2,P,UNK,UNK,UNK,UNK,Any lab USA,43D1961163,895 Francisco Forge,,Kurtistown,HI,96760,2150017419,Hawaii,8iq8yvj7u,Any facility USA,89484 Madison Harbor,,Kurtistown,HI,96760,2716381441,Hawaii,1197461100,Marquardt,Issac,4275 Hilpert Avenue,,Kurtistown,HI,96760,WRONG_ordering_provider_phone_number,Hawaii,other\nHawaii9,Novella,Rod,III,200,h8wezxv,95209-3,71836000,WRONG_specimen_type,LumiraDx SARS-CoV-2 Ag Test,693890,Hawaii9,292399,9z429e,F,260373001,20220220,202202230448-0500,202202271318-0500,20220224,20220301,1002-5,19501019,M,U,Udmurt,987 Auer Fall,,Waialua,HI,96791,USA,2234211896,Honolulu,rosalba.morissette@email.com,3w9uhcf6k,P,Y,UNK,Y,UNK,Any lab USA,16D2071231,943 Norbert Brook,,Waialua,HI,96791,2715832456,Honolulu,1np6picz,Any facility USA,374 Mueller Drives,,Waialua,HI,96791,2489936569,Honolulu,1854296955,Schmidt,Antonina,48128 Hickle Union,,Waialua,HI,96791,2525447391,Honolulu,urgent_care\nHawaii10,Billy,Valentin,,452,m1wue,95209-3,71836000,119364003,LumiraDx SARS-CoV-2 Ag Test,891092,Hawaii10,637474,1xxpv,C,260415000,20220221,202202210211-0500,202202210714-0500,20220223,20220222,2106-3,19860321,M,N,Sanskrit,625 Guy Cove,,Kekaha,HI,96752,USA,2333963105,Kauai,samual.hartmann@email.com,l20fv,P,N,N,UNK,UNK,Any lab USA,90D6609198,2327 Keven Streets,,Kekaha,HI,96752,2072926659,Kauai,bceghnfw,Any facility USA,294 Candice Path,,Kekaha,HI,96752,2743949909,Kauai,1440905523,Aufderhar,Elene,98786 Reynolds Ways,,Kekaha,HI,96752,2035417314,Kauai,treatment_center\nOhio11,A,A,,39,asdfasdf,94558-4,71836000,440500007,BD Veritor System for Rapid Detection of SARS-CoV-2,939273,Ohio11,613603,nh1rigems,F,260373001,,,,,,2106-3,,F,H,Iloko,10269 Larry Villages,,Yellow jacket,OH,81335,USA,2853464789,Montezuma,lyndon.smitham@email.com,kgvmoxba,P,Y,UNK,N,Y,Any lab USA,BadCLIA,3279 Schroeder Mountain,,Yellow jacket,OH,81335,2365001476,Montezuma,see3r8,Any facility USA,35260 Dustin Crossroad,,Yellow jacket,OH,81335,2862149859,Montezuma,1368398388,Huels,Bradley,283 Runolfsson Drive,,Yellow jacket,OH,81335,2241497529,Montezuma,camp\nOhio12,B,B,,39,jkljkl,94558-4,71836000,440500007,BD Veritor System for Rapid Detection of SARS-CoV-2,939273,Ohio12,613603,nh1rigems,F,260373001,20220225,202202201809-0500,202202261540-0500,20220221,20220220,2106-3,,F,H,Iloko,10269 Larry Villages,,Yellow jacket,OH,81335,USA,2853464789,Montezuma,lyndon.smitham@email.com,kgvmoxba,P,Y,UNK,N,Y,Any lab USA,BadCLIA,3279 Schroeder Mountain,,Yellow jacket,OH,81335,2365001476,Montezuma,see3r8,Any facility USA,35260 Dustin Crossroad,,Yellow jacket,OH,81335,2862149859,Montezuma,1368398388,Huels,Bradley,283 Runolfsson Drive,,Yellow jacket,OH,81335,2241497529,Montezuma,camp\nMD13,C,C,,267,nmfolq,94558-4,71836000,122555007,BD Veritor System for Rapid Detection of SARS-CoV-2,190846,Alaska3,838707,inpzanp25,C,260373001,20220221,202202281336-0500,202202270422-0500,20220301,20220224,2028-9,20160531,A,U,Swahili,8068 McLaughlin Trail,,Rollinsville,MD,80474,USA,2133839508,Gilpin,waylon.ritchie@email.com,prv2c3,P,Y,Y,N,UNK,Any lab USA,53D1255188,80427 Hilma Springs,,Rollinsville,MD,80474,2930427656,Gilpin,760qrnn,Any facility USA,4482 Byron Ramp,,Rollinsville,MD,80474,2347418784,Gilpin,1231092473,Olson,Patricia,74865 Hilario Way,,Rollinsville,AK,80474,2537155784,Gilpin,shelter\nMD14,D,D,,267,nmfolq,94558-4,71836000,122555007,BD Veritor System for Rapid Detection of SARS-CoV-2,190846,Alaska3,838707,inpzanp25,C,260373001,20220221,202202281336-0500,202202270422-0500,20220301,20220224,2028-9,20160531,A,U,Swahili,8068 McLaughlin Trail,,Rollinsville,MD,80474,USA,2133839508,Gilpin,waylon.ritchie@email.com,prv2c3,P,Y,Y,N,UNK,Any lab USA,53D1255188,80427 Hilma Springs,,Rollinsville,MD,80474,2930427656,Gilpin,760qrnn,Any facility USA,4482 Byron Ramp,,Rollinsville,MD,80474,2347418784,Gilpin,1231092473,Olson,Patricia,74865 Hilario Way,,Rollinsville,AK,80474,2537155784,Gilpin,shelter"}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"7794e9c6-cf88-4e29-baf5-0fd34a493f6e","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:49:48.682+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:49:48.678+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:50:06.808", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:50:06.809", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:50:06.809", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:06.812", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:50:06.817", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:06.822", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:50:06.825", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:50:06.835", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:50:06.840", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:50:06.865", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:06.869", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [uploadSubmissions.content.recordsCount, uploadSubmissions.content.errors.scope, uploadSubmissions.content.__typename, uploadSubmissions.totalElements, uploadSubmissions.content.reportId, uploadSubmissions.content.warnings.message, uploadSubmissions.content.warnings.scope, uploadSubmissions.__typename, uploadSubmissions.content.errors.message, uploadSubmissions.content.createdAt, uploadSubmissions.content.status, uploadSubmissions.content.errors.__typename, uploadSubmissions.content.internalId, uploadSubmissions.content.warnings.__typename]"}
Hibernate: 
    select
        testresult0_.internal_id as internal1_29_,
        testresult0_.created_at as created_2_29_,
        testresult0_.created_by as created_9_29_,
        testresult0_.updated_at as updated_3_29_,
        testresult0_.updated_by as updated10_29_,
        testresult0_.errors as errors4_29_,
        testresult0_.org_id as org_id11_29_,
        testresult0_.records_count as records_5_29_,
        testresult0_.report_id as report_i6_29_,
        testresult0_.status as status7_29_,
        testresult0_.warnings as warnings8_29_ 
    from
        simple_report.upload testresult0_ 
    where
        testresult0_.org_id=? 
        and (
            cast(? as date) is null 
            or testresult0_.created_at>=?
        ) 
        and (
            cast(? as date) is null 
            or testresult0_.created_at<=?
        ) 
    order by
        testresult0_.created_at desc limit ?
{"time": "2022-06-14 15:50:06.883", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"GetUploadSubmissions","query":"query GetUploadSubmissions($startDate: DateTime, $endDate: DateTime, $pageNumber: Int, $pageSize: Int) {\n  uploadSubmissions(\n    startDate: $startDate\n    endDate: $endDate\n    pageNumber: $pageNumber\n    pageSize: $pageSize\n  ) {\n    content {\n      internalId\n      reportId\n      createdAt\n      status\n      recordsCount\n      errors {\n        message\n        scope\n        __typename\n      }\n      warnings {\n        message\n        scope\n        __typename\n      }\n      __typename\n    }\n    totalElements\n    __typename\n  }\n}","variables":{"pageNumber":0,"endDate":null,"pageSize":10,"startDate":null}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"91fcf129-ca5d-434d-9269-deae9a7a30ce","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:50:06.829+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:50:06.825+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:50:06.884", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 16ms"}
{"time": "2022-06-14 15:50:09.447", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:50:09.448", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:50:09.448", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:09.450", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:50:09.456", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:09.460", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:50:09.463", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:50:09.475", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:50:09.480", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:50:09.506", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:09.511", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [uploadSubmission.errors.scope, uploadSubmission.recordsCount, uploadSubmission.warnings.scope, uploadSubmission.warnings.__typename, uploadSubmission.createdAt, uploadSubmission.errors.__typename, uploadSubmission.__typename, uploadSubmission.status, uploadSubmission.errors.message, uploadSubmission.reportId, uploadSubmission.warnings.message]"}
Hibernate: 
    select
        testresult0_.internal_id as internal1_29_,
        testresult0_.created_at as created_2_29_,
        testresult0_.created_by as created_9_29_,
        testresult0_.updated_at as updated_3_29_,
        testresult0_.updated_by as updated10_29_,
        testresult0_.errors as errors4_29_,
        testresult0_.org_id as org_id11_29_,
        testresult0_.records_count as records_5_29_,
        testresult0_.report_id as report_i6_29_,
        testresult0_.status as status7_29_,
        testresult0_.warnings as warnings8_29_ 
    from
        simple_report.upload testresult0_ 
    where
        testresult0_.internal_id=? 
        and testresult0_.org_id=?
{"time": "2022-06-14 15:50:24.419", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"GetUploadSubmission","query":"query GetUploadSubmission($id: ID!) {\n  uploadSubmission(id: $id) {\n    reportId\n    createdAt\n    status\n    recordsCount\n    warnings {\n      message\n      scope\n      __typename\n    }\n    errors {\n      message\n      scope\n      __typename\n    }\n    __typename\n  }\n}","variables":{"id":"7068e980-86fc-49e9-a19a-67275d193d7f"}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"a88fe1b2-bcf6-40f1-9306-b23059f24f5a","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:50:09.468+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:50:09.463+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:50:24.420", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 910ms"}
{"time": "2022-06-14 15:50:52.169", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:50:52.169", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:50:52.169", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:52.172", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:50:52.178", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:52.182", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:50:52.185", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:50:52.197", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:50:52.201", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:50:52.227", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:50:52.232", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [uploadSubmissions.content.recordsCount, uploadSubmissions.content.errors.scope, uploadSubmissions.content.__typename, uploadSubmissions.totalElements, uploadSubmissions.content.reportId, uploadSubmissions.content.warnings.message, uploadSubmissions.content.warnings.scope, uploadSubmissions.__typename, uploadSubmissions.content.errors.message, uploadSubmissions.content.createdAt, uploadSubmissions.content.status, uploadSubmissions.content.errors.__typename, uploadSubmissions.content.internalId, uploadSubmissions.content.warnings.__typename]"}
Hibernate: 
    select
        testresult0_.internal_id as internal1_29_,
        testresult0_.created_at as created_2_29_,
        testresult0_.created_by as created_9_29_,
        testresult0_.updated_at as updated_3_29_,
        testresult0_.updated_by as updated10_29_,
        testresult0_.errors as errors4_29_,
        testresult0_.org_id as org_id11_29_,
        testresult0_.records_count as records_5_29_,
        testresult0_.report_id as report_i6_29_,
        testresult0_.status as status7_29_,
        testresult0_.warnings as warnings8_29_ 
    from
        simple_report.upload testresult0_ 
    where
        testresult0_.org_id=? 
        and (
            cast(? as date) is null 
            or testresult0_.created_at>=?
        ) 
        and (
            cast(? as date) is null 
            or testresult0_.created_at<=?
        ) 
    order by
        testresult0_.created_at desc limit ?
{"time": "2022-06-14 15:50:52.241", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"GetUploadSubmissions","query":"query GetUploadSubmissions($startDate: DateTime, $endDate: DateTime, $pageNumber: Int, $pageSize: Int) {\n  uploadSubmissions(\n    startDate: $startDate\n    endDate: $endDate\n    pageNumber: $pageNumber\n    pageSize: $pageSize\n  ) {\n    content {\n      internalId\n      reportId\n      createdAt\n      status\n      recordsCount\n      errors {\n        message\n        scope\n        __typename\n      }\n      warnings {\n        message\n        scope\n        __typename\n      }\n      __typename\n    }\n    totalElements\n    __typename\n  }\n}","variables":{"pageNumber":0,"endDate":null,"pageSize":10,"startDate":null}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"c3cbd1ae-6954-409d-8da4-1d4b20ae40ca","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:50:52.189+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:50:52.185+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:50:52.242", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 12ms"}
{"time": "2022-06-14 15:51:02.888", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:51:02.888", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:51:02.888", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:51:02.907", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:51:02.929", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:51:02.937", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:51:02.942", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:51:02.951", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:51:02.956", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:51:02.980", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:51:02.984", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [uploadSubmission.errors.scope, uploadSubmission.recordsCount, uploadSubmission.warnings.scope, uploadSubmission.warnings.__typename, uploadSubmission.createdAt, uploadSubmission.errors.__typename, uploadSubmission.__typename, uploadSubmission.status, uploadSubmission.errors.message, uploadSubmission.reportId, uploadSubmission.warnings.message]"}
Hibernate: 
    select
        testresult0_.internal_id as internal1_29_,
        testresult0_.created_at as created_2_29_,
        testresult0_.created_by as created_9_29_,
        testresult0_.updated_at as updated_3_29_,
        testresult0_.updated_by as updated10_29_,
        testresult0_.errors as errors4_29_,
        testresult0_.org_id as org_id11_29_,
        testresult0_.records_count as records_5_29_,
        testresult0_.report_id as report_i6_29_,
        testresult0_.status as status7_29_,
        testresult0_.warnings as warnings8_29_ 
    from
        simple_report.upload testresult0_ 
    where
        testresult0_.internal_id=? 
        and testresult0_.org_id=?
{"time": "2022-06-14 15:51:16.462", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"GetUploadSubmission","query":"query GetUploadSubmission($id: ID!) {\n  uploadSubmission(id: $id) {\n    reportId\n    createdAt\n    status\n    recordsCount\n    warnings {\n      message\n      scope\n      __typename\n    }\n    errors {\n      message\n      scope\n      __typename\n    }\n    __typename\n  }\n}","variables":{"id":"7068e980-86fc-49e9-a19a-67275d193d7f"}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"3a1db2f2-dded-4abf-a242-959dc113d4d5","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:51:02.946+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:51:02.943+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:51:16.462", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 479ms"}
{"time": "2022-06-14 15:52:04.802", "level": "DEBUG", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:58", "message": "Processing request for demo authentication: current auth is AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]"}
{"time": "2022-06-14 15:52:04.802", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:64", "message": "Auth type is null, header is Bearer null"}
{"time": "2022-06-14 15:52:04.803", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:52:04.806", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:52:04.812", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:52:04.818", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        apiuser0_.internal_id as internal1_0_,
        apiuser0_.created_at as created_2_0_,
        apiuser0_.updated_at as updated_3_0_,
        apiuser0_.is_deleted as is_delet4_0_,
        apiuser0_.last_seen as last_see5_0_,
        apiuser0_.login_email as login_em6_0_,
        apiuser0_.first_name as first_na7_0_,
        apiuser0_.last_name as last_nam8_0_,
        apiuser0_.middle_name as middle_n9_0_,
        apiuser0_.suffix as suffix10_0_ 
    from
        simple_report.api_user apiuser0_ 
    where
        apiuser0_.is_deleted=false 
        and apiuser0_.login_email=?
{"time": "2022-06-14 15:52:04.822", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:488", "message": "User has logged in before: retrieving user record."}
Hibernate: 
    select
        tenantdata0_.internal_id as internal1_23_,
        tenantdata0_.created_at as created_2_23_,
        tenantdata0_.created_by as created_8_23_,
        tenantdata0_.updated_at as updated_3_23_,
        tenantdata0_.updated_by as updated_9_23_,
        tenantdata0_.is_deleted as is_delet4_23_,
        tenantdata0_.expires_at as expires_5_23_,
        tenantdata0_.api_user_internal_id as api_use10_23_,
        tenantdata0_.justification as justific6_23_,
        tenantdata0_.organization_internal_id as organiz11_23_,
        tenantdata0_.permissions_data as permissi7_23_ 
    from
        simple_report.tenant_data_access tenantdata0_ 
    where
        tenantdata0_.is_deleted=false 
        and api_user_internal_id=? 
        and tenantdata0_.expires_at>now()
Hibernate: 
    update
        simple_report.api_user 
    set
        updated_at=?,
        last_seen=? 
    where
        internal_id=?
{"time": "2022-06-14 15:52:04.832", "level": "DEBUG", "source": "g.c.u.s.service.ApiUserService:513", "message": "Retrieving user from request context"}
{"time": "2022-06-14 15:52:04.838", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
Hibernate: 
    select
        organizati0_.internal_id as internal1_10_,
        organizati0_.created_at as created_2_10_,
        organizati0_.created_by as created_9_10_,
        organizati0_.updated_at as updated_3_10_,
        organizati0_.updated_by as updated10_10_,
        organizati0_.is_deleted as is_delet4_10_,
        organizati0_.organization_external_id as organiza5_10_,
        organizati0_.identity_verified as identity6_10_,
        organizati0_.organization_name as organiza7_10_,
        organizati0_.organization_type as organiza8_10_ 
    from
        simple_report.organization organizati0_ 
    where
        organizati0_.is_deleted=false 
        and (
            organizati0_.organization_external_id in (
                ?
            )
        )
Hibernate: 
    select
        facility0_.internal_id as internal1_6_,
        facility0_.created_at as created_2_6_,
        facility0_.created_by as created14_6_,
        facility0_.updated_at as updated_3_6_,
        facility0_.updated_by as updated15_6_,
        facility0_.is_deleted as is_delet4_6_,
        facility0_.organization_id as organiz16_6_,
        facility0_.city as city5_6_,
        facility0_.county as county6_6_,
        facility0_.postal_code as postal_c7_6_,
        facility0_.state as state8_6_,
        facility0_.street as street9_6_,
        facility0_.clia_number as clia_nu10_6_,
        facility0_.default_device_specimen_type_id as default17_6_,
        facility0_.default_device_type_id as default18_6_,
        facility0_.default_specimen_type_id as default19_6_,
        facility0_.email as email11_6_,
        facility0_.facility_name as facilit12_6_,
        facility0_.ordering_provider_id as orderin20_6_,
        facility0_.telephone as telepho13_6_ 
    from
        simple_report.facility facility0_ 
    where
        facility0_.is_deleted=false 
        and facility0_.organization_id=?
Hibernate: 
    select
        devicespec0_.internal_id as internal1_4_0_,
        devicespec0_.created_at as created_2_4_0_,
        devicespec0_.created_by as created_5_4_0_,
        devicespec0_.updated_at as updated_3_4_0_,
        devicespec0_.updated_by as updated_6_4_0_,
        devicespec0_.is_deleted as is_delet4_4_0_,
        devicespec0_.device_type_id as device_t7_4_0_,
        devicespec0_.specimen_type_id as specimen8_4_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_,
        specimenty2_.internal_id as internal1_21_2_,
        specimenty2_.created_at as created_2_21_2_,
        specimenty2_.created_by as created_9_21_2_,
        specimenty2_.updated_at as updated_3_21_2_,
        specimenty2_.updated_by as updated10_21_2_,
        specimenty2_.is_deleted as is_delet4_21_2_,
        specimenty2_.collection_location_code as collecti5_21_2_,
        specimenty2_.collection_location_name as collecti6_21_2_,
        specimenty2_.name as name7_21_2_,
        specimenty2_.type_code as type_cod8_21_2_ 
    from
        simple_report.device_specimen_type devicespec0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on devicespec0_.device_type_id=devicetype1_.internal_id 
    inner join
        simple_report.specimen_type specimenty2_ 
            on devicespec0_.specimen_type_id=specimenty2_.internal_id 
    where
        devicespec0_.internal_id=?
Hibernate: 
    select
        provider0_.internal_id as internal1_18_0_,
        provider0_.created_at as created_2_18_0_,
        provider0_.created_by as created16_18_0_,
        provider0_.updated_at as updated_3_18_0_,
        provider0_.updated_by as updated17_18_0_,
        provider0_.is_deleted as is_delet4_18_0_,
        provider0_.city as city5_18_0_,
        provider0_.county as county6_18_0_,
        provider0_.postal_code as postal_c7_18_0_,
        provider0_.state as state8_18_0_,
        provider0_.street as street9_18_0_,
        provider0_.first_name as first_n10_18_0_,
        provider0_.last_name as last_na11_18_0_,
        provider0_.middle_name as middle_12_18_0_,
        provider0_.suffix as suffix13_18_0_,
        provider0_.provider_id as provide14_18_0_,
        provider0_.telephone as telepho15_18_0_ 
    from
        simple_report.provider provider0_ 
    where
        provider0_.internal_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_8_0_,
        configured0_.device_type_id as device_t2_8_0_,
        devicetype1_.internal_id as internal1_5_1_,
        devicetype1_.created_at as created_2_5_1_,
        devicetype1_.created_by as created11_5_1_,
        devicetype1_.updated_at as updated_3_5_1_,
        devicetype1_.updated_by as updated12_5_1_,
        devicetype1_.is_deleted as is_delet4_5_1_,
        devicetype1_.loinc_code as loinc_co5_5_1_,
        devicetype1_.manufacturer as manufact6_5_1_,
        devicetype1_.model as model7_5_1_,
        devicetype1_.name as name8_5_1_,
        devicetype1_.swab_type as swab_typ9_5_1_,
        devicetype1_.test_length as test_le10_5_1_ 
    from
        simple_report.facility_device_type configured0_ 
    inner join
        simple_report.device_type devicetype1_ 
            on configured0_.device_type_id=devicetype1_.internal_id 
    where
        configured0_.facility_id=?
Hibernate: 
    select
        configured0_.facility_id as facility1_7_0_,
        configured0_.device_specimen_type_id as device_s2_7_0_,
        devicespec1_.internal_id as internal1_4_1_,
        devicespec1_.created_at as created_2_4_1_,
        devicespec1_.created_by as created_5_4_1_,
        devicespec1_.updated_at as updated_3_4_1_,
        devicespec1_.updated_by as updated_6_4_1_,
        devicespec1_.is_deleted as is_delet4_4_1_,
        devicespec1_.device_type_id as device_t7_4_1_,
        devicespec1_.specimen_type_id as specimen8_4_1_,
        devicetype2_.internal_id as internal1_5_2_,
        devicetype2_.created_at as created_2_5_2_,
        devicetype2_.created_by as created11_5_2_,
        devicetype2_.updated_at as updated_3_5_2_,
        devicetype2_.updated_by as updated12_5_2_,
        devicetype2_.is_deleted as is_delet4_5_2_,
        devicetype2_.loinc_code as loinc_co5_5_2_,
        devicetype2_.manufacturer as manufact6_5_2_,
        devicetype2_.model as model7_5_2_,
        devicetype2_.name as name8_5_2_,
        devicetype2_.swab_type as swab_typ9_5_2_,
        devicetype2_.test_length as test_le10_5_2_,
        specimenty3_.internal_id as internal1_21_3_,
        specimenty3_.created_at as created_2_21_3_,
        specimenty3_.created_by as created_9_21_3_,
        specimenty3_.updated_at as updated_3_21_3_,
        specimenty3_.updated_by as updated10_21_3_,
        specimenty3_.is_deleted as is_delet4_21_3_,
        specimenty3_.collection_location_code as collecti5_21_3_,
        specimenty3_.collection_location_name as collecti6_21_3_,
        specimenty3_.name as name7_21_3_,
        specimenty3_.type_code as type_cod8_21_3_ 
    from
        simple_report.facility_device_specimen_type configured0_ 
    inner join
        simple_report.device_specimen_type devicespec1_ 
            on configured0_.device_specimen_type_id=devicespec1_.internal_id 
    inner join
        simple_report.device_type devicetype2_ 
            on devicespec1_.device_type_id=devicetype2_.internal_id 
    inner join
        simple_report.specimen_type specimenty3_ 
            on devicespec1_.specimen_type_id=specimenty3_.internal_id 
    where
        configured0_.facility_id=?
{"time": "2022-06-14 15:52:04.864", "level": "INFO", "source": "g.c.u.s.c.a.DemoAuthenticationConfiguration:124", "message": "Unauthenticated user in demo mode: current user will be default (if available)"}
{"time": "2022-06-14 15:52:04.868", "level": "DEBUG", "source": "g.c.u.s.l.QueryLoggingInstrumentation:49", "message": "Selecting fields: [uploadSubmissions.content.recordsCount, uploadSubmissions.content.errors.scope, uploadSubmissions.content.__typename, uploadSubmissions.totalElements, uploadSubmissions.content.reportId, uploadSubmissions.content.warnings.message, uploadSubmissions.content.warnings.scope, uploadSubmissions.__typename, uploadSubmissions.content.errors.message, uploadSubmissions.content.createdAt, uploadSubmissions.content.status, uploadSubmissions.content.errors.__typename, uploadSubmissions.content.internalId, uploadSubmissions.content.warnings.__typename]"}
Hibernate: 
    select
        testresult0_.internal_id as internal1_29_,
        testresult0_.created_at as created_2_29_,
        testresult0_.created_by as created_9_29_,
        testresult0_.updated_at as updated_3_29_,
        testresult0_.updated_by as updated10_29_,
        testresult0_.errors as errors4_29_,
        testresult0_.org_id as org_id11_29_,
        testresult0_.records_count as records_5_29_,
        testresult0_.report_id as report_i6_29_,
        testresult0_.status as status7_29_,
        testresult0_.warnings as warnings8_29_ 
    from
        simple_report.upload testresult0_ 
    where
        testresult0_.org_id=? 
        and (
            cast(? as date) is null 
            or testresult0_.created_at>=?
        ) 
        and (
            cast(? as date) is null 
            or testresult0_.created_at<=?
        ) 
    order by
        testresult0_.created_at desc limit ?
{"time": "2022-06-14 15:52:04.877", "level": "INFO", "source": "g.c.u.simplereport.service.AuditService:?", "message": {"type":"auditLog","httpRequestDetails":{"serverName":"localhost","remoteAddress":"0:0:0:0:0:0:0:1","forwardedAddresses":[],"forwardedProtocol":null,"originalHostName":null,"requestUri":"/graphql"},"graphqlQueryDetails":{"operationName":"GetUploadSubmissions","query":"query GetUploadSubmissions($startDate: DateTime, $endDate: DateTime, $pageNumber: Int, $pageSize: Int) {\n  uploadSubmissions(\n    startDate: $startDate\n    endDate: $endDate\n    pageNumber: $pageNumber\n    pageSize: $pageSize\n  ) {\n    content {\n      internalId\n      reportId\n      createdAt\n      status\n      recordsCount\n      errors {\n        message\n        scope\n        __typename\n      }\n      warnings {\n        message\n        scope\n        __typename\n      }\n      __typename\n    }\n    totalElements\n    __typename\n  }\n}","variables":{"pageNumber":0,"endDate":null,"pageSize":10,"startDate":null}},"graphqlErrorPaths":[],"userPermissions":["ACCESS_ALL_FACILITIES","ARCHIVE_PATIENT","EDIT_FACILITY","EDIT_ORGANIZATION","EDIT_PATIENT","MANAGE_USERS","READ_ARCHIVED_PATIENT_LIST","READ_PATIENT_LIST","READ_RESULT_LIST","SEARCH_PATIENTS","SR_CSV_UPLOADER_PILOT","START_TEST","SUBMIT_TEST","UPDATE_TEST","VIEW_ARCHIVED_FACILITIES"],"organization":{"internalId":"5308a196-b8dc-446e-8db0-465cc0049f03","createdAt":"2022-06-14T17:59:40.711+00:00","updatedAt":"2022-06-14T17:59:40.711+00:00","organizationName":"Dis Organization","organizationType":"university","externalId":"DIS_ORG","identityVerified":true},"patientLink":null,"requestId":"5c2311c8-886c-4dbd-b416-a5b4213573ea","responseCode":200,"user":{"internalId":"10b0dc79-41f4-462a-a052-a2d9f8f17f24","createdAt":"2022-06-14T17:59:40.420+00:00","updatedAt":"2022-06-14T19:52:04.826+00:00","loginEmail":"bob@example.com","nameInfo":{"firstName":"Bob","middleName":null,"lastName":"Bobberoo","suffix":null},"lastSeen":"2022-06-14T19:52:04.822+00:00"},"session":null,"adminUser":true}}
{"time": "2022-06-14 15:52:04.878", "level": "DEBUG", "source": "g.c.u.s.logging.GraphQLLoggingHelpers:86", "message": "GraphQL execution COMPLETED in 11ms"}
